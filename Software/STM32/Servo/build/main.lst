ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc6MxZ0H.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"main.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  25              	MX_GPIO_Init:
  26              	.LFB127:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** 
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc6MxZ0H.s 			page 2


  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  40:Src/main.c    **** #include "main.h"
  41:Src/main.c    **** #include "stm32f4xx_hal.h"
  42:Src/main.c    **** 
  43:Src/main.c    **** /* USER CODE BEGIN Includes */
  44:Src/main.c    **** 
  45:Src/main.c    **** /* USER CODE END Includes */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  48:Src/main.c    **** TIM_HandleTypeDef htim1;
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE BEGIN PV */
  51:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  52:Src/main.c    **** 
  53:Src/main.c    **** /* USER CODE END PV */
  54:Src/main.c    **** 
  55:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  56:Src/main.c    **** void SystemClock_Config(void);
  57:Src/main.c    **** static void MX_GPIO_Init(void);
  58:Src/main.c    **** static void MX_TIM1_Init(void);                                    
  59:Src/main.c    **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
  60:Src/main.c    ****                                 
  61:Src/main.c    **** 
  62:Src/main.c    **** /* USER CODE BEGIN PFP */
  63:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE END PFP */
  66:Src/main.c    **** 
  67:Src/main.c    **** /* USER CODE BEGIN 0 */
  68:Src/main.c    **** /* pulse_length(degrees) = (MAX - MIN) * degrees / 180 + MIN */
  69:Src/main.c    **** int pulse_length(uint32_t deg) {
  70:Src/main.c    ****   return htim1.Init.Period * (0.1 - 0.05) * deg / 180 + htim1.Init.Period * 0.05;
  71:Src/main.c    **** }
  72:Src/main.c    **** /* USER CODE END 0 */
  73:Src/main.c    **** 
  74:Src/main.c    **** /**
  75:Src/main.c    ****   * @brief  The application entry point.
  76:Src/main.c    ****   *
  77:Src/main.c    ****   * @retval None
  78:Src/main.c    ****   */
  79:Src/main.c    **** int main(void)
  80:Src/main.c    **** {
  81:Src/main.c    ****   /* USER CODE BEGIN 1 */
  82:Src/main.c    **** 
  83:Src/main.c    ****   /* USER CODE END 1 */
  84:Src/main.c    **** 
  85:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
  86:Src/main.c    **** 
  87:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  88:Src/main.c    ****   HAL_Init();
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc6MxZ0H.s 			page 3


  89:Src/main.c    **** 
  90:Src/main.c    ****   /* USER CODE BEGIN Init */
  91:Src/main.c    **** 
  92:Src/main.c    ****   /* USER CODE END Init */
  93:Src/main.c    **** 
  94:Src/main.c    ****   /* Configure the system clock */
  95:Src/main.c    ****   SystemClock_Config();
  96:Src/main.c    **** 
  97:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  98:Src/main.c    **** 
  99:Src/main.c    ****   /* USER CODE END SysInit */
 100:Src/main.c    **** 
 101:Src/main.c    ****   /* Initialize all configured peripherals */
 102:Src/main.c    ****   MX_GPIO_Init();
 103:Src/main.c    ****   MX_TIM1_Init();
 104:Src/main.c    ****   /* USER CODE BEGIN 2 */
 105:Src/main.c    **** 
 106:Src/main.c    ****   // Initialization of PWM
 107:Src/main.c    ****   // HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 108:Src/main.c    ****   // HAL_TIM_PWM_Stop(&htim1, TIM_CHANNEL_1);
 109:Src/main.c    **** 
 110:Src/main.c    ****   // __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, 5000);
 111:Src/main.c    ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 112:Src/main.c    ****   /* USER CODE END 2 */
 113:Src/main.c    **** 
 114:Src/main.c    ****   /* Infinite loop */
 115:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 116:Src/main.c    ****   while (1)
 117:Src/main.c    ****   {
 118:Src/main.c    ****     __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, htim1.Init.Period * (0.8 / 20));
 119:Src/main.c    ****     HAL_Delay(1500);
 120:Src/main.c    ****     // __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, htim1.Init.Period * (0.5 / 20));
 121:Src/main.c    ****     // HAL_Delay(750);
 122:Src/main.c    ****     // __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, htim1.Init.Period * (0.75 / 20));
 123:Src/main.c    ****     // HAL_Delay(750);
 124:Src/main.c    ****     // __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, htim1.Init.Period * (1.0 / 20));
 125:Src/main.c    ****     // HAL_Delay(750);
 126:Src/main.c    ****     // __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, htim1.Init.Period * (1.25 / 20));
 127:Src/main.c    ****     // HAL_Delay(750);
 128:Src/main.c    ****     // __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, htim1.Init.Period * (1.50 / 20));
 129:Src/main.c    ****     // HAL_Delay(750);
 130:Src/main.c    ****     // __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, htim1.Init.Period * (1.75 / 20));
 131:Src/main.c    ****     // HAL_Delay(750);
 132:Src/main.c    ****     // __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, htim1.Init.Period * (2.0 / 20));
 133:Src/main.c    ****     // HAL_Delay(750);
 134:Src/main.c    ****     // __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, htim1.Init.Period * (2.25 / 20));
 135:Src/main.c    ****     // HAL_Delay(750);
 136:Src/main.c    ****     __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, htim1.Init.Period * (2.5 / 20));
 137:Src/main.c    ****     HAL_Delay(1500);
 138:Src/main.c    **** 
 139:Src/main.c    ****   /* USER CODE END WHILE */
 140:Src/main.c    **** 
 141:Src/main.c    ****   /* USER CODE BEGIN 3 */
 142:Src/main.c    **** 
 143:Src/main.c    ****   }
 144:Src/main.c    ****   /* USER CODE END 3 */
 145:Src/main.c    **** 
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc6MxZ0H.s 			page 4


 146:Src/main.c    **** }
 147:Src/main.c    **** 
 148:Src/main.c    **** /**
 149:Src/main.c    ****   * @brief System Clock Configuration
 150:Src/main.c    ****   * @retval None
 151:Src/main.c    ****   */
 152:Src/main.c    **** void SystemClock_Config(void)
 153:Src/main.c    **** {
 154:Src/main.c    **** 
 155:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 156:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 157:Src/main.c    **** 
 158:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 159:Src/main.c    ****     */
 160:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 161:Src/main.c    **** 
 162:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 163:Src/main.c    **** 
 164:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 165:Src/main.c    ****     */
 166:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 167:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 168:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 169:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 170:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 171:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 172:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 84;
 173:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 174:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 175:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 176:Src/main.c    ****   {
 177:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 178:Src/main.c    ****   }
 179:Src/main.c    **** 
 180:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 181:Src/main.c    ****     */
 182:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 183:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 184:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 185:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 186:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 187:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 188:Src/main.c    **** 
 189:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 190:Src/main.c    ****   {
 191:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 192:Src/main.c    ****   }
 193:Src/main.c    **** 
 194:Src/main.c    ****     /**Configure the Systick interrupt time 
 195:Src/main.c    ****     */
 196:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 197:Src/main.c    **** 
 198:Src/main.c    ****     /**Configure the Systick 
 199:Src/main.c    ****     */
 200:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 201:Src/main.c    **** 
 202:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc6MxZ0H.s 			page 5


 203:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 204:Src/main.c    **** }
 205:Src/main.c    **** 
 206:Src/main.c    **** /* TIM1 init function */
 207:Src/main.c    **** static void MX_TIM1_Init(void)
 208:Src/main.c    **** {
 209:Src/main.c    **** 
 210:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig;
 211:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
 212:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
 213:Src/main.c    ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig;
 214:Src/main.c    **** 
 215:Src/main.c    ****   htim1.Instance = TIM1;
 216:Src/main.c    ****   htim1.Init.Prescaler = 840;
 217:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 218:Src/main.c    ****   htim1.Init.Period = 2000;
 219:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 220:Src/main.c    ****   htim1.Init.RepetitionCounter = 0;
 221:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 222:Src/main.c    ****   {
 223:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 224:Src/main.c    ****   }
 225:Src/main.c    **** 
 226:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 227:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 228:Src/main.c    ****   {
 229:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 230:Src/main.c    ****   }
 231:Src/main.c    **** 
 232:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 233:Src/main.c    ****   {
 234:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 235:Src/main.c    ****   }
 236:Src/main.c    **** 
 237:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 238:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 239:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 240:Src/main.c    ****   {
 241:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 242:Src/main.c    ****   }
 243:Src/main.c    **** 
 244:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 245:Src/main.c    ****   sConfigOC.Pulse = 1000;
 246:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 247:Src/main.c    ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 248:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 249:Src/main.c    ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 250:Src/main.c    ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 251:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 252:Src/main.c    ****   {
 253:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 254:Src/main.c    ****   }
 255:Src/main.c    **** 
 256:Src/main.c    ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 257:Src/main.c    ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 258:Src/main.c    ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 259:Src/main.c    ****   sBreakDeadTimeConfig.DeadTime = 0;
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc6MxZ0H.s 			page 6


 260:Src/main.c    ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 261:Src/main.c    ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 262:Src/main.c    ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 263:Src/main.c    ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 264:Src/main.c    ****   {
 265:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 266:Src/main.c    ****   }
 267:Src/main.c    **** 
 268:Src/main.c    ****   HAL_TIM_MspPostInit(&htim1);
 269:Src/main.c    **** 
 270:Src/main.c    **** }
 271:Src/main.c    **** 
 272:Src/main.c    **** /** Pinout Configuration
 273:Src/main.c    **** */
 274:Src/main.c    **** static void MX_GPIO_Init(void)
 275:Src/main.c    **** {
  28              		.loc 1 275 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 82B0     		sub	sp, sp, #8
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              	.LBB2:
 276:Src/main.c    **** 
 277:Src/main.c    ****   /* GPIO Ports Clock Enable */
 278:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  37              		.loc 1 278 0
  38 0002 0023     		movs	r3, #0
  39 0004 0193     		str	r3, [sp, #4]
  40 0006 064B     		ldr	r3, .L3
  41 0008 1A6B     		ldr	r2, [r3, #48]
  42 000a 42F00102 		orr	r2, r2, #1
  43 000e 1A63     		str	r2, [r3, #48]
  44 0010 1B6B     		ldr	r3, [r3, #48]
  45 0012 03F00103 		and	r3, r3, #1
  46 0016 0193     		str	r3, [sp, #4]
  47 0018 019B     		ldr	r3, [sp, #4]
  48              	.LBE2:
 279:Src/main.c    **** 
 280:Src/main.c    **** }
  49              		.loc 1 280 0
  50 001a 02B0     		add	sp, sp, #8
  51              	.LCFI1:
  52              		.cfi_def_cfa_offset 0
  53              		@ sp needed
  54 001c 7047     		bx	lr
  55              	.L4:
  56 001e 00BF     		.align	2
  57              	.L3:
  58 0020 00380240 		.word	1073887232
  59              		.cfi_endproc
  60              	.LFE127:
  62              		.global	__aeabi_ui2d
  63              		.global	__aeabi_dmul
  64              		.global	__aeabi_ddiv
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc6MxZ0H.s 			page 7


  65              		.global	__aeabi_dadd
  66              		.global	__aeabi_d2iz
  67              		.section	.text.pulse_length,"ax",%progbits
  68              		.align	2
  69              		.global	pulse_length
  70              		.thumb
  71              		.thumb_func
  73              	pulse_length:
  74              	.LFB123:
  69:Src/main.c    ****   return htim1.Init.Period * (0.1 - 0.05) * deg / 180 + htim1.Init.Period * 0.05;
  75              		.loc 1 69 0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79              	.LVL0:
  80 0000 70B5     		push	{r4, r5, r6, lr}
  81              	.LCFI2:
  82              		.cfi_def_cfa_offset 16
  83              		.cfi_offset 4, -16
  84              		.cfi_offset 5, -12
  85              		.cfi_offset 6, -8
  86              		.cfi_offset 14, -4
  87 0002 0646     		mov	r6, r0
  70:Src/main.c    **** }
  88              		.loc 1 70 0
  89 0004 124B     		ldr	r3, .L7+8
  90 0006 D868     		ldr	r0, [r3, #12]
  91              	.LVL1:
  92 0008 FFF7FEFF 		bl	__aeabi_ui2d
  93              	.LVL2:
  94 000c 0EA3     		adr	r3, .L7
  95 000e D3E90023 		ldrd	r2, [r3]
  96 0012 FFF7FEFF 		bl	__aeabi_dmul
  97              	.LVL3:
  98 0016 0446     		mov	r4, r0
  99 0018 0D46     		mov	r5, r1
 100 001a 3046     		mov	r0, r6
 101 001c FFF7FEFF 		bl	__aeabi_ui2d
 102              	.LVL4:
 103 0020 0246     		mov	r2, r0
 104 0022 0B46     		mov	r3, r1
 105 0024 2046     		mov	r0, r4
 106 0026 2946     		mov	r1, r5
 107 0028 FFF7FEFF 		bl	__aeabi_dmul
 108              	.LVL5:
 109 002c 0022     		movs	r2, #0
 110 002e 094B     		ldr	r3, .L7+12
 111 0030 FFF7FEFF 		bl	__aeabi_ddiv
 112              	.LVL6:
 113 0034 0246     		mov	r2, r0
 114 0036 0B46     		mov	r3, r1
 115 0038 2046     		mov	r0, r4
 116 003a 2946     		mov	r1, r5
 117 003c FFF7FEFF 		bl	__aeabi_dadd
 118              	.LVL7:
 119 0040 FFF7FEFF 		bl	__aeabi_d2iz
 120              	.LVL8:
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc6MxZ0H.s 			page 8


  71:Src/main.c    **** /* USER CODE END 0 */
 121              		.loc 1 71 0
 122 0044 70BD     		pop	{r4, r5, r6, pc}
 123              	.LVL9:
 124              	.L8:
 125 0046 00BF     		.align	3
 126              	.L7:
 127 0048 9A999999 		.word	2576980378
 128 004c 9999A93F 		.word	1068079513
 129 0050 00000000 		.word	htim1
 130 0054 00806640 		.word	1080459264
 131              		.cfi_endproc
 132              	.LFE123:
 134              		.section	.text._Error_Handler,"ax",%progbits
 135              		.align	2
 136              		.global	_Error_Handler
 137              		.thumb
 138              		.thumb_func
 140              	_Error_Handler:
 141              	.LFB128:
 281:Src/main.c    **** 
 282:Src/main.c    **** /* USER CODE BEGIN 4 */
 283:Src/main.c    **** 
 284:Src/main.c    **** /* USER CODE END 4 */
 285:Src/main.c    **** 
 286:Src/main.c    **** /**
 287:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 288:Src/main.c    ****   * @param  file: The file name as string.
 289:Src/main.c    ****   * @param  line: The line in file as a number.
 290:Src/main.c    ****   * @retval None
 291:Src/main.c    ****   */
 292:Src/main.c    **** void _Error_Handler(char *file, int line)
 293:Src/main.c    **** {
 142              		.loc 1 293 0
 143              		.cfi_startproc
 144              		@ Volatile: function does not return.
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147              		@ link register save eliminated.
 148              	.LVL10:
 149              	.L10:
 294:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 295:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 296:Src/main.c    ****   while(1)
 297:Src/main.c    ****   {
 298:Src/main.c    ****   }
 150              		.loc 1 298 0 discriminator 1
 151 0000 FEE7     		b	.L10
 152              		.cfi_endproc
 153              	.LFE128:
 155 0002 00BF     		.section	.text.MX_TIM1_Init,"ax",%progbits
 156              		.align	2
 157              		.thumb
 158              		.thumb_func
 160              	MX_TIM1_Init:
 161              	.LFB126:
 208:Src/main.c    **** 
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc6MxZ0H.s 			page 9


 162              		.loc 1 208 0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 80
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166 0000 00B5     		push	{lr}
 167              	.LCFI3:
 168              		.cfi_def_cfa_offset 4
 169              		.cfi_offset 14, -4
 170 0002 95B0     		sub	sp, sp, #84
 171              	.LCFI4:
 172              		.cfi_def_cfa_offset 88
 215:Src/main.c    ****   htim1.Init.Prescaler = 840;
 173              		.loc 1 215 0
 174 0004 3148     		ldr	r0, .L19
 175 0006 324B     		ldr	r3, .L19+4
 176 0008 0360     		str	r3, [r0]
 216:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 177              		.loc 1 216 0
 178 000a 4FF45273 		mov	r3, #840
 179 000e 4360     		str	r3, [r0, #4]
 217:Src/main.c    ****   htim1.Init.Period = 2000;
 180              		.loc 1 217 0
 181 0010 0023     		movs	r3, #0
 182 0012 8360     		str	r3, [r0, #8]
 218:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 183              		.loc 1 218 0
 184 0014 4FF4FA62 		mov	r2, #2000
 185 0018 C260     		str	r2, [r0, #12]
 219:Src/main.c    ****   htim1.Init.RepetitionCounter = 0;
 186              		.loc 1 219 0
 187 001a 0361     		str	r3, [r0, #16]
 220:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 188              		.loc 1 220 0
 189 001c 4361     		str	r3, [r0, #20]
 221:Src/main.c    ****   {
 190              		.loc 1 221 0
 191 001e FFF7FEFF 		bl	HAL_TIM_Base_Init
 192              	.LVL11:
 193 0022 18B1     		cbz	r0, .L12
 223:Src/main.c    ****   }
 194              		.loc 1 223 0
 195 0024 2B48     		ldr	r0, .L19+8
 196 0026 DF21     		movs	r1, #223
 197 0028 FFF7FEFF 		bl	_Error_Handler
 198              	.LVL12:
 199              	.L12:
 226:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 200              		.loc 1 226 0
 201 002c 14A9     		add	r1, sp, #80
 202 002e 4FF48053 		mov	r3, #4096
 203 0032 41F8103D 		str	r3, [r1, #-16]!
 227:Src/main.c    ****   {
 204              		.loc 1 227 0
 205 0036 2548     		ldr	r0, .L19
 206 0038 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 207              	.LVL13:
 208 003c 18B1     		cbz	r0, .L13
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc6MxZ0H.s 			page 10


 229:Src/main.c    ****   }
 209              		.loc 1 229 0
 210 003e 2548     		ldr	r0, .L19+8
 211 0040 E521     		movs	r1, #229
 212 0042 FFF7FEFF 		bl	_Error_Handler
 213              	.LVL14:
 214              	.L13:
 232:Src/main.c    ****   {
 215              		.loc 1 232 0
 216 0046 2148     		ldr	r0, .L19
 217 0048 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 218              	.LVL15:
 219 004c 18B1     		cbz	r0, .L14
 234:Src/main.c    ****   }
 220              		.loc 1 234 0
 221 004e 2148     		ldr	r0, .L19+8
 222 0050 EA21     		movs	r1, #234
 223 0052 FFF7FEFF 		bl	_Error_Handler
 224              	.LVL16:
 225              	.L14:
 237:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 226              		.loc 1 237 0
 227 0056 0023     		movs	r3, #0
 228 0058 0E93     		str	r3, [sp, #56]
 238:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 229              		.loc 1 238 0
 230 005a 0F93     		str	r3, [sp, #60]
 239:Src/main.c    ****   {
 231              		.loc 1 239 0
 232 005c 1B48     		ldr	r0, .L19
 233 005e 0EA9     		add	r1, sp, #56
 234 0060 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 235              	.LVL17:
 236 0064 18B1     		cbz	r0, .L15
 241:Src/main.c    ****   }
 237              		.loc 1 241 0
 238 0066 1B48     		ldr	r0, .L19+8
 239 0068 F121     		movs	r1, #241
 240 006a FFF7FEFF 		bl	_Error_Handler
 241              	.LVL18:
 242              	.L15:
 244:Src/main.c    ****   sConfigOC.Pulse = 1000;
 243              		.loc 1 244 0
 244 006e 6023     		movs	r3, #96
 245 0070 0793     		str	r3, [sp, #28]
 245:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 246              		.loc 1 245 0
 247 0072 4FF47A73 		mov	r3, #1000
 248 0076 0893     		str	r3, [sp, #32]
 246:Src/main.c    ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 249              		.loc 1 246 0
 250 0078 0022     		movs	r2, #0
 251 007a 0992     		str	r2, [sp, #36]
 247:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 252              		.loc 1 247 0
 253 007c 0A92     		str	r2, [sp, #40]
 248:Src/main.c    ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc6MxZ0H.s 			page 11


 254              		.loc 1 248 0
 255 007e 0B92     		str	r2, [sp, #44]
 249:Src/main.c    ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 256              		.loc 1 249 0
 257 0080 0C92     		str	r2, [sp, #48]
 250:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 258              		.loc 1 250 0
 259 0082 0D92     		str	r2, [sp, #52]
 251:Src/main.c    ****   {
 260              		.loc 1 251 0
 261 0084 1148     		ldr	r0, .L19
 262 0086 07A9     		add	r1, sp, #28
 263 0088 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 264              	.LVL19:
 265 008c 18B1     		cbz	r0, .L16
 253:Src/main.c    ****   }
 266              		.loc 1 253 0
 267 008e 1148     		ldr	r0, .L19+8
 268 0090 FD21     		movs	r1, #253
 269 0092 FFF7FEFF 		bl	_Error_Handler
 270              	.LVL20:
 271              	.L16:
 256:Src/main.c    ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 272              		.loc 1 256 0
 273 0096 0023     		movs	r3, #0
 274 0098 0093     		str	r3, [sp]
 257:Src/main.c    ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 275              		.loc 1 257 0
 276 009a 0193     		str	r3, [sp, #4]
 258:Src/main.c    ****   sBreakDeadTimeConfig.DeadTime = 0;
 277              		.loc 1 258 0
 278 009c 0293     		str	r3, [sp, #8]
 259:Src/main.c    ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 279              		.loc 1 259 0
 280 009e 0393     		str	r3, [sp, #12]
 260:Src/main.c    ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 281              		.loc 1 260 0
 282 00a0 0493     		str	r3, [sp, #16]
 261:Src/main.c    ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 283              		.loc 1 261 0
 284 00a2 4FF40052 		mov	r2, #8192
 285 00a6 0592     		str	r2, [sp, #20]
 262:Src/main.c    ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 286              		.loc 1 262 0
 287 00a8 0693     		str	r3, [sp, #24]
 263:Src/main.c    ****   {
 288              		.loc 1 263 0
 289 00aa 0848     		ldr	r0, .L19
 290 00ac 6946     		mov	r1, sp
 291 00ae FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 292              	.LVL21:
 293 00b2 20B1     		cbz	r0, .L17
 265:Src/main.c    ****   }
 294              		.loc 1 265 0
 295 00b4 0748     		ldr	r0, .L19+8
 296 00b6 40F20911 		movw	r1, #265
 297 00ba FFF7FEFF 		bl	_Error_Handler
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc6MxZ0H.s 			page 12


 298              	.LVL22:
 299              	.L17:
 268:Src/main.c    **** 
 300              		.loc 1 268 0
 301 00be 0348     		ldr	r0, .L19
 302 00c0 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 303              	.LVL23:
 270:Src/main.c    **** 
 304              		.loc 1 270 0
 305 00c4 15B0     		add	sp, sp, #84
 306              	.LCFI5:
 307              		.cfi_def_cfa_offset 4
 308              		@ sp needed
 309 00c6 5DF804FB 		ldr	pc, [sp], #4
 310              	.L20:
 311 00ca 00BF     		.align	2
 312              	.L19:
 313 00cc 00000000 		.word	htim1
 314 00d0 00000140 		.word	1073807360
 315 00d4 00000000 		.word	.LC0
 316              		.cfi_endproc
 317              	.LFE126:
 319              		.section	.text.SystemClock_Config,"ax",%progbits
 320              		.align	2
 321              		.global	SystemClock_Config
 322              		.thumb
 323              		.thumb_func
 325              	SystemClock_Config:
 326              	.LFB125:
 153:Src/main.c    **** 
 327              		.loc 1 153 0
 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 80
 330              		@ frame_needed = 0, uses_anonymous_args = 0
 331 0000 00B5     		push	{lr}
 332              	.LCFI6:
 333              		.cfi_def_cfa_offset 4
 334              		.cfi_offset 14, -4
 335 0002 95B0     		sub	sp, sp, #84
 336              	.LCFI7:
 337              		.cfi_def_cfa_offset 88
 338              	.LBB3:
 160:Src/main.c    **** 
 339              		.loc 1 160 0
 340 0004 0022     		movs	r2, #0
 341 0006 0192     		str	r2, [sp, #4]
 342 0008 294B     		ldr	r3, .L25
 343 000a 196C     		ldr	r1, [r3, #64]
 344 000c 41F08051 		orr	r1, r1, #268435456
 345 0010 1964     		str	r1, [r3, #64]
 346 0012 1B6C     		ldr	r3, [r3, #64]
 347 0014 03F08053 		and	r3, r3, #268435456
 348 0018 0193     		str	r3, [sp, #4]
 349 001a 019B     		ldr	r3, [sp, #4]
 350              	.LBE3:
 351              	.LBB4:
 162:Src/main.c    **** 
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc6MxZ0H.s 			page 13


 352              		.loc 1 162 0
 353 001c 0292     		str	r2, [sp, #8]
 354 001e 2549     		ldr	r1, .L25+4
 355 0020 0B68     		ldr	r3, [r1]
 356 0022 23F44043 		bic	r3, r3, #49152
 357 0026 43F40043 		orr	r3, r3, #32768
 358 002a 0B60     		str	r3, [r1]
 359 002c 0B68     		ldr	r3, [r1]
 360 002e 03F44043 		and	r3, r3, #49152
 361 0032 0293     		str	r3, [sp, #8]
 362 0034 029B     		ldr	r3, [sp, #8]
 363              	.LBE4:
 166:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 364              		.loc 1 166 0
 365 0036 0223     		movs	r3, #2
 366 0038 0893     		str	r3, [sp, #32]
 167:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 367              		.loc 1 167 0
 368 003a 0121     		movs	r1, #1
 369 003c 0B91     		str	r1, [sp, #44]
 168:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 370              		.loc 1 168 0
 371 003e 1021     		movs	r1, #16
 372 0040 0C91     		str	r1, [sp, #48]
 169:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 373              		.loc 1 169 0
 374 0042 0E93     		str	r3, [sp, #56]
 170:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 375              		.loc 1 170 0
 376 0044 0F92     		str	r2, [sp, #60]
 171:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 84;
 377              		.loc 1 171 0
 378 0046 0822     		movs	r2, #8
 379 0048 1092     		str	r2, [sp, #64]
 172:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 380              		.loc 1 172 0
 381 004a 5422     		movs	r2, #84
 382 004c 1192     		str	r2, [sp, #68]
 173:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 383              		.loc 1 173 0
 384 004e 1293     		str	r3, [sp, #72]
 174:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 385              		.loc 1 174 0
 386 0050 0423     		movs	r3, #4
 387 0052 1393     		str	r3, [sp, #76]
 175:Src/main.c    ****   {
 388              		.loc 1 175 0
 389 0054 08A8     		add	r0, sp, #32
 390 0056 FFF7FEFF 		bl	HAL_RCC_OscConfig
 391              	.LVL24:
 392 005a 18B1     		cbz	r0, .L22
 177:Src/main.c    ****   }
 393              		.loc 1 177 0
 394 005c 1648     		ldr	r0, .L25+8
 395 005e B121     		movs	r1, #177
 396 0060 FFF7FEFF 		bl	_Error_Handler
 397              	.LVL25:
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc6MxZ0H.s 			page 14


 398              	.L22:
 182:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 399              		.loc 1 182 0
 400 0064 0F23     		movs	r3, #15
 401 0066 0393     		str	r3, [sp, #12]
 184:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 402              		.loc 1 184 0
 403 0068 0221     		movs	r1, #2
 404 006a 0491     		str	r1, [sp, #16]
 185:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 405              		.loc 1 185 0
 406 006c 0023     		movs	r3, #0
 407 006e 0593     		str	r3, [sp, #20]
 186:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 408              		.loc 1 186 0
 409 0070 4FF48052 		mov	r2, #4096
 410 0074 0692     		str	r2, [sp, #24]
 187:Src/main.c    **** 
 411              		.loc 1 187 0
 412 0076 0793     		str	r3, [sp, #28]
 189:Src/main.c    ****   {
 413              		.loc 1 189 0
 414 0078 03A8     		add	r0, sp, #12
 415 007a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 416              	.LVL26:
 417 007e 18B1     		cbz	r0, .L23
 191:Src/main.c    ****   }
 418              		.loc 1 191 0
 419 0080 0D48     		ldr	r0, .L25+8
 420 0082 BF21     		movs	r1, #191
 421 0084 FFF7FEFF 		bl	_Error_Handler
 422              	.LVL27:
 423              	.L23:
 196:Src/main.c    **** 
 424              		.loc 1 196 0
 425 0088 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 426              	.LVL28:
 427 008c 0B4B     		ldr	r3, .L25+12
 428 008e A3FB0030 		umull	r3, r0, r3, r0
 429 0092 8009     		lsrs	r0, r0, #6
 430 0094 FFF7FEFF 		bl	HAL_SYSTICK_Config
 431              	.LVL29:
 200:Src/main.c    **** 
 432              		.loc 1 200 0
 433 0098 0420     		movs	r0, #4
 434 009a FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 435              	.LVL30:
 203:Src/main.c    **** }
 436              		.loc 1 203 0
 437 009e 4FF0FF30 		mov	r0, #-1
 438 00a2 0021     		movs	r1, #0
 439 00a4 0A46     		mov	r2, r1
 440 00a6 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 441              	.LVL31:
 204:Src/main.c    **** 
 442              		.loc 1 204 0
 443 00aa 15B0     		add	sp, sp, #84
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc6MxZ0H.s 			page 15


 444              	.LCFI8:
 445              		.cfi_def_cfa_offset 4
 446              		@ sp needed
 447 00ac 5DF804FB 		ldr	pc, [sp], #4
 448              	.L26:
 449              		.align	2
 450              	.L25:
 451 00b0 00380240 		.word	1073887232
 452 00b4 00700040 		.word	1073770496
 453 00b8 00000000 		.word	.LC0
 454 00bc D34D6210 		.word	274877907
 455              		.cfi_endproc
 456              	.LFE125:
 458              		.global	__aeabi_d2uiz
 459              		.section	.text.main,"ax",%progbits
 460              		.align	2
 461              		.global	main
 462              		.thumb
 463              		.thumb_func
 465              	main:
 466              	.LFB124:
  80:Src/main.c    ****   /* USER CODE BEGIN 1 */
 467              		.loc 1 80 0
 468              		.cfi_startproc
 469              		@ Volatile: function does not return.
 470              		@ args = 0, pretend = 0, frame = 0
 471              		@ frame_needed = 0, uses_anonymous_args = 0
 472 0000 08B5     		push	{r3, lr}
 473              	.LCFI9:
 474              		.cfi_def_cfa_offset 8
 475              		.cfi_offset 3, -8
 476              		.cfi_offset 14, -4
  88:Src/main.c    **** 
 477              		.loc 1 88 0
 478 0002 FFF7FEFF 		bl	HAL_Init
 479              	.LVL32:
  95:Src/main.c    **** 
 480              		.loc 1 95 0
 481 0006 FFF7FEFF 		bl	SystemClock_Config
 482              	.LVL33:
 102:Src/main.c    ****   MX_TIM1_Init();
 483              		.loc 1 102 0
 484 000a FFF7FEFF 		bl	MX_GPIO_Init
 485              	.LVL34:
 103:Src/main.c    ****   /* USER CODE BEGIN 2 */
 486              		.loc 1 103 0
 487 000e FFF7FEFF 		bl	MX_TIM1_Init
 488              	.LVL35:
 111:Src/main.c    ****   /* USER CODE END 2 */
 489              		.loc 1 111 0
 490 0012 1548     		ldr	r0, .L30+8
 491 0014 0021     		movs	r1, #0
 492 0016 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 493              	.LVL36:
 494              	.L28:
 118:Src/main.c    ****     HAL_Delay(1500);
 495              		.loc 1 118 0 discriminator 1
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc6MxZ0H.s 			page 16


 496 001a 134C     		ldr	r4, .L30+8
 497 001c 2568     		ldr	r5, [r4]
 498 001e E068     		ldr	r0, [r4, #12]
 499 0020 FFF7FEFF 		bl	__aeabi_ui2d
 500              	.LVL37:
 501 0024 0EA3     		adr	r3, .L30
 502 0026 D3E90023 		ldrd	r2, [r3]
 503 002a FFF7FEFF 		bl	__aeabi_dmul
 504              	.LVL38:
 505 002e FFF7FEFF 		bl	__aeabi_d2uiz
 506              	.LVL39:
 507 0032 6863     		str	r0, [r5, #52]
 119:Src/main.c    ****     // __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, htim1.Init.Period * (0.5 / 20));
 508              		.loc 1 119 0 discriminator 1
 509 0034 40F2DC50 		movw	r0, #1500
 510 0038 FFF7FEFF 		bl	HAL_Delay
 511              	.LVL40:
 136:Src/main.c    ****     HAL_Delay(1500);
 512              		.loc 1 136 0 discriminator 1
 513 003c 2568     		ldr	r5, [r4]
 514 003e E068     		ldr	r0, [r4, #12]
 515 0040 FFF7FEFF 		bl	__aeabi_ui2d
 516              	.LVL41:
 517 0044 0022     		movs	r2, #0
 518 0046 4FF07F53 		mov	r3, #1069547520
 519 004a FFF7FEFF 		bl	__aeabi_dmul
 520              	.LVL42:
 521 004e FFF7FEFF 		bl	__aeabi_d2uiz
 522              	.LVL43:
 523 0052 6863     		str	r0, [r5, #52]
 137:Src/main.c    **** 
 524              		.loc 1 137 0 discriminator 1
 525 0054 40F2DC50 		movw	r0, #1500
 526 0058 FFF7FEFF 		bl	HAL_Delay
 527              	.LVL44:
 143:Src/main.c    ****   /* USER CODE END 3 */
 528              		.loc 1 143 0 discriminator 1
 529 005c DDE7     		b	.L28
 530              	.L31:
 531 005e 00BF     		.align	3
 532              	.L30:
 533 0060 7B14AE47 		.word	1202590843
 534 0064 E17AA43F 		.word	1067743969
 535 0068 00000000 		.word	htim1
 536              		.cfi_endproc
 537              	.LFE124:
 539              		.comm	htim1,60,4
 540              		.section	.rodata.str1.4,"aMS",%progbits,1
 541              		.align	2
 542              	.LC0:
 543 0000 5372632F 		.ascii	"Src/main.c\000"
 543      6D61696E 
 543      2E6300
 544              		.text
 545              	.Letext0:
 546              		.file 2 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 547              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/machine/_default_types
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc6MxZ0H.s 			page 17


 548              		.file 4 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/sys/_stdint.h"
 549              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 550              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 551              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 552              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 553              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 554              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 555              		.file 11 "Drivers/CMSIS/Include/core_cm4.h"
 556              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 557              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc6MxZ0H.s 			page 18


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc6MxZ0H.s:21     .text.MX_GPIO_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc6MxZ0H.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc6MxZ0H.s:58     .text.MX_GPIO_Init:0000000000000020 $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc6MxZ0H.s:68     .text.pulse_length:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc6MxZ0H.s:73     .text.pulse_length:0000000000000000 pulse_length
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc6MxZ0H.s:127    .text.pulse_length:0000000000000048 $d
                            *COM*:000000000000003c htim1
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc6MxZ0H.s:135    .text._Error_Handler:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc6MxZ0H.s:140    .text._Error_Handler:0000000000000000 _Error_Handler
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc6MxZ0H.s:156    .text.MX_TIM1_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc6MxZ0H.s:160    .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc6MxZ0H.s:313    .text.MX_TIM1_Init:00000000000000cc $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc6MxZ0H.s:320    .text.SystemClock_Config:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc6MxZ0H.s:325    .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc6MxZ0H.s:451    .text.SystemClock_Config:00000000000000b0 $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc6MxZ0H.s:460    .text.main:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc6MxZ0H.s:465    .text.main:0000000000000000 main
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc6MxZ0H.s:533    .text.main:0000000000000060 $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc6MxZ0H.s:541    .rodata.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
__aeabi_ui2d
__aeabi_dmul
__aeabi_ddiv
__aeabi_dadd
__aeabi_d2iz
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
__aeabi_d2uiz
HAL_Init
HAL_TIM_PWM_Start
HAL_Delay
