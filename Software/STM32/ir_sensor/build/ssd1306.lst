ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccfbMALp.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"ssd1306.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.ssd1306_WriteCommand,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  25              	ssd1306_WriteCommand:
  26              	.LFB123:
  27              		.file 1 "Src/ssd1306.c"
   1:Src/ssd1306.c **** 
   2:Src/ssd1306.c **** #include"ssd1306.h"
   3:Src/ssd1306.c **** 
   4:Src/ssd1306.c **** 
   5:Src/ssd1306.c **** // Screenbuffer
   6:Src/ssd1306.c **** static uint8_t SSD1306_Buffer[SSD1306_WIDTH * SSD1306_HEIGHT / 8];
   7:Src/ssd1306.c **** 
   8:Src/ssd1306.c **** // Screen object
   9:Src/ssd1306.c **** static SSD1306_t SSD1306;
  10:Src/ssd1306.c **** 
  11:Src/ssd1306.c **** 
  12:Src/ssd1306.c **** //
  13:Src/ssd1306.c **** //  Send a byte to the command register
  14:Src/ssd1306.c **** //
  15:Src/ssd1306.c **** static void ssd1306_WriteCommand(uint8_t command)
  16:Src/ssd1306.c **** {
  28              		.loc 1 16 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 00B5     		push	{lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 14, -4
  37 0002 87B0     		sub	sp, sp, #28
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 32
  40 0004 06AB     		add	r3, sp, #24
  41 0006 03F8010D 		strb	r0, [r3, #-1]!
  17:Src/ssd1306.c **** 	HAL_I2C_Mem_Write(&hi2c1,SSD1306_I2C_ADDR,0x00,1,&command,1,10);
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccfbMALp.s 			page 2


  42              		.loc 1 17 0
  43 000a 0093     		str	r3, [sp]
  44 000c 0123     		movs	r3, #1
  45 000e 0193     		str	r3, [sp, #4]
  46 0010 0A22     		movs	r2, #10
  47 0012 0292     		str	r2, [sp, #8]
  48 0014 0348     		ldr	r0, .L3
  49              	.LVL1:
  50 0016 7821     		movs	r1, #120
  51 0018 0022     		movs	r2, #0
  52 001a FFF7FEFF 		bl	HAL_I2C_Mem_Write
  53              	.LVL2:
  18:Src/ssd1306.c **** }
  54              		.loc 1 18 0
  55 001e 07B0     		add	sp, sp, #28
  56              	.LCFI2:
  57              		.cfi_def_cfa_offset 4
  58              		@ sp needed
  59 0020 5DF804FB 		ldr	pc, [sp], #4
  60              	.LVL3:
  61              	.L4:
  62              		.align	2
  63              	.L3:
  64 0024 00000000 		.word	hi2c1
  65              		.cfi_endproc
  66              	.LFE123:
  68              		.section	.text.ssd1306_Fill,"ax",%progbits
  69              		.align	2
  70              		.global	ssd1306_Fill
  71              		.thumb
  72              		.thumb_func
  74              	ssd1306_Fill:
  75              	.LFB125:
  19:Src/ssd1306.c **** 
  20:Src/ssd1306.c **** 
  21:Src/ssd1306.c **** //
  22:Src/ssd1306.c **** //	Initialize the oled screen
  23:Src/ssd1306.c **** //
  24:Src/ssd1306.c **** uint8_t ssd1306_Init(void)
  25:Src/ssd1306.c **** {	
  26:Src/ssd1306.c **** 	// Wait for the screen to boot
  27:Src/ssd1306.c **** 	HAL_Delay(100);
  28:Src/ssd1306.c **** 	
  29:Src/ssd1306.c **** 	/* Init LCD */
  30:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xAE); //display off
  31:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x20); //Set Memory Addressing Mode   
  32:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x10); //00,Horizontal Addressing Mode;01,Vertical Addressing Mode;10,Page Ad
  33:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xB0); //Set Page Start Address for Page Addressing Mode,0-7
  34:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xC8); //Set COM Output Scan Direction
  35:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x00); //---set low column address
  36:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x10); //---set high column address
  37:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x40); //--set start line address
  38:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x81); //--set contrast control register
  39:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xFF);
  40:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xA1); //--set segment re-map 0 to 127
  41:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xA6); //--set normal display
  42:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xA8); //--set multiplex ratio(1 to 64)
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccfbMALp.s 			page 3


  43:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x3F); //
  44:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xA4); //0xa4,Output follows RAM content;0xa5,Output ignores RAM content
  45:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xD3); //-set display offset
  46:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x00); //-not offset
  47:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xD5); //--set display clock divide ratio/oscillator frequency
  48:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xF0); //--set divide ratio
  49:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xD9); //--set pre-charge period
  50:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x22); //
  51:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xDA); //--set com pins hardware configuration
  52:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x12);
  53:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xDB); //--set vcomh
  54:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x20); //0x20,0.77xVcc
  55:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x8D); //--set DC-DC enable
  56:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x14); //
  57:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xAF); //--turn on SSD1306 panel
  58:Src/ssd1306.c **** 	
  59:Src/ssd1306.c **** 	// Clear screen
  60:Src/ssd1306.c **** 	ssd1306_Fill(Black);
  61:Src/ssd1306.c **** 	
  62:Src/ssd1306.c **** 	// Flush buffer to screen
  63:Src/ssd1306.c **** 	ssd1306_UpdateScreen();
  64:Src/ssd1306.c **** 	
  65:Src/ssd1306.c **** 	// Set default values for screen object
  66:Src/ssd1306.c **** 	SSD1306.CurrentX = 0;
  67:Src/ssd1306.c **** 	SSD1306.CurrentY = 0;
  68:Src/ssd1306.c **** 	
  69:Src/ssd1306.c **** 	SSD1306.Initialized = 1;
  70:Src/ssd1306.c **** 	
  71:Src/ssd1306.c **** 	return 1;
  72:Src/ssd1306.c **** }
  73:Src/ssd1306.c **** 
  74:Src/ssd1306.c **** //
  75:Src/ssd1306.c **** //  Fill the whole screen with the given color
  76:Src/ssd1306.c **** //
  77:Src/ssd1306.c **** void ssd1306_Fill(SSD1306_COLOR color) 
  78:Src/ssd1306.c **** {
  76              		.loc 1 78 0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              		@ link register save eliminated.
  81              	.LVL4:
  79:Src/ssd1306.c **** 	/* Set memory */
  80:Src/ssd1306.c **** 	uint32_t i;
  81:Src/ssd1306.c **** 
  82:Src/ssd1306.c **** 	for(i = 0; i < sizeof(SSD1306_Buffer); i++)
  82              		.loc 1 82 0
  83 0000 0023     		movs	r3, #0
  84 0002 06E0     		b	.L6
  85              	.LVL5:
  86              	.L8:
  83:Src/ssd1306.c **** 	{
  84:Src/ssd1306.c **** 		SSD1306_Buffer[i] = (color == Black) ? 0x00 : 0xFF;
  87              		.loc 1 84 0
  88 0004 08B9     		cbnz	r0, .L9
  89 0006 0021     		movs	r1, #0
  90 0008 00E0     		b	.L7
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccfbMALp.s 			page 4


  91              	.L9:
  92 000a FF21     		movs	r1, #255
  93              	.L7:
  94              		.loc 1 84 0 is_stmt 0 discriminator 4
  95 000c 034A     		ldr	r2, .L10
  96 000e D154     		strb	r1, [r2, r3]
  82:Src/ssd1306.c **** 	{
  97              		.loc 1 82 0 is_stmt 1 discriminator 4
  98 0010 0133     		adds	r3, r3, #1
  99              	.LVL6:
 100              	.L6:
  82:Src/ssd1306.c **** 	{
 101              		.loc 1 82 0 is_stmt 0 discriminator 2
 102 0012 B3F5806F 		cmp	r3, #1024
 103 0016 F5D3     		bcc	.L8
  85:Src/ssd1306.c **** 	}
  86:Src/ssd1306.c **** }
 104              		.loc 1 86 0 is_stmt 1
 105 0018 7047     		bx	lr
 106              	.L11:
 107 001a 00BF     		.align	2
 108              	.L10:
 109 001c 00000000 		.word	.LANCHOR0
 110              		.cfi_endproc
 111              	.LFE125:
 113              		.section	.text.ssd1306_UpdateScreen,"ax",%progbits
 114              		.align	2
 115              		.global	ssd1306_UpdateScreen
 116              		.thumb
 117              		.thumb_func
 119              	ssd1306_UpdateScreen:
 120              	.LFB126:
  87:Src/ssd1306.c **** 
  88:Src/ssd1306.c **** //
  89:Src/ssd1306.c **** //  Write the screenbuffer with changed to the screen
  90:Src/ssd1306.c **** //
  91:Src/ssd1306.c **** void ssd1306_UpdateScreen(void) 
  92:Src/ssd1306.c **** {
 121              		.loc 1 92 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125 0000 10B5     		push	{r4, lr}
 126              	.LCFI3:
 127              		.cfi_def_cfa_offset 8
 128              		.cfi_offset 4, -8
 129              		.cfi_offset 14, -4
 130 0002 84B0     		sub	sp, sp, #16
 131              	.LCFI4:
 132              		.cfi_def_cfa_offset 24
 133              	.LVL7:
  93:Src/ssd1306.c **** 	uint8_t i;
  94:Src/ssd1306.c **** 	
  95:Src/ssd1306.c **** 	for (i = 0; i < 8; i++) {
 134              		.loc 1 95 0
 135 0004 0024     		movs	r4, #0
 136 0006 1AE0     		b	.L13
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccfbMALp.s 			page 5


 137              	.LVL8:
 138              	.L14:
  96:Src/ssd1306.c **** 		ssd1306_WriteCommand(0xB0 + i);
 139              		.loc 1 96 0 discriminator 3
 140 0008 A4F15000 		sub	r0, r4, #80
 141 000c C0B2     		uxtb	r0, r0
 142 000e FFF7FEFF 		bl	ssd1306_WriteCommand
 143              	.LVL9:
  97:Src/ssd1306.c **** 		ssd1306_WriteCommand(0x00);
 144              		.loc 1 97 0 discriminator 3
 145 0012 0020     		movs	r0, #0
 146 0014 FFF7FEFF 		bl	ssd1306_WriteCommand
 147              	.LVL10:
  98:Src/ssd1306.c **** 		ssd1306_WriteCommand(0x10);
 148              		.loc 1 98 0 discriminator 3
 149 0018 1020     		movs	r0, #16
 150 001a FFF7FEFF 		bl	ssd1306_WriteCommand
 151              	.LVL11:
  99:Src/ssd1306.c **** 
 100:Src/ssd1306.c **** 		HAL_I2C_Mem_Write(&hi2c1,SSD1306_I2C_ADDR,0x40,1,&SSD1306_Buffer[SSD1306_WIDTH * i],SSD1306_WIDTH
 152              		.loc 1 100 0 discriminator 3
 153 001e 0A4B     		ldr	r3, .L16
 154 0020 03EBC413 		add	r3, r3, r4, lsl #7
 155 0024 0093     		str	r3, [sp]
 156 0026 8023     		movs	r3, #128
 157 0028 0193     		str	r3, [sp, #4]
 158 002a 6423     		movs	r3, #100
 159 002c 0293     		str	r3, [sp, #8]
 160 002e 0748     		ldr	r0, .L16+4
 161 0030 7821     		movs	r1, #120
 162 0032 4022     		movs	r2, #64
 163 0034 0123     		movs	r3, #1
 164 0036 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 165              	.LVL12:
  95:Src/ssd1306.c **** 		ssd1306_WriteCommand(0xB0 + i);
 166              		.loc 1 95 0 discriminator 3
 167 003a 0134     		adds	r4, r4, #1
 168              	.LVL13:
 169 003c E4B2     		uxtb	r4, r4
 170              	.LVL14:
 171              	.L13:
  95:Src/ssd1306.c **** 		ssd1306_WriteCommand(0xB0 + i);
 172              		.loc 1 95 0 is_stmt 0 discriminator 1
 173 003e 072C     		cmp	r4, #7
 174 0040 E2D9     		bls	.L14
 101:Src/ssd1306.c **** 	}
 102:Src/ssd1306.c **** }
 175              		.loc 1 102 0 is_stmt 1
 176 0042 04B0     		add	sp, sp, #16
 177              	.LCFI5:
 178              		.cfi_def_cfa_offset 8
 179              		@ sp needed
 180 0044 10BD     		pop	{r4, pc}
 181              	.LVL15:
 182              	.L17:
 183 0046 00BF     		.align	2
 184              	.L16:
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccfbMALp.s 			page 6


 185 0048 00000000 		.word	.LANCHOR0
 186 004c 00000000 		.word	hi2c1
 187              		.cfi_endproc
 188              	.LFE126:
 190              		.section	.text.ssd1306_Init,"ax",%progbits
 191              		.align	2
 192              		.global	ssd1306_Init
 193              		.thumb
 194              		.thumb_func
 196              	ssd1306_Init:
 197              	.LFB124:
  25:Src/ssd1306.c **** 	// Wait for the screen to boot
 198              		.loc 1 25 0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 0
 201              		@ frame_needed = 0, uses_anonymous_args = 0
 202 0000 08B5     		push	{r3, lr}
 203              	.LCFI6:
 204              		.cfi_def_cfa_offset 8
 205              		.cfi_offset 3, -8
 206              		.cfi_offset 14, -4
  27:Src/ssd1306.c **** 	
 207              		.loc 1 27 0
 208 0002 6420     		movs	r0, #100
 209 0004 FFF7FEFF 		bl	HAL_Delay
 210              	.LVL16:
  30:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x20); //Set Memory Addressing Mode   
 211              		.loc 1 30 0
 212 0008 AE20     		movs	r0, #174
 213 000a FFF7FEFF 		bl	ssd1306_WriteCommand
 214              	.LVL17:
  31:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x10); //00,Horizontal Addressing Mode;01,Vertical Addressing Mode;10,Page Ad
 215              		.loc 1 31 0
 216 000e 2020     		movs	r0, #32
 217 0010 FFF7FEFF 		bl	ssd1306_WriteCommand
 218              	.LVL18:
  32:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xB0); //Set Page Start Address for Page Addressing Mode,0-7
 219              		.loc 1 32 0
 220 0014 1020     		movs	r0, #16
 221 0016 FFF7FEFF 		bl	ssd1306_WriteCommand
 222              	.LVL19:
  33:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xC8); //Set COM Output Scan Direction
 223              		.loc 1 33 0
 224 001a B020     		movs	r0, #176
 225 001c FFF7FEFF 		bl	ssd1306_WriteCommand
 226              	.LVL20:
  34:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x00); //---set low column address
 227              		.loc 1 34 0
 228 0020 C820     		movs	r0, #200
 229 0022 FFF7FEFF 		bl	ssd1306_WriteCommand
 230              	.LVL21:
  35:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x10); //---set high column address
 231              		.loc 1 35 0
 232 0026 0020     		movs	r0, #0
 233 0028 FFF7FEFF 		bl	ssd1306_WriteCommand
 234              	.LVL22:
  36:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x40); //--set start line address
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccfbMALp.s 			page 7


 235              		.loc 1 36 0
 236 002c 1020     		movs	r0, #16
 237 002e FFF7FEFF 		bl	ssd1306_WriteCommand
 238              	.LVL23:
  37:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x81); //--set contrast control register
 239              		.loc 1 37 0
 240 0032 4020     		movs	r0, #64
 241 0034 FFF7FEFF 		bl	ssd1306_WriteCommand
 242              	.LVL24:
  38:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xFF);
 243              		.loc 1 38 0
 244 0038 8120     		movs	r0, #129
 245 003a FFF7FEFF 		bl	ssd1306_WriteCommand
 246              	.LVL25:
  39:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xA1); //--set segment re-map 0 to 127
 247              		.loc 1 39 0
 248 003e FF20     		movs	r0, #255
 249 0040 FFF7FEFF 		bl	ssd1306_WriteCommand
 250              	.LVL26:
  40:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xA6); //--set normal display
 251              		.loc 1 40 0
 252 0044 A120     		movs	r0, #161
 253 0046 FFF7FEFF 		bl	ssd1306_WriteCommand
 254              	.LVL27:
  41:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xA8); //--set multiplex ratio(1 to 64)
 255              		.loc 1 41 0
 256 004a A620     		movs	r0, #166
 257 004c FFF7FEFF 		bl	ssd1306_WriteCommand
 258              	.LVL28:
  42:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x3F); //
 259              		.loc 1 42 0
 260 0050 A820     		movs	r0, #168
 261 0052 FFF7FEFF 		bl	ssd1306_WriteCommand
 262              	.LVL29:
  43:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xA4); //0xa4,Output follows RAM content;0xa5,Output ignores RAM content
 263              		.loc 1 43 0
 264 0056 3F20     		movs	r0, #63
 265 0058 FFF7FEFF 		bl	ssd1306_WriteCommand
 266              	.LVL30:
  44:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xD3); //-set display offset
 267              		.loc 1 44 0
 268 005c A420     		movs	r0, #164
 269 005e FFF7FEFF 		bl	ssd1306_WriteCommand
 270              	.LVL31:
  45:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x00); //-not offset
 271              		.loc 1 45 0
 272 0062 D320     		movs	r0, #211
 273 0064 FFF7FEFF 		bl	ssd1306_WriteCommand
 274              	.LVL32:
  46:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xD5); //--set display clock divide ratio/oscillator frequency
 275              		.loc 1 46 0
 276 0068 0020     		movs	r0, #0
 277 006a FFF7FEFF 		bl	ssd1306_WriteCommand
 278              	.LVL33:
  47:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xF0); //--set divide ratio
 279              		.loc 1 47 0
 280 006e D520     		movs	r0, #213
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccfbMALp.s 			page 8


 281 0070 FFF7FEFF 		bl	ssd1306_WriteCommand
 282              	.LVL34:
  48:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xD9); //--set pre-charge period
 283              		.loc 1 48 0
 284 0074 F020     		movs	r0, #240
 285 0076 FFF7FEFF 		bl	ssd1306_WriteCommand
 286              	.LVL35:
  49:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x22); //
 287              		.loc 1 49 0
 288 007a D920     		movs	r0, #217
 289 007c FFF7FEFF 		bl	ssd1306_WriteCommand
 290              	.LVL36:
  50:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xDA); //--set com pins hardware configuration
 291              		.loc 1 50 0
 292 0080 2220     		movs	r0, #34
 293 0082 FFF7FEFF 		bl	ssd1306_WriteCommand
 294              	.LVL37:
  51:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x12);
 295              		.loc 1 51 0
 296 0086 DA20     		movs	r0, #218
 297 0088 FFF7FEFF 		bl	ssd1306_WriteCommand
 298              	.LVL38:
  52:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xDB); //--set vcomh
 299              		.loc 1 52 0
 300 008c 1220     		movs	r0, #18
 301 008e FFF7FEFF 		bl	ssd1306_WriteCommand
 302              	.LVL39:
  53:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x20); //0x20,0.77xVcc
 303              		.loc 1 53 0
 304 0092 DB20     		movs	r0, #219
 305 0094 FFF7FEFF 		bl	ssd1306_WriteCommand
 306              	.LVL40:
  54:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x8D); //--set DC-DC enable
 307              		.loc 1 54 0
 308 0098 2020     		movs	r0, #32
 309 009a FFF7FEFF 		bl	ssd1306_WriteCommand
 310              	.LVL41:
  55:Src/ssd1306.c **** 	ssd1306_WriteCommand(0x14); //
 311              		.loc 1 55 0
 312 009e 8D20     		movs	r0, #141
 313 00a0 FFF7FEFF 		bl	ssd1306_WriteCommand
 314              	.LVL42:
  56:Src/ssd1306.c **** 	ssd1306_WriteCommand(0xAF); //--turn on SSD1306 panel
 315              		.loc 1 56 0
 316 00a4 1420     		movs	r0, #20
 317 00a6 FFF7FEFF 		bl	ssd1306_WriteCommand
 318              	.LVL43:
  57:Src/ssd1306.c **** 	
 319              		.loc 1 57 0
 320 00aa AF20     		movs	r0, #175
 321 00ac FFF7FEFF 		bl	ssd1306_WriteCommand
 322              	.LVL44:
  60:Src/ssd1306.c **** 	
 323              		.loc 1 60 0
 324 00b0 0020     		movs	r0, #0
 325 00b2 FFF7FEFF 		bl	ssd1306_Fill
 326              	.LVL45:
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccfbMALp.s 			page 9


  63:Src/ssd1306.c **** 	
 327              		.loc 1 63 0
 328 00b6 FFF7FEFF 		bl	ssd1306_UpdateScreen
 329              	.LVL46:
  66:Src/ssd1306.c **** 	SSD1306.CurrentY = 0;
 330              		.loc 1 66 0
 331 00ba 034B     		ldr	r3, .L20
 332 00bc 0022     		movs	r2, #0
 333 00be 1A80     		strh	r2, [r3]	@ movhi
  67:Src/ssd1306.c **** 	
 334              		.loc 1 67 0
 335 00c0 5A80     		strh	r2, [r3, #2]	@ movhi
  69:Src/ssd1306.c **** 	
 336              		.loc 1 69 0
 337 00c2 0120     		movs	r0, #1
 338 00c4 5871     		strb	r0, [r3, #5]
  72:Src/ssd1306.c **** 
 339              		.loc 1 72 0
 340 00c6 08BD     		pop	{r3, pc}
 341              	.L21:
 342              		.align	2
 343              	.L20:
 344 00c8 00000000 		.word	.LANCHOR1
 345              		.cfi_endproc
 346              	.LFE124:
 348              		.section	.text.ssd1306_DrawPixel,"ax",%progbits
 349              		.align	2
 350              		.global	ssd1306_DrawPixel
 351              		.thumb
 352              		.thumb_func
 354              	ssd1306_DrawPixel:
 355              	.LFB127:
 103:Src/ssd1306.c **** 
 104:Src/ssd1306.c **** //
 105:Src/ssd1306.c **** //	Draw one pixel in the screenbuffer
 106:Src/ssd1306.c **** //	X => X Coordinate
 107:Src/ssd1306.c **** //	Y => Y Coordinate
 108:Src/ssd1306.c **** //	color => Pixel color
 109:Src/ssd1306.c **** //
 110:Src/ssd1306.c **** void ssd1306_DrawPixel(uint8_t x, uint8_t y, SSD1306_COLOR color)
 111:Src/ssd1306.c **** {
 356              		.loc 1 111 0
 357              		.cfi_startproc
 358              		@ args = 0, pretend = 0, frame = 0
 359              		@ frame_needed = 0, uses_anonymous_args = 0
 360              		@ link register save eliminated.
 361              	.LVL47:
 112:Src/ssd1306.c **** 	if (x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) 
 362              		.loc 1 112 0
 363 0000 10F0800F 		tst	r0, #128
 364 0004 21D1     		bne	.L22
 365              		.loc 1 112 0 is_stmt 0 discriminator 1
 366 0006 3F29     		cmp	r1, #63
 367 0008 1FD8     		bhi	.L22
 113:Src/ssd1306.c **** 	{
 114:Src/ssd1306.c **** 		// Don't write outside the buffer
 115:Src/ssd1306.c **** 		return;
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccfbMALp.s 			page 10


 116:Src/ssd1306.c **** 	}
 117:Src/ssd1306.c **** 	
 118:Src/ssd1306.c **** 	// Check if pixel should be inverted
 119:Src/ssd1306.c **** 	if (SSD1306.Inverted) 
 368              		.loc 1 119 0 is_stmt 1
 369 000a 104B     		ldr	r3, .L26
 370 000c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 371 000e 13B1     		cbz	r3, .L24
 120:Src/ssd1306.c **** 	{
 121:Src/ssd1306.c **** 		color = (SSD1306_COLOR)!color;
 372              		.loc 1 121 0
 373 0010 B2FA82F2 		clz	r2, r2
 374              	.LVL48:
 375 0014 5209     		lsrs	r2, r2, #5
 376              	.LVL49:
 377              	.L24:
 122:Src/ssd1306.c **** 	}
 123:Src/ssd1306.c **** 	
 124:Src/ssd1306.c **** 	// Draw in the right color
 125:Src/ssd1306.c **** 	if (color == White)
 378              		.loc 1 125 0
 379 0016 012A     		cmp	r2, #1
 380 0018 0BD1     		bne	.L25
 126:Src/ssd1306.c **** 	{
 127:Src/ssd1306.c **** 		SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 381              		.loc 1 127 0
 382 001a CB08     		lsrs	r3, r1, #3
 383 001c 00EBC310 		add	r0, r0, r3, lsl #7
 384              	.LVL50:
 385 0020 01F00701 		and	r1, r1, #7
 386              	.LVL51:
 387 0024 0123     		movs	r3, #1
 388 0026 8B40     		lsls	r3, r3, r1
 389 0028 094A     		ldr	r2, .L26+4
 390              	.LVL52:
 391 002a 115C     		ldrb	r1, [r2, r0]	@ zero_extendqisi2
 392 002c 0B43     		orrs	r3, r3, r1
 393 002e 1354     		strb	r3, [r2, r0]
 394 0030 7047     		bx	lr
 395              	.LVL53:
 396              	.L25:
 128:Src/ssd1306.c **** 	} 
 129:Src/ssd1306.c **** 	else 
 130:Src/ssd1306.c **** 	{
 131:Src/ssd1306.c **** 		SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 397              		.loc 1 131 0
 398 0032 CB08     		lsrs	r3, r1, #3
 399 0034 00EBC310 		add	r0, r0, r3, lsl #7
 400              	.LVL54:
 401 0038 01F00701 		and	r1, r1, #7
 402              	.LVL55:
 403 003c 0123     		movs	r3, #1
 404 003e 8B40     		lsls	r3, r3, r1
 405 0040 0349     		ldr	r1, .L26+4
 406 0042 0A5C     		ldrb	r2, [r1, r0]	@ zero_extendqisi2
 407              	.LVL56:
 408 0044 22EA0303 		bic	r3, r2, r3
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccfbMALp.s 			page 11


 409 0048 0B54     		strb	r3, [r1, r0]
 410              	.L22:
 411 004a 7047     		bx	lr
 412              	.L27:
 413              		.align	2
 414              	.L26:
 415 004c 00000000 		.word	.LANCHOR1
 416 0050 00000000 		.word	.LANCHOR0
 417              		.cfi_endproc
 418              	.LFE127:
 420              		.section	.text.ssd1306_WriteChar,"ax",%progbits
 421              		.align	2
 422              		.global	ssd1306_WriteChar
 423              		.thumb
 424              		.thumb_func
 426              	ssd1306_WriteChar:
 427              	.LFB128:
 132:Src/ssd1306.c **** 	}
 133:Src/ssd1306.c **** }
 134:Src/ssd1306.c **** 
 135:Src/ssd1306.c **** //
 136:Src/ssd1306.c **** //  Draw 1 char to the screen buffer
 137:Src/ssd1306.c **** //	ch 		=> char om weg te schrijven
 138:Src/ssd1306.c **** //	Font 	=> Font waarmee we gaan schrijven
 139:Src/ssd1306.c **** //	color 	=> Black or White
 140:Src/ssd1306.c **** //
 141:Src/ssd1306.c **** char ssd1306_WriteChar(char ch, FontDef Font, SSD1306_COLOR color)
 142:Src/ssd1306.c **** {
 428              		.loc 1 142 0
 429              		.cfi_startproc
 430              		@ args = 0, pretend = 0, frame = 8
 431              		@ frame_needed = 0, uses_anonymous_args = 0
 432              	.LVL57:
 433 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 434              	.LCFI7:
 435              		.cfi_def_cfa_offset 36
 436              		.cfi_offset 4, -36
 437              		.cfi_offset 5, -32
 438              		.cfi_offset 6, -28
 439              		.cfi_offset 7, -24
 440              		.cfi_offset 8, -20
 441              		.cfi_offset 9, -16
 442              		.cfi_offset 10, -12
 443              		.cfi_offset 11, -8
 444              		.cfi_offset 14, -4
 445 0004 83B0     		sub	sp, sp, #12
 446              	.LCFI8:
 447              		.cfi_def_cfa_offset 48
 448 0006 02AC     		add	r4, sp, #8
 449 0008 04E90600 		stmdb	r4, {r1, r2}
 143:Src/ssd1306.c **** 	uint32_t i, b, j;
 144:Src/ssd1306.c **** 	
 145:Src/ssd1306.c **** 	// Check remaining space on current line
 146:Src/ssd1306.c **** 	if (SSD1306_WIDTH <= (SSD1306.CurrentX + Font.FontWidth) ||
 450              		.loc 1 146 0
 451 000c 244A     		ldr	r2, .L39
 452 000e 1288     		ldrh	r2, [r2]
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccfbMALp.s 			page 12


 453 0010 9DF80060 		ldrb	r6, [sp]	@ zero_extendqisi2
 454 0014 3244     		add	r2, r2, r6
 455 0016 7F2A     		cmp	r2, #127
 456 0018 3CDC     		bgt	.L36
 147:Src/ssd1306.c **** 		SSD1306_HEIGHT <= (SSD1306.CurrentY + Font.FontHeight))
 457              		.loc 1 147 0 discriminator 1
 458 001a 214A     		ldr	r2, .L39
 459 001c 5288     		ldrh	r2, [r2, #2]
 460 001e 9DF801A0 		ldrb	r10, [sp, #1]	@ zero_extendqisi2
 461 0022 D346     		mov	fp, r10
 462 0024 5244     		add	r2, r2, r10
 146:Src/ssd1306.c **** 		SSD1306_HEIGHT <= (SSD1306.CurrentY + Font.FontHeight))
 463              		.loc 1 146 0 discriminator 1
 464 0026 3F2A     		cmp	r2, #63
 465 0028 36DC     		bgt	.L37
 466 002a 9846     		mov	r8, r3
 467 002c 8146     		mov	r9, r0
 468 002e 0025     		movs	r5, #0
 469 0030 28E0     		b	.L30
 470              	.LVL58:
 471              	.L35:
 148:Src/ssd1306.c **** 	{
 149:Src/ssd1306.c **** 		// Not enough space on current line
 150:Src/ssd1306.c **** 		return 0;
 151:Src/ssd1306.c **** 	}
 152:Src/ssd1306.c **** 	
 153:Src/ssd1306.c **** 	// Use the font to write
 154:Src/ssd1306.c **** 	for (i = 0; i < Font.FontHeight; i++)
 155:Src/ssd1306.c **** 	{
 156:Src/ssd1306.c **** 		b = Font.data[(ch - 32) * Font.FontHeight + i];
 472              		.loc 1 156 0
 473 0032 A9F12003 		sub	r3, r9, #32
 474 0036 03FB0B53 		mla	r3, r3, fp, r5
 475 003a 019A     		ldr	r2, [sp, #4]
 476 003c 32F81370 		ldrh	r7, [r2, r3, lsl #1]
 477              	.LVL59:
 157:Src/ssd1306.c **** 		for (j = 0; j < Font.FontWidth; j++)
 478              		.loc 1 157 0
 479 0040 0024     		movs	r4, #0
 480 0042 1CE0     		b	.L31
 481              	.LVL60:
 482              	.L34:
 158:Src/ssd1306.c **** 		{
 159:Src/ssd1306.c **** 			if ((b << j) & 0x8000) 
 483              		.loc 1 159 0
 484 0044 07FA04F3 		lsl	r3, r7, r4
 485 0048 13F4004F 		tst	r3, #32768
 486 004c 0AD0     		beq	.L32
 160:Src/ssd1306.c **** 			{
 161:Src/ssd1306.c **** 				ssd1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR) color);
 487              		.loc 1 161 0
 488 004e 144B     		ldr	r3, .L39
 489 0050 1888     		ldrh	r0, [r3]
 490 0052 5988     		ldrh	r1, [r3, #2]
 491 0054 2044     		add	r0, r0, r4
 492 0056 2944     		add	r1, r1, r5
 493 0058 C0B2     		uxtb	r0, r0
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccfbMALp.s 			page 13


 494 005a C9B2     		uxtb	r1, r1
 495 005c 4246     		mov	r2, r8
 496 005e FFF7FEFF 		bl	ssd1306_DrawPixel
 497              	.LVL61:
 498 0062 0BE0     		b	.L33
 499              	.L32:
 162:Src/ssd1306.c **** 			} 
 163:Src/ssd1306.c **** 			else 
 164:Src/ssd1306.c **** 			{
 165:Src/ssd1306.c **** 				ssd1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR)!color);
 500              		.loc 1 165 0
 501 0064 0E4B     		ldr	r3, .L39
 502 0066 1888     		ldrh	r0, [r3]
 503 0068 5988     		ldrh	r1, [r3, #2]
 504 006a 2044     		add	r0, r0, r4
 505 006c 2944     		add	r1, r1, r5
 506 006e C0B2     		uxtb	r0, r0
 507 0070 C9B2     		uxtb	r1, r1
 508 0072 B8FA88F2 		clz	r2, r8
 509 0076 5209     		lsrs	r2, r2, #5
 510 0078 FFF7FEFF 		bl	ssd1306_DrawPixel
 511              	.LVL62:
 512              	.L33:
 157:Src/ssd1306.c **** 		{
 513              		.loc 1 157 0 discriminator 2
 514 007c 0134     		adds	r4, r4, #1
 515              	.LVL63:
 516              	.L31:
 157:Src/ssd1306.c **** 		{
 517              		.loc 1 157 0 is_stmt 0 discriminator 1
 518 007e A642     		cmp	r6, r4
 519 0080 E0D8     		bhi	.L34
 154:Src/ssd1306.c **** 	{
 520              		.loc 1 154 0 is_stmt 1 discriminator 2
 521 0082 0135     		adds	r5, r5, #1
 522              	.LVL64:
 523              	.L30:
 154:Src/ssd1306.c **** 	{
 524              		.loc 1 154 0 is_stmt 0 discriminator 1
 525 0084 AA45     		cmp	r10, r5
 526 0086 D4D8     		bhi	.L35
 166:Src/ssd1306.c **** 			}
 167:Src/ssd1306.c **** 		}
 168:Src/ssd1306.c **** 	}
 169:Src/ssd1306.c **** 	
 170:Src/ssd1306.c **** 	// The current space is now taken
 171:Src/ssd1306.c **** 	SSD1306.CurrentX += Font.FontWidth;
 527              		.loc 1 171 0 is_stmt 1
 528 0088 054A     		ldr	r2, .L39
 529 008a 1388     		ldrh	r3, [r2]
 530 008c 1E44     		add	r6, r6, r3
 531 008e 1680     		strh	r6, [r2]	@ movhi
 172:Src/ssd1306.c **** 	
 173:Src/ssd1306.c **** 	// Return written char for validation
 174:Src/ssd1306.c **** 	return ch;
 532              		.loc 1 174 0
 533 0090 4846     		mov	r0, r9
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccfbMALp.s 			page 14


 534 0092 02E0     		b	.L29
 535              	.LVL65:
 536              	.L36:
 150:Src/ssd1306.c **** 	}
 537              		.loc 1 150 0
 538 0094 0020     		movs	r0, #0
 539              	.LVL66:
 540 0096 00E0     		b	.L29
 541              	.LVL67:
 542              	.L37:
 543 0098 0020     		movs	r0, #0
 544              	.LVL68:
 545              	.L29:
 175:Src/ssd1306.c **** }
 546              		.loc 1 175 0
 547 009a 03B0     		add	sp, sp, #12
 548              	.LCFI9:
 549              		.cfi_def_cfa_offset 36
 550              		@ sp needed
 551 009c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 552              	.L40:
 553              		.align	2
 554              	.L39:
 555 00a0 00000000 		.word	.LANCHOR1
 556              		.cfi_endproc
 557              	.LFE128:
 559              		.section	.text.ssd1306_WriteString,"ax",%progbits
 560              		.align	2
 561              		.global	ssd1306_WriteString
 562              		.thumb
 563              		.thumb_func
 565              	ssd1306_WriteString:
 566              	.LFB129:
 176:Src/ssd1306.c **** 
 177:Src/ssd1306.c **** //
 178:Src/ssd1306.c **** //  Write full string to screenbuffer
 179:Src/ssd1306.c **** //
 180:Src/ssd1306.c **** char ssd1306_WriteString(char* str, FontDef Font, SSD1306_COLOR color)
 181:Src/ssd1306.c **** {
 567              		.loc 1 181 0
 568              		.cfi_startproc
 569              		@ args = 0, pretend = 0, frame = 8
 570              		@ frame_needed = 0, uses_anonymous_args = 0
 571              	.LVL69:
 572 0000 30B5     		push	{r4, r5, lr}
 573              	.LCFI10:
 574              		.cfi_def_cfa_offset 12
 575              		.cfi_offset 4, -12
 576              		.cfi_offset 5, -8
 577              		.cfi_offset 14, -4
 578 0002 83B0     		sub	sp, sp, #12
 579              	.LCFI11:
 580              		.cfi_def_cfa_offset 24
 581 0004 0446     		mov	r4, r0
 582 0006 02A8     		add	r0, sp, #8
 583              	.LVL70:
 584 0008 00E90600 		stmdb	r0, {r1, r2}
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccfbMALp.s 			page 15


 585 000c 1D46     		mov	r5, r3
 182:Src/ssd1306.c **** 	// Write until null-byte
 183:Src/ssd1306.c **** 	while (*str) 
 586              		.loc 1 183 0
 587 000e 0AE0     		b	.L42
 588              	.LVL71:
 589              	.L45:
 184:Src/ssd1306.c **** 	{
 185:Src/ssd1306.c **** 		if (ssd1306_WriteChar(*str, Font, color) != *str)
 590              		.loc 1 185 0
 591 0010 1846     		mov	r0, r3
 592 0012 02AB     		add	r3, sp, #8
 593 0014 13E90600 		ldmdb	r3, {r1, r2}
 594 0018 2B46     		mov	r3, r5
 595 001a FFF7FEFF 		bl	ssd1306_WriteChar
 596              	.LVL72:
 597 001e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 598 0020 9842     		cmp	r0, r3
 599 0022 03D1     		bne	.L44
 186:Src/ssd1306.c **** 		{
 187:Src/ssd1306.c **** 			// Char could not be written
 188:Src/ssd1306.c **** 			return *str;
 189:Src/ssd1306.c **** 		}
 190:Src/ssd1306.c **** 		
 191:Src/ssd1306.c **** 		// Next char
 192:Src/ssd1306.c **** 		str++;
 600              		.loc 1 192 0
 601 0024 0134     		adds	r4, r4, #1
 602              	.LVL73:
 603              	.L42:
 183:Src/ssd1306.c **** 	{
 604              		.loc 1 183 0
 605 0026 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 606 0028 002B     		cmp	r3, #0
 607 002a F1D1     		bne	.L45
 608              	.L44:
 193:Src/ssd1306.c **** 	}
 194:Src/ssd1306.c **** 	
 195:Src/ssd1306.c **** 	// Everything ok
 196:Src/ssd1306.c **** 	return *str;
 197:Src/ssd1306.c **** }
 609              		.loc 1 197 0
 610 002c 1846     		mov	r0, r3
 611 002e 03B0     		add	sp, sp, #12
 612              	.LCFI12:
 613              		.cfi_def_cfa_offset 12
 614              		@ sp needed
 615 0030 30BD     		pop	{r4, r5, pc}
 616              		.cfi_endproc
 617              	.LFE129:
 619 0032 00BF     		.section	.text.ssd1306_SetCursor,"ax",%progbits
 620              		.align	2
 621              		.global	ssd1306_SetCursor
 622              		.thumb
 623              		.thumb_func
 625              	ssd1306_SetCursor:
 626              	.LFB130:
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccfbMALp.s 			page 16


 198:Src/ssd1306.c **** 
 199:Src/ssd1306.c **** //
 200:Src/ssd1306.c **** //	Position the cursor
 201:Src/ssd1306.c **** //
 202:Src/ssd1306.c **** void ssd1306_SetCursor(uint8_t x, uint8_t y) 
 203:Src/ssd1306.c **** {
 627              		.loc 1 203 0
 628              		.cfi_startproc
 629              		@ args = 0, pretend = 0, frame = 0
 630              		@ frame_needed = 0, uses_anonymous_args = 0
 631              		@ link register save eliminated.
 632              	.LVL74:
 204:Src/ssd1306.c **** 	SSD1306.CurrentX = x;
 633              		.loc 1 204 0
 634 0000 014B     		ldr	r3, .L48
 635 0002 1880     		strh	r0, [r3]	@ movhi
 205:Src/ssd1306.c **** 	SSD1306.CurrentY = y;
 636              		.loc 1 205 0
 637 0004 5980     		strh	r1, [r3, #2]	@ movhi
 638 0006 7047     		bx	lr
 639              	.L49:
 640              		.align	2
 641              	.L48:
 642 0008 00000000 		.word	.LANCHOR1
 643              		.cfi_endproc
 644              	.LFE130:
 646              		.section	.bss.SSD1306_Buffer,"aw",%nobits
 647              		.align	2
 648              		.set	.LANCHOR0,. + 0
 651              	SSD1306_Buffer:
 652 0000 00000000 		.space	1024
 652      00000000 
 652      00000000 
 652      00000000 
 652      00000000 
 653              		.section	.bss.SSD1306,"aw",%nobits
 654              		.align	2
 655              		.set	.LANCHOR1,. + 0
 658              	SSD1306:
 659 0000 00000000 		.space	6
 659      0000
 660              		.text
 661              	.Letext0:
 662              		.file 2 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/machine/_default_types
 663              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/sys/_stdint.h"
 664              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 665              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 666              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 667              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 668              		.file 8 "Inc/fonts.h"
 669              		.file 9 "Inc/ssd1306.h"
 670              		.file 10 "Drivers/CMSIS/Include/core_cm4.h"
 671              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccfbMALp.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 ssd1306.c
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccfbMALp.s:21     .text.ssd1306_WriteCommand:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccfbMALp.s:25     .text.ssd1306_WriteCommand:0000000000000000 ssd1306_WriteCommand
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccfbMALp.s:64     .text.ssd1306_WriteCommand:0000000000000024 $d
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccfbMALp.s:69     .text.ssd1306_Fill:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccfbMALp.s:74     .text.ssd1306_Fill:0000000000000000 ssd1306_Fill
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccfbMALp.s:109    .text.ssd1306_Fill:000000000000001c $d
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccfbMALp.s:114    .text.ssd1306_UpdateScreen:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccfbMALp.s:119    .text.ssd1306_UpdateScreen:0000000000000000 ssd1306_UpdateScreen
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccfbMALp.s:185    .text.ssd1306_UpdateScreen:0000000000000048 $d
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccfbMALp.s:191    .text.ssd1306_Init:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccfbMALp.s:196    .text.ssd1306_Init:0000000000000000 ssd1306_Init
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccfbMALp.s:344    .text.ssd1306_Init:00000000000000c8 $d
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccfbMALp.s:349    .text.ssd1306_DrawPixel:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccfbMALp.s:354    .text.ssd1306_DrawPixel:0000000000000000 ssd1306_DrawPixel
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccfbMALp.s:415    .text.ssd1306_DrawPixel:000000000000004c $d
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccfbMALp.s:421    .text.ssd1306_WriteChar:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccfbMALp.s:426    .text.ssd1306_WriteChar:0000000000000000 ssd1306_WriteChar
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccfbMALp.s:555    .text.ssd1306_WriteChar:00000000000000a0 $d
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccfbMALp.s:560    .text.ssd1306_WriteString:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccfbMALp.s:565    .text.ssd1306_WriteString:0000000000000000 ssd1306_WriteString
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccfbMALp.s:620    .text.ssd1306_SetCursor:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccfbMALp.s:625    .text.ssd1306_SetCursor:0000000000000000 ssd1306_SetCursor
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccfbMALp.s:642    .text.ssd1306_SetCursor:0000000000000008 $d
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccfbMALp.s:647    .bss.SSD1306_Buffer:0000000000000000 $d
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccfbMALp.s:651    .bss.SSD1306_Buffer:0000000000000000 SSD1306_Buffer
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccfbMALp.s:654    .bss.SSD1306:0000000000000000 $d
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccfbMALp.s:658    .bss.SSD1306:0000000000000000 SSD1306
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_I2C_Mem_Write
hi2c1
HAL_Delay
