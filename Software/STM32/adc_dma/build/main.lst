ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"main.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  25              	MX_GPIO_Init:
  26              	.LFB130:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** 
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s 			page 2


  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  40:Src/main.c    **** #include "main.h"
  41:Src/main.c    **** #include "stm32f4xx_hal.h"
  42:Src/main.c    **** 
  43:Src/main.c    **** /* USER CODE BEGIN Includes */
  44:Src/main.c    **** #include "fonts.h"
  45:Src/main.c    **** #include "ssd1306.h"
  46:Src/main.c    **** #include "filter.h"
  47:Src/main.c    **** 
  48:Src/main.c    **** #define PI 3.141592653589793
  49:Src/main.c    **** /* USER CODE END Includes */
  50:Src/main.c    **** 
  51:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  52:Src/main.c    **** ADC_HandleTypeDef hadc1;
  53:Src/main.c    **** DMA_HandleTypeDef hdma_adc1;
  54:Src/main.c    **** 
  55:Src/main.c    **** I2C_HandleTypeDef hi2c1;
  56:Src/main.c    **** 
  57:Src/main.c    **** UART_HandleTypeDef huart2;
  58:Src/main.c    **** 
  59:Src/main.c    **** /* USER CODE BEGIN PV */
  60:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  61:Src/main.c    **** 
  62:Src/main.c    **** /* USER CODE END PV */
  63:Src/main.c    **** 
  64:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  65:Src/main.c    **** void SystemClock_Config(void);
  66:Src/main.c    **** static void MX_GPIO_Init(void);
  67:Src/main.c    **** static void MX_DMA_Init(void);
  68:Src/main.c    **** static void MX_ADC1_Init(void);
  69:Src/main.c    **** static void MX_I2C1_Init(void);
  70:Src/main.c    **** static void MX_USART2_UART_Init(void);
  71:Src/main.c    **** 
  72:Src/main.c    **** /* USER CODE BEGIN PFP */
  73:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  74:Src/main.c    **** void print(char *msg, int row);
  75:Src/main.c    **** 
  76:Src/main.c    **** /* USER CODE END PFP */
  77:Src/main.c    **** 
  78:Src/main.c    **** /* USER CODE BEGIN 0 */
  79:Src/main.c    **** uint32_t adc_buffer[1024];
  80:Src/main.c    **** uint32_t read_value[1024];
  81:Src/main.c    **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc)
  82:Src/main.c    **** {
  83:Src/main.c    ****     memcpy(read_value, adc_buffer, sizeof(adc_buffer));
  84:Src/main.c    **** }
  85:Src/main.c    **** 
  86:Src/main.c    **** /* USER CODE END 0 */
  87:Src/main.c    **** 
  88:Src/main.c    **** /**
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s 			page 3


  89:Src/main.c    ****   * @brief  The application entry point.
  90:Src/main.c    ****   *
  91:Src/main.c    ****   * @retval None
  92:Src/main.c    ****   */
  93:Src/main.c    **** int main(void)
  94:Src/main.c    **** {
  95:Src/main.c    ****   /* USER CODE BEGIN 1 */
  96:Src/main.c    **** 
  97:Src/main.c    ****   /* USER CODE END 1 */
  98:Src/main.c    **** 
  99:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
 100:Src/main.c    **** 
 101:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 102:Src/main.c    ****   HAL_Init();
 103:Src/main.c    **** 
 104:Src/main.c    ****   /* USER CODE BEGIN Init */
 105:Src/main.c    **** 
 106:Src/main.c    ****   /* USER CODE END Init */
 107:Src/main.c    **** 
 108:Src/main.c    ****   /* Configure the system clock */
 109:Src/main.c    ****   SystemClock_Config();
 110:Src/main.c    **** 
 111:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 112:Src/main.c    **** 
 113:Src/main.c    ****   /* USER CODE END SysInit */
 114:Src/main.c    **** 
 115:Src/main.c    ****   /* Initialize all configured peripherals */
 116:Src/main.c    ****   MX_GPIO_Init();
 117:Src/main.c    ****   MX_DMA_Init();
 118:Src/main.c    ****   MX_ADC1_Init();
 119:Src/main.c    ****   MX_I2C1_Init();
 120:Src/main.c    ****   MX_USART2_UART_Init();
 121:Src/main.c    ****   /* USER CODE BEGIN 2 */
 122:Src/main.c    ****   ssd1306_Init();
 123:Src/main.c    **** 
 124:Src/main.c    ****   HAL_ADC_Start_DMA(&hadc1, adc_buffer, 1024);
 125:Src/main.c    **** 
 126:Src/main.c    ****   /* USER CODE END 2 */
 127:Src/main.c    **** 
 128:Src/main.c    ****   /* Infinite loop */
 129:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 130:Src/main.c    ****   while (1)
 131:Src/main.c    ****   {
 132:Src/main.c    ****     char msg[20] = "";
 133:Src/main.c    ****     double val = goertzel(read_value, 8080, 1000, 1024);
 134:Src/main.c    ****     int predec = (int)(val / 1);
 135:Src/main.c    ****     int postdec = (int)((val - predec) * 1000);
 136:Src/main.c    ****     sprintf(msg, "%d.%d\n", predec, postdec);
 137:Src/main.c    ****     print(msg, 0);
 138:Src/main.c    ****     HAL_UART_Transmit(&huart2, (uint8_t *)msg, strlen(msg), 0xFFFF);
 139:Src/main.c    **** 
 140:Src/main.c    ****     /* USER CODE END WHILE */
 141:Src/main.c    ****     // /* USER CODE BEGIN 3 */
 142:Src/main.c    **** 
 143:Src/main.c    ****   }
 144:Src/main.c    ****   /* USER CODE END 3 */
 145:Src/main.c    **** }
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s 			page 4


 146:Src/main.c    **** 
 147:Src/main.c    **** /**
 148:Src/main.c    ****   * @brief System Clock Configuration
 149:Src/main.c    ****   * @retval None
 150:Src/main.c    ****   */
 151:Src/main.c    **** void SystemClock_Config(void)
 152:Src/main.c    **** {
 153:Src/main.c    **** 
 154:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 155:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 156:Src/main.c    **** 
 157:Src/main.c    ****   /**Configure the main internal regulator output voltage 
 158:Src/main.c    ****     */
 159:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 160:Src/main.c    **** 
 161:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 162:Src/main.c    **** 
 163:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 164:Src/main.c    ****     */
 165:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 166:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 167:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 168:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 169:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 170:Src/main.c    ****   {
 171:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 172:Src/main.c    ****   }
 173:Src/main.c    **** 
 174:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 175:Src/main.c    ****     */
 176:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | R
 177:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 178:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 179:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 180:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 181:Src/main.c    **** 
 182:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 183:Src/main.c    ****   {
 184:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 185:Src/main.c    ****   }
 186:Src/main.c    **** 
 187:Src/main.c    ****   /**Configure the Systick interrupt time 
 188:Src/main.c    ****     */
 189:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq() / 1000);
 190:Src/main.c    **** 
 191:Src/main.c    ****   /**Configure the Systick 
 192:Src/main.c    ****     */
 193:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 194:Src/main.c    **** 
 195:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 196:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 197:Src/main.c    **** }
 198:Src/main.c    **** 
 199:Src/main.c    **** /* ADC1 init function */
 200:Src/main.c    **** static void MX_ADC1_Init(void)
 201:Src/main.c    **** {
 202:Src/main.c    **** 
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s 			page 5


 203:Src/main.c    ****   ADC_ChannelConfTypeDef sConfig;
 204:Src/main.c    **** 
 205:Src/main.c    ****   /**Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conv
 206:Src/main.c    ****     */
 207:Src/main.c    ****   hadc1.Instance = ADC1;
 208:Src/main.c    ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 209:Src/main.c    ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 210:Src/main.c    ****   hadc1.Init.ScanConvMode = ENABLE;
 211:Src/main.c    ****   hadc1.Init.ContinuousConvMode = ENABLE;
 212:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 213:Src/main.c    ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 214:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 215:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 216:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 217:Src/main.c    ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 218:Src/main.c    ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 219:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 220:Src/main.c    ****   {
 221:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 222:Src/main.c    ****   }
 223:Src/main.c    **** 
 224:Src/main.c    ****   /**Configure for the selected ADC regular channel its corresponding rank in the sequencer and its
 225:Src/main.c    ****     */
 226:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_0;
 227:Src/main.c    ****   sConfig.Rank = 1;
 228:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 229:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 230:Src/main.c    ****   {
 231:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 232:Src/main.c    ****   }
 233:Src/main.c    **** }
 234:Src/main.c    **** 
 235:Src/main.c    **** /* I2C1 init function */
 236:Src/main.c    **** static void MX_I2C1_Init(void)
 237:Src/main.c    **** {
 238:Src/main.c    **** 
 239:Src/main.c    ****   hi2c1.Instance = I2C1;
 240:Src/main.c    ****   hi2c1.Init.ClockSpeed = 100000;
 241:Src/main.c    ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 242:Src/main.c    ****   hi2c1.Init.OwnAddress1 = 0;
 243:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 244:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 245:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
 246:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 247:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 248:Src/main.c    ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 249:Src/main.c    ****   {
 250:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 251:Src/main.c    ****   }
 252:Src/main.c    **** }
 253:Src/main.c    **** 
 254:Src/main.c    **** /* USART2 init function */
 255:Src/main.c    **** static void MX_USART2_UART_Init(void)
 256:Src/main.c    **** {
 257:Src/main.c    **** 
 258:Src/main.c    ****   huart2.Instance = USART2;
 259:Src/main.c    ****   huart2.Init.BaudRate = 115200;
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s 			page 6


 260:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 261:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 262:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 263:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 264:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 265:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 266:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 267:Src/main.c    ****   {
 268:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 269:Src/main.c    ****   }
 270:Src/main.c    **** }
 271:Src/main.c    **** 
 272:Src/main.c    **** /** 
 273:Src/main.c    ****   * Enable DMA controller clock
 274:Src/main.c    ****   */
 275:Src/main.c    **** static void MX_DMA_Init(void)
 276:Src/main.c    **** {
 277:Src/main.c    ****   /* DMA controller clock enable */
 278:Src/main.c    ****   __HAL_RCC_DMA2_CLK_ENABLE();
 279:Src/main.c    **** 
 280:Src/main.c    ****   /* DMA interrupt init */
 281:Src/main.c    ****   /* DMA2_Stream0_IRQn interrupt configuration */
 282:Src/main.c    ****   HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 0, 0);
 283:Src/main.c    ****   HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 284:Src/main.c    **** }
 285:Src/main.c    **** 
 286:Src/main.c    **** /** Pinout Configuration
 287:Src/main.c    **** */
 288:Src/main.c    **** static void MX_GPIO_Init(void)
 289:Src/main.c    **** {
  28              		.loc 1 289 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 82B0     		sub	sp, sp, #8
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              	.LBB2:
 290:Src/main.c    **** 
 291:Src/main.c    ****   /* GPIO Ports Clock Enable */
 292:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  37              		.loc 1 292 0
  38 0002 0021     		movs	r1, #0
  39 0004 0091     		str	r1, [sp]
  40 0006 0B4B     		ldr	r3, .L3
  41 0008 1A6B     		ldr	r2, [r3, #48]
  42 000a 42F00102 		orr	r2, r2, #1
  43 000e 1A63     		str	r2, [r3, #48]
  44 0010 1A6B     		ldr	r2, [r3, #48]
  45 0012 02F00102 		and	r2, r2, #1
  46 0016 0092     		str	r2, [sp]
  47 0018 009A     		ldr	r2, [sp]
  48              	.LBE2:
  49              	.LBB3:
 293:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  50              		.loc 1 293 0
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s 			page 7


  51 001a 0191     		str	r1, [sp, #4]
  52 001c 1A6B     		ldr	r2, [r3, #48]
  53 001e 42F00202 		orr	r2, r2, #2
  54 0022 1A63     		str	r2, [r3, #48]
  55 0024 1B6B     		ldr	r3, [r3, #48]
  56 0026 03F00203 		and	r3, r3, #2
  57 002a 0193     		str	r3, [sp, #4]
  58 002c 019B     		ldr	r3, [sp, #4]
  59              	.LBE3:
 294:Src/main.c    **** }
  60              		.loc 1 294 0
  61 002e 02B0     		add	sp, sp, #8
  62              	.LCFI1:
  63              		.cfi_def_cfa_offset 0
  64              		@ sp needed
  65 0030 7047     		bx	lr
  66              	.L4:
  67 0032 00BF     		.align	2
  68              	.L3:
  69 0034 00380240 		.word	1073887232
  70              		.cfi_endproc
  71              	.LFE130:
  73              		.section	.text.MX_DMA_Init,"ax",%progbits
  74              		.align	2
  75              		.thumb
  76              		.thumb_func
  78              	MX_DMA_Init:
  79              	.LFB129:
 276:Src/main.c    ****   /* DMA controller clock enable */
  80              		.loc 1 276 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 8
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84 0000 00B5     		push	{lr}
  85              	.LCFI2:
  86              		.cfi_def_cfa_offset 4
  87              		.cfi_offset 14, -4
  88 0002 83B0     		sub	sp, sp, #12
  89              	.LCFI3:
  90              		.cfi_def_cfa_offset 16
  91              	.LBB4:
 278:Src/main.c    **** 
  92              		.loc 1 278 0
  93 0004 0022     		movs	r2, #0
  94 0006 0192     		str	r2, [sp, #4]
  95 0008 094B     		ldr	r3, .L7
  96 000a 196B     		ldr	r1, [r3, #48]
  97 000c 41F48001 		orr	r1, r1, #4194304
  98 0010 1963     		str	r1, [r3, #48]
  99 0012 1B6B     		ldr	r3, [r3, #48]
 100 0014 03F48003 		and	r3, r3, #4194304
 101 0018 0193     		str	r3, [sp, #4]
 102 001a 019B     		ldr	r3, [sp, #4]
 103              	.LBE4:
 282:Src/main.c    ****   HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 104              		.loc 1 282 0
 105 001c 3820     		movs	r0, #56
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s 			page 8


 106 001e 1146     		mov	r1, r2
 107 0020 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 108              	.LVL0:
 283:Src/main.c    **** }
 109              		.loc 1 283 0
 110 0024 3820     		movs	r0, #56
 111 0026 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 112              	.LVL1:
 284:Src/main.c    **** 
 113              		.loc 1 284 0
 114 002a 03B0     		add	sp, sp, #12
 115              	.LCFI4:
 116              		.cfi_def_cfa_offset 4
 117              		@ sp needed
 118 002c 5DF804FB 		ldr	pc, [sp], #4
 119              	.L8:
 120              		.align	2
 121              	.L7:
 122 0030 00380240 		.word	1073887232
 123              		.cfi_endproc
 124              	.LFE129:
 126              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 127              		.align	2
 128              		.global	HAL_ADC_ConvCpltCallback
 129              		.thumb
 130              		.thumb_func
 132              	HAL_ADC_ConvCpltCallback:
 133              	.LFB123:
  82:Src/main.c    ****     memcpy(read_value, adc_buffer, sizeof(adc_buffer));
 134              		.loc 1 82 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138              	.LVL2:
 139 0000 08B5     		push	{r3, lr}
 140              	.LCFI5:
 141              		.cfi_def_cfa_offset 8
 142              		.cfi_offset 3, -8
 143              		.cfi_offset 14, -4
  83:Src/main.c    **** }
 144              		.loc 1 83 0
 145 0002 0348     		ldr	r0, .L11
 146              	.LVL3:
 147 0004 0349     		ldr	r1, .L11+4
 148 0006 4FF48052 		mov	r2, #4096
 149 000a FFF7FEFF 		bl	memcpy
 150              	.LVL4:
 151 000e 08BD     		pop	{r3, pc}
 152              	.L12:
 153              		.align	2
 154              	.L11:
 155 0010 00000000 		.word	read_value
 156 0014 00000000 		.word	adc_buffer
 157              		.cfi_endproc
 158              	.LFE123:
 160              		.section	.text.print,"ax",%progbits
 161              		.align	2
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s 			page 9


 162              		.global	print
 163              		.thumb
 164              		.thumb_func
 166              	print:
 167              	.LFB131:
 295:Src/main.c    **** 
 296:Src/main.c    **** /* USER CODE BEGIN 4 */
 297:Src/main.c    **** void print(char *msg, int row)
 298:Src/main.c    **** {
 168              		.loc 1 298 0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 172              	.LVL5:
 173 0000 38B5     		push	{r3, r4, r5, lr}
 174              	.LCFI6:
 175              		.cfi_def_cfa_offset 16
 176              		.cfi_offset 3, -16
 177              		.cfi_offset 4, -12
 178              		.cfi_offset 5, -8
 179              		.cfi_offset 14, -4
 180 0002 0546     		mov	r5, r0
 299:Src/main.c    ****   if (row == 0)
 181              		.loc 1 299 0
 182 0004 0C46     		mov	r4, r1
 183 0006 11B9     		cbnz	r1, .L14
 300:Src/main.c    ****   {
 301:Src/main.c    ****     ssd1306_Fill(Black);
 184              		.loc 1 301 0
 185 0008 0020     		movs	r0, #0
 186              	.LVL6:
 187 000a FFF7FEFF 		bl	ssd1306_Fill
 188              	.LVL7:
 189              	.L14:
 302:Src/main.c    ****   }
 303:Src/main.c    ****   ssd1306_SetCursor(0, row * 10);
 190              		.loc 1 303 0
 191 000e 04EB8404 		add	r4, r4, r4, lsl #2
 192              	.LVL8:
 193 0012 6100     		lsls	r1, r4, #1
 194 0014 0020     		movs	r0, #0
 195 0016 01F0FE01 		and	r1, r1, #254
 196 001a FFF7FEFF 		bl	ssd1306_SetCursor
 197              	.LVL9:
 304:Src/main.c    ****   ssd1306_WriteString(msg, Font_7x10, White);
 198              		.loc 1 304 0
 199 001e 054B     		ldr	r3, .L16
 200 0020 2846     		mov	r0, r5
 201 0022 93E80600 		ldmia	r3, {r1, r2}
 202 0026 0123     		movs	r3, #1
 203 0028 FFF7FEFF 		bl	ssd1306_WriteString
 204              	.LVL10:
 305:Src/main.c    ****   ssd1306_UpdateScreen();
 205              		.loc 1 305 0
 206 002c FFF7FEFF 		bl	ssd1306_UpdateScreen
 207              	.LVL11:
 208 0030 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s 			page 10


 209              	.LVL12:
 210              	.L17:
 211 0032 00BF     		.align	2
 212              	.L16:
 213 0034 00000000 		.word	Font_7x10
 214              		.cfi_endproc
 215              	.LFE131:
 217              		.section	.text._Error_Handler,"ax",%progbits
 218              		.align	2
 219              		.global	_Error_Handler
 220              		.thumb
 221              		.thumb_func
 223              	_Error_Handler:
 224              	.LFB132:
 306:Src/main.c    **** }
 307:Src/main.c    **** 
 308:Src/main.c    **** /* USER CODE END 4 */
 309:Src/main.c    **** 
 310:Src/main.c    **** /**
 311:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 312:Src/main.c    ****   * @param  file: The file name as string.
 313:Src/main.c    ****   * @param  line: The line in file as a number.
 314:Src/main.c    ****   * @retval None
 315:Src/main.c    ****   */
 316:Src/main.c    **** void _Error_Handler(char *file, int line)
 317:Src/main.c    **** {
 225              		.loc 1 317 0
 226              		.cfi_startproc
 227              		@ Volatile: function does not return.
 228              		@ args = 0, pretend = 0, frame = 0
 229              		@ frame_needed = 0, uses_anonymous_args = 0
 230              		@ link register save eliminated.
 231              	.LVL13:
 232              	.L19:
 318:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 319:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 320:Src/main.c    ****   while (1)
 321:Src/main.c    ****   {
 322:Src/main.c    ****   }
 233              		.loc 1 322 0 discriminator 1
 234 0000 FEE7     		b	.L19
 235              		.cfi_endproc
 236              	.LFE132:
 238 0002 00BF     		.section	.text.MX_ADC1_Init,"ax",%progbits
 239              		.align	2
 240              		.thumb
 241              		.thumb_func
 243              	MX_ADC1_Init:
 244              	.LFB126:
 201:Src/main.c    **** 
 245              		.loc 1 201 0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 16
 248              		@ frame_needed = 0, uses_anonymous_args = 0
 249 0000 00B5     		push	{lr}
 250              	.LCFI7:
 251              		.cfi_def_cfa_offset 4
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s 			page 11


 252              		.cfi_offset 14, -4
 253 0002 85B0     		sub	sp, sp, #20
 254              	.LCFI8:
 255              		.cfi_def_cfa_offset 24
 207:Src/main.c    ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 256              		.loc 1 207 0
 257 0004 1548     		ldr	r0, .L24
 258 0006 164B     		ldr	r3, .L24+4
 259 0008 0360     		str	r3, [r0]
 208:Src/main.c    ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 260              		.loc 1 208 0
 261 000a 4FF48033 		mov	r3, #65536
 262 000e 4360     		str	r3, [r0, #4]
 209:Src/main.c    ****   hadc1.Init.ScanConvMode = ENABLE;
 263              		.loc 1 209 0
 264 0010 0022     		movs	r2, #0
 265 0012 8260     		str	r2, [r0, #8]
 210:Src/main.c    ****   hadc1.Init.ContinuousConvMode = ENABLE;
 266              		.loc 1 210 0
 267 0014 0123     		movs	r3, #1
 268 0016 0361     		str	r3, [r0, #16]
 211:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 269              		.loc 1 211 0
 270 0018 8361     		str	r3, [r0, #24]
 212:Src/main.c    ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 271              		.loc 1 212 0
 272 001a 0262     		str	r2, [r0, #32]
 213:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 273              		.loc 1 213 0
 274 001c C262     		str	r2, [r0, #44]
 214:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 275              		.loc 1 214 0
 276 001e 1149     		ldr	r1, .L24+8
 277 0020 8162     		str	r1, [r0, #40]
 215:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 278              		.loc 1 215 0
 279 0022 C260     		str	r2, [r0, #12]
 216:Src/main.c    ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 280              		.loc 1 216 0
 281 0024 C361     		str	r3, [r0, #28]
 217:Src/main.c    ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 282              		.loc 1 217 0
 283 0026 0363     		str	r3, [r0, #48]
 218:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 284              		.loc 1 218 0
 285 0028 4361     		str	r3, [r0, #20]
 219:Src/main.c    ****   {
 286              		.loc 1 219 0
 287 002a FFF7FEFF 		bl	HAL_ADC_Init
 288              	.LVL14:
 289 002e 18B1     		cbz	r0, .L21
 221:Src/main.c    ****   }
 290              		.loc 1 221 0
 291 0030 0D48     		ldr	r0, .L24+12
 292 0032 DD21     		movs	r1, #221
 293 0034 FFF7FEFF 		bl	_Error_Handler
 294              	.LVL15:
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s 			page 12


 295              	.L21:
 226:Src/main.c    ****   sConfig.Rank = 1;
 296              		.loc 1 226 0
 297 0038 0023     		movs	r3, #0
 298 003a 0093     		str	r3, [sp]
 227:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 299              		.loc 1 227 0
 300 003c 0123     		movs	r3, #1
 301 003e 0193     		str	r3, [sp, #4]
 228:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 302              		.loc 1 228 0
 303 0040 0723     		movs	r3, #7
 304 0042 0293     		str	r3, [sp, #8]
 229:Src/main.c    ****   {
 305              		.loc 1 229 0
 306 0044 0548     		ldr	r0, .L24
 307 0046 6946     		mov	r1, sp
 308 0048 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 309              	.LVL16:
 310 004c 18B1     		cbz	r0, .L20
 231:Src/main.c    ****   }
 311              		.loc 1 231 0
 312 004e 0648     		ldr	r0, .L24+12
 313 0050 E721     		movs	r1, #231
 314 0052 FFF7FEFF 		bl	_Error_Handler
 315              	.LVL17:
 316              	.L20:
 233:Src/main.c    **** 
 317              		.loc 1 233 0
 318 0056 05B0     		add	sp, sp, #20
 319              	.LCFI9:
 320              		.cfi_def_cfa_offset 4
 321              		@ sp needed
 322 0058 5DF804FB 		ldr	pc, [sp], #4
 323              	.L25:
 324              		.align	2
 325              	.L24:
 326 005c 00000000 		.word	hadc1
 327 0060 00200140 		.word	1073815552
 328 0064 0100000F 		.word	251658241
 329 0068 00000000 		.word	.LC0
 330              		.cfi_endproc
 331              	.LFE126:
 333              		.section	.text.MX_I2C1_Init,"ax",%progbits
 334              		.align	2
 335              		.thumb
 336              		.thumb_func
 338              	MX_I2C1_Init:
 339              	.LFB127:
 237:Src/main.c    **** 
 340              		.loc 1 237 0
 341              		.cfi_startproc
 342              		@ args = 0, pretend = 0, frame = 0
 343              		@ frame_needed = 0, uses_anonymous_args = 0
 344 0000 08B5     		push	{r3, lr}
 345              	.LCFI10:
 346              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s 			page 13


 347              		.cfi_offset 3, -8
 348              		.cfi_offset 14, -4
 239:Src/main.c    ****   hi2c1.Init.ClockSpeed = 100000;
 349              		.loc 1 239 0
 350 0002 0B48     		ldr	r0, .L29
 351 0004 0B4B     		ldr	r3, .L29+4
 352 0006 0360     		str	r3, [r0]
 240:Src/main.c    ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 353              		.loc 1 240 0
 354 0008 0B4B     		ldr	r3, .L29+8
 355 000a 4360     		str	r3, [r0, #4]
 241:Src/main.c    ****   hi2c1.Init.OwnAddress1 = 0;
 356              		.loc 1 241 0
 357 000c 0023     		movs	r3, #0
 358 000e 8360     		str	r3, [r0, #8]
 242:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 359              		.loc 1 242 0
 360 0010 C360     		str	r3, [r0, #12]
 243:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 361              		.loc 1 243 0
 362 0012 4FF48042 		mov	r2, #16384
 363 0016 0261     		str	r2, [r0, #16]
 244:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
 364              		.loc 1 244 0
 365 0018 4361     		str	r3, [r0, #20]
 245:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 366              		.loc 1 245 0
 367 001a 8361     		str	r3, [r0, #24]
 246:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 368              		.loc 1 246 0
 369 001c C361     		str	r3, [r0, #28]
 247:Src/main.c    ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 370              		.loc 1 247 0
 371 001e 0362     		str	r3, [r0, #32]
 248:Src/main.c    ****   {
 372              		.loc 1 248 0
 373 0020 FFF7FEFF 		bl	HAL_I2C_Init
 374              	.LVL18:
 375 0024 18B1     		cbz	r0, .L26
 250:Src/main.c    ****   }
 376              		.loc 1 250 0
 377 0026 0548     		ldr	r0, .L29+12
 378 0028 FA21     		movs	r1, #250
 379 002a FFF7FEFF 		bl	_Error_Handler
 380              	.LVL19:
 381              	.L26:
 382 002e 08BD     		pop	{r3, pc}
 383              	.L30:
 384              		.align	2
 385              	.L29:
 386 0030 00000000 		.word	hi2c1
 387 0034 00540040 		.word	1073763328
 388 0038 A0860100 		.word	100000
 389 003c 00000000 		.word	.LC0
 390              		.cfi_endproc
 391              	.LFE127:
 393              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s 			page 14


 394              		.align	2
 395              		.thumb
 396              		.thumb_func
 398              	MX_USART2_UART_Init:
 399              	.LFB128:
 256:Src/main.c    **** 
 400              		.loc 1 256 0
 401              		.cfi_startproc
 402              		@ args = 0, pretend = 0, frame = 0
 403              		@ frame_needed = 0, uses_anonymous_args = 0
 404 0000 08B5     		push	{r3, lr}
 405              	.LCFI11:
 406              		.cfi_def_cfa_offset 8
 407              		.cfi_offset 3, -8
 408              		.cfi_offset 14, -4
 258:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 409              		.loc 1 258 0
 410 0002 0B48     		ldr	r0, .L34
 411 0004 0B4B     		ldr	r3, .L34+4
 412 0006 0360     		str	r3, [r0]
 259:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 413              		.loc 1 259 0
 414 0008 4FF4E133 		mov	r3, #115200
 415 000c 4360     		str	r3, [r0, #4]
 260:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 416              		.loc 1 260 0
 417 000e 0023     		movs	r3, #0
 418 0010 8360     		str	r3, [r0, #8]
 261:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 419              		.loc 1 261 0
 420 0012 C360     		str	r3, [r0, #12]
 262:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 421              		.loc 1 262 0
 422 0014 0361     		str	r3, [r0, #16]
 263:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 423              		.loc 1 263 0
 424 0016 0C22     		movs	r2, #12
 425 0018 4261     		str	r2, [r0, #20]
 264:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 426              		.loc 1 264 0
 427 001a 8361     		str	r3, [r0, #24]
 265:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 428              		.loc 1 265 0
 429 001c C361     		str	r3, [r0, #28]
 266:Src/main.c    ****   {
 430              		.loc 1 266 0
 431 001e FFF7FEFF 		bl	HAL_UART_Init
 432              	.LVL20:
 433 0022 20B1     		cbz	r0, .L31
 268:Src/main.c    ****   }
 434              		.loc 1 268 0
 435 0024 0448     		ldr	r0, .L34+8
 436 0026 4FF48671 		mov	r1, #268
 437 002a FFF7FEFF 		bl	_Error_Handler
 438              	.LVL21:
 439              	.L31:
 440 002e 08BD     		pop	{r3, pc}
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s 			page 15


 441              	.L35:
 442              		.align	2
 443              	.L34:
 444 0030 00000000 		.word	huart2
 445 0034 00440040 		.word	1073759232
 446 0038 00000000 		.word	.LC0
 447              		.cfi_endproc
 448              	.LFE128:
 450              		.section	.text.SystemClock_Config,"ax",%progbits
 451              		.align	2
 452              		.global	SystemClock_Config
 453              		.thumb
 454              		.thumb_func
 456              	SystemClock_Config:
 457              	.LFB125:
 152:Src/main.c    **** 
 458              		.loc 1 152 0
 459              		.cfi_startproc
 460              		@ args = 0, pretend = 0, frame = 80
 461              		@ frame_needed = 0, uses_anonymous_args = 0
 462 0000 00B5     		push	{lr}
 463              	.LCFI12:
 464              		.cfi_def_cfa_offset 4
 465              		.cfi_offset 14, -4
 466 0002 95B0     		sub	sp, sp, #84
 467              	.LCFI13:
 468              		.cfi_def_cfa_offset 88
 469              	.LBB5:
 159:Src/main.c    **** 
 470              		.loc 1 159 0
 471 0004 0022     		movs	r2, #0
 472 0006 0192     		str	r2, [sp, #4]
 473 0008 244B     		ldr	r3, .L40
 474 000a 196C     		ldr	r1, [r3, #64]
 475 000c 41F08051 		orr	r1, r1, #268435456
 476 0010 1964     		str	r1, [r3, #64]
 477 0012 1B6C     		ldr	r3, [r3, #64]
 478 0014 03F08053 		and	r3, r3, #268435456
 479 0018 0193     		str	r3, [sp, #4]
 480 001a 019B     		ldr	r3, [sp, #4]
 481              	.LBE5:
 482              	.LBB6:
 161:Src/main.c    **** 
 483              		.loc 1 161 0
 484 001c 0292     		str	r2, [sp, #8]
 485 001e 2049     		ldr	r1, .L40+4
 486 0020 0B68     		ldr	r3, [r1]
 487 0022 23F44043 		bic	r3, r3, #49152
 488 0026 43F40043 		orr	r3, r3, #32768
 489 002a 0B60     		str	r3, [r1]
 490 002c 0B68     		ldr	r3, [r1]
 491 002e 03F44043 		and	r3, r3, #49152
 492 0032 0293     		str	r3, [sp, #8]
 493 0034 029B     		ldr	r3, [sp, #8]
 494              	.LBE6:
 165:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 495              		.loc 1 165 0
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s 			page 16


 496 0036 0223     		movs	r3, #2
 497 0038 0893     		str	r3, [sp, #32]
 166:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 498              		.loc 1 166 0
 499 003a 0123     		movs	r3, #1
 500 003c 0B93     		str	r3, [sp, #44]
 167:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 501              		.loc 1 167 0
 502 003e 1023     		movs	r3, #16
 503 0040 0C93     		str	r3, [sp, #48]
 168:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 504              		.loc 1 168 0
 505 0042 0E92     		str	r2, [sp, #56]
 169:Src/main.c    ****   {
 506              		.loc 1 169 0
 507 0044 08A8     		add	r0, sp, #32
 508 0046 FFF7FEFF 		bl	HAL_RCC_OscConfig
 509              	.LVL22:
 510 004a 18B1     		cbz	r0, .L37
 171:Src/main.c    ****   }
 511              		.loc 1 171 0
 512 004c 1548     		ldr	r0, .L40+8
 513 004e AB21     		movs	r1, #171
 514 0050 FFF7FEFF 		bl	_Error_Handler
 515              	.LVL23:
 516              	.L37:
 176:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 517              		.loc 1 176 0
 518 0054 0F23     		movs	r3, #15
 519 0056 0393     		str	r3, [sp, #12]
 177:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 520              		.loc 1 177 0
 521 0058 0021     		movs	r1, #0
 522 005a 0491     		str	r1, [sp, #16]
 178:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 523              		.loc 1 178 0
 524 005c 0591     		str	r1, [sp, #20]
 179:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 525              		.loc 1 179 0
 526 005e 0691     		str	r1, [sp, #24]
 180:Src/main.c    **** 
 527              		.loc 1 180 0
 528 0060 0791     		str	r1, [sp, #28]
 182:Src/main.c    ****   {
 529              		.loc 1 182 0
 530 0062 03A8     		add	r0, sp, #12
 531 0064 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 532              	.LVL24:
 533 0068 18B1     		cbz	r0, .L38
 184:Src/main.c    ****   }
 534              		.loc 1 184 0
 535 006a 0E48     		ldr	r0, .L40+8
 536 006c B821     		movs	r1, #184
 537 006e FFF7FEFF 		bl	_Error_Handler
 538              	.LVL25:
 539              	.L38:
 189:Src/main.c    **** 
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s 			page 17


 540              		.loc 1 189 0
 541 0072 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 542              	.LVL26:
 543 0076 0C4B     		ldr	r3, .L40+12
 544 0078 A3FB0030 		umull	r3, r0, r3, r0
 545 007c 8009     		lsrs	r0, r0, #6
 546 007e FFF7FEFF 		bl	HAL_SYSTICK_Config
 547              	.LVL27:
 193:Src/main.c    **** 
 548              		.loc 1 193 0
 549 0082 0420     		movs	r0, #4
 550 0084 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 551              	.LVL28:
 196:Src/main.c    **** }
 552              		.loc 1 196 0
 553 0088 4FF0FF30 		mov	r0, #-1
 554 008c 0021     		movs	r1, #0
 555 008e 0A46     		mov	r2, r1
 556 0090 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 557              	.LVL29:
 197:Src/main.c    **** 
 558              		.loc 1 197 0
 559 0094 15B0     		add	sp, sp, #84
 560              	.LCFI14:
 561              		.cfi_def_cfa_offset 4
 562              		@ sp needed
 563 0096 5DF804FB 		ldr	pc, [sp], #4
 564              	.L41:
 565 009a 00BF     		.align	2
 566              	.L40:
 567 009c 00380240 		.word	1073887232
 568 00a0 00700040 		.word	1073770496
 569 00a4 00000000 		.word	.LC0
 570 00a8 D34D6210 		.word	274877907
 571              		.cfi_endproc
 572              	.LFE125:
 574              		.global	__aeabi_d2iz
 575              		.global	__aeabi_i2d
 576              		.global	__aeabi_dsub
 577              		.global	__aeabi_dmul
 578              		.section	.text.main,"ax",%progbits
 579              		.align	2
 580              		.global	main
 581              		.thumb
 582              		.thumb_func
 584              	main:
 585              	.LFB124:
  94:Src/main.c    ****   /* USER CODE BEGIN 1 */
 586              		.loc 1 94 0
 587              		.cfi_startproc
 588              		@ args = 0, pretend = 0, frame = 24
 589              		@ frame_needed = 0, uses_anonymous_args = 0
 590 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 591              	.LCFI15:
 592              		.cfi_def_cfa_offset 20
 593              		.cfi_offset 4, -20
 594              		.cfi_offset 5, -16
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s 			page 18


 595              		.cfi_offset 6, -12
 596              		.cfi_offset 7, -8
 597              		.cfi_offset 14, -4
 598 0002 87B0     		sub	sp, sp, #28
 599              	.LCFI16:
 600              		.cfi_def_cfa_offset 48
 102:Src/main.c    **** 
 601              		.loc 1 102 0
 602 0004 FFF7FEFF 		bl	HAL_Init
 603              	.LVL30:
 109:Src/main.c    **** 
 604              		.loc 1 109 0
 605 0008 FFF7FEFF 		bl	SystemClock_Config
 606              	.LVL31:
 116:Src/main.c    ****   MX_DMA_Init();
 607              		.loc 1 116 0
 608 000c FFF7FEFF 		bl	MX_GPIO_Init
 609              	.LVL32:
 117:Src/main.c    ****   MX_ADC1_Init();
 610              		.loc 1 117 0
 611 0010 FFF7FEFF 		bl	MX_DMA_Init
 612              	.LVL33:
 118:Src/main.c    ****   MX_I2C1_Init();
 613              		.loc 1 118 0
 614 0014 FFF7FEFF 		bl	MX_ADC1_Init
 615              	.LVL34:
 119:Src/main.c    ****   MX_USART2_UART_Init();
 616              		.loc 1 119 0
 617 0018 FFF7FEFF 		bl	MX_I2C1_Init
 618              	.LVL35:
 120:Src/main.c    ****   /* USER CODE BEGIN 2 */
 619              		.loc 1 120 0
 620 001c FFF7FEFF 		bl	MX_USART2_UART_Init
 621              	.LVL36:
 122:Src/main.c    **** 
 622              		.loc 1 122 0
 623 0020 FFF7FEFF 		bl	ssd1306_Init
 624              	.LVL37:
 124:Src/main.c    **** 
 625              		.loc 1 124 0
 626 0024 1F48     		ldr	r0, .L45
 627 0026 2049     		ldr	r1, .L45+4
 628 0028 4FF48062 		mov	r2, #1024
 629 002c FFF7FEFF 		bl	HAL_ADC_Start_DMA
 630              	.LVL38:
 631              	.L43:
 632              	.LBB7:
 132:Src/main.c    ****     double val = goertzel(read_value, 8080, 1000, 1024);
 633              		.loc 1 132 0 discriminator 1
 634 0030 0024     		movs	r4, #0
 635 0032 0194     		str	r4, [sp, #4]
 636 0034 0294     		str	r4, [sp, #8]
 637 0036 0394     		str	r4, [sp, #12]
 638 0038 0494     		str	r4, [sp, #16]
 639 003a 0594     		str	r4, [sp, #20]
 133:Src/main.c    ****     int predec = (int)(val / 1);
 640              		.loc 1 133 0 discriminator 1
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s 			page 19


 641 003c 1B48     		ldr	r0, .L45+8
 642 003e 41F69071 		movw	r1, #8080
 643 0042 4FF47A72 		mov	r2, #1000
 644 0046 4FF48063 		mov	r3, #1024
 645 004a FFF7FEFF 		bl	goertzel
 646              	.LVL39:
 647 004e 57EC106B 		fmrrd	r6, r7, d0
 648              	.LVL40:
 134:Src/main.c    ****     int postdec = (int)((val - predec) * 1000);
 649              		.loc 1 134 0 discriminator 1
 650 0052 10EE100A 		fmrs	r0, s0	@ int
 651 0056 3946     		mov	r1, r7
 652 0058 FFF7FEFF 		bl	__aeabi_d2iz
 653              	.LVL41:
 654 005c 0546     		mov	r5, r0
 655              	.LVL42:
 135:Src/main.c    ****     sprintf(msg, "%d.%d\n", predec, postdec);
 656              		.loc 1 135 0 discriminator 1
 657 005e FFF7FEFF 		bl	__aeabi_i2d
 658              	.LVL43:
 659 0062 0246     		mov	r2, r0
 660 0064 0B46     		mov	r3, r1
 661 0066 3046     		mov	r0, r6
 662 0068 3946     		mov	r1, r7
 663 006a FFF7FEFF 		bl	__aeabi_dsub
 664              	.LVL44:
 665 006e 0022     		movs	r2, #0
 666 0070 0F4B     		ldr	r3, .L45+12
 667 0072 FFF7FEFF 		bl	__aeabi_dmul
 668              	.LVL45:
 669 0076 FFF7FEFF 		bl	__aeabi_d2iz
 670              	.LVL46:
 671 007a 0346     		mov	r3, r0
 672              	.LVL47:
 136:Src/main.c    ****     print(msg, 0);
 673              		.loc 1 136 0 discriminator 1
 674 007c 01A8     		add	r0, sp, #4
 675              	.LVL48:
 676 007e 0D49     		ldr	r1, .L45+16
 677 0080 2A46     		mov	r2, r5
 678 0082 FFF7FEFF 		bl	sprintf
 679              	.LVL49:
 137:Src/main.c    ****     HAL_UART_Transmit(&huart2, (uint8_t *)msg, strlen(msg), 0xFFFF);
 680              		.loc 1 137 0 discriminator 1
 681 0086 01A8     		add	r0, sp, #4
 682 0088 2146     		mov	r1, r4
 683 008a FFF7FEFF 		bl	print
 684              	.LVL50:
 138:Src/main.c    **** 
 685              		.loc 1 138 0 discriminator 1
 686 008e 01A8     		add	r0, sp, #4
 687 0090 FFF7FEFF 		bl	strlen
 688              	.LVL51:
 689 0094 82B2     		uxth	r2, r0
 690 0096 0848     		ldr	r0, .L45+20
 691 0098 01A9     		add	r1, sp, #4
 692 009a 4FF6FF73 		movw	r3, #65535
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s 			page 20


 693 009e FFF7FEFF 		bl	HAL_UART_Transmit
 694              	.LVL52:
 695              	.LBE7:
 143:Src/main.c    ****   /* USER CODE END 3 */
 696              		.loc 1 143 0 discriminator 1
 697 00a2 C5E7     		b	.L43
 698              	.L46:
 699              		.align	2
 700              	.L45:
 701 00a4 00000000 		.word	hadc1
 702 00a8 00000000 		.word	adc_buffer
 703 00ac 00000000 		.word	read_value
 704 00b0 00408F40 		.word	1083129856
 705 00b4 0C000000 		.word	.LC1
 706 00b8 00000000 		.word	huart2
 707              		.cfi_endproc
 708              	.LFE124:
 710              		.comm	read_value,4096,4
 711              		.comm	adc_buffer,4096,4
 712              		.comm	huart2,64,4
 713              		.comm	hi2c1,84,4
 714              		.comm	hdma_adc1,96,4
 715              		.comm	hadc1,72,4
 716              		.section	.rodata.str1.4,"aMS",%progbits,1
 717              		.align	2
 718              	.LC0:
 719 0000 5372632F 		.ascii	"Src/main.c\000"
 719      6D61696E 
 719      2E6300
 720 000b 00       		.space	1
 721              	.LC1:
 722 000c 25642E25 		.ascii	"%d.%d\012\000"
 722      640A00
 723              		.text
 724              	.Letext0:
 725              		.file 2 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 726              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/machine/_default_types
 727              		.file 4 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/sys/_stdint.h"
 728              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 729              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 730              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 731              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 732              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 733              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 734              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 735              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 736              		.file 13 "Inc/fonts.h"
 737              		.file 14 "Inc/ssd1306.h"
 738              		.file 15 "<built-in>"
 739              		.file 16 "Drivers/CMSIS/Include/core_cm4.h"
 740              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 741              		.file 18 "Inc/filter.h"
 742              		.file 19 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/stdio.h"
 743              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s 			page 21


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s:21     .text.MX_GPIO_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s:69     .text.MX_GPIO_Init:0000000000000034 $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s:74     .text.MX_DMA_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s:78     .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s:122    .text.MX_DMA_Init:0000000000000030 $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s:127    .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s:132    .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s:155    .text.HAL_ADC_ConvCpltCallback:0000000000000010 $d
                            *COM*:0000000000001000 read_value
                            *COM*:0000000000001000 adc_buffer
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s:161    .text.print:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s:166    .text.print:0000000000000000 print
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s:213    .text.print:0000000000000034 $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s:218    .text._Error_Handler:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s:223    .text._Error_Handler:0000000000000000 _Error_Handler
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s:239    .text.MX_ADC1_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s:243    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s:326    .text.MX_ADC1_Init:000000000000005c $d
                            *COM*:0000000000000048 hadc1
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s:334    .text.MX_I2C1_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s:338    .text.MX_I2C1_Init:0000000000000000 MX_I2C1_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s:386    .text.MX_I2C1_Init:0000000000000030 $d
                            *COM*:0000000000000054 hi2c1
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s:394    .text.MX_USART2_UART_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s:398    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s:444    .text.MX_USART2_UART_Init:0000000000000030 $d
                            *COM*:0000000000000040 huart2
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s:451    .text.SystemClock_Config:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s:456    .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s:567    .text.SystemClock_Config:000000000000009c $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s:579    .text.main:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s:584    .text.main:0000000000000000 main
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s:701    .text.main:00000000000000a4 $d
                            *COM*:0000000000000060 hdma_adc1
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s:717    .rodata.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
memcpy
ssd1306_Fill
ssd1306_SetCursor
ssd1306_WriteString
ssd1306_UpdateScreen
Font_7x10
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_I2C_Init
HAL_UART_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cccuczC7.s 			page 22


HAL_SYSTICK_CLKSourceConfig
__aeabi_d2iz
__aeabi_i2d
__aeabi_dsub
__aeabi_dmul
HAL_Init
ssd1306_Init
HAL_ADC_Start_DMA
goertzel
sprintf
strlen
HAL_UART_Transmit
