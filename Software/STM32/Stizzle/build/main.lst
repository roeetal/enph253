ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc5osJKi.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"main.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  25              	MX_GPIO_Init:
  26              	.LFB128:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** 
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc5osJKi.s 			page 2


  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  40:Src/main.c    **** #include "main.h"
  41:Src/main.c    **** #include "stm32f4xx_hal.h"
  42:Src/main.c    **** 
  43:Src/main.c    **** /* USER CODE BEGIN Includes */
  44:Src/main.c    **** 
  45:Src/main.c    **** /* USER CODE END Includes */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  48:Src/main.c    **** ADC_HandleTypeDef hadc1;
  49:Src/main.c    **** 
  50:Src/main.c    **** TIM_HandleTypeDef htim1;
  51:Src/main.c    **** TIM_HandleTypeDef htim2;
  52:Src/main.c    **** 
  53:Src/main.c    **** /* USER CODE BEGIN PV */
  54:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  55:Src/main.c    **** 
  56:Src/main.c    **** /* USER CODE END PV */
  57:Src/main.c    **** 
  58:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  59:Src/main.c    **** void SystemClock_Config(void);
  60:Src/main.c    **** static void MX_GPIO_Init(void);
  61:Src/main.c    **** static void MX_ADC1_Init(void);
  62:Src/main.c    **** static void MX_TIM1_Init(void);
  63:Src/main.c    **** static void MX_TIM2_Init(void);
  64:Src/main.c    ****                                     
  65:Src/main.c    **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
  66:Src/main.c    ****                                 
  67:Src/main.c    ****                                 
  68:Src/main.c    **** 
  69:Src/main.c    **** /* USER CODE BEGIN PFP */
  70:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  71:Src/main.c    **** 
  72:Src/main.c    **** /* USER CODE END PFP */
  73:Src/main.c    **** 
  74:Src/main.c    **** /* USER CODE BEGIN 0 */
  75:Src/main.c    **** 
  76:Src/main.c    **** /* USER CODE END 0 */
  77:Src/main.c    **** 
  78:Src/main.c    **** /**
  79:Src/main.c    ****   * @brief  The application entry point.
  80:Src/main.c    ****   *
  81:Src/main.c    ****   * @retval None
  82:Src/main.c    ****   */
  83:Src/main.c    **** int main(void)
  84:Src/main.c    **** {
  85:Src/main.c    ****   /* USER CODE BEGIN 1 */
  86:Src/main.c    **** 
  87:Src/main.c    ****   /* USER CODE END 1 */
  88:Src/main.c    **** 
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc5osJKi.s 			page 3


  89:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
  90:Src/main.c    **** 
  91:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  92:Src/main.c    ****   HAL_Init();
  93:Src/main.c    **** 
  94:Src/main.c    ****   /* USER CODE BEGIN Init */
  95:Src/main.c    **** 
  96:Src/main.c    ****   /* USER CODE END Init */
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* Configure the system clock */
  99:Src/main.c    ****   SystemClock_Config();
 100:Src/main.c    **** 
 101:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 102:Src/main.c    **** 
 103:Src/main.c    ****   /* USER CODE END SysInit */
 104:Src/main.c    **** 
 105:Src/main.c    ****   /* Initialize all configured peripherals */
 106:Src/main.c    ****   MX_GPIO_Init();
 107:Src/main.c    ****   MX_ADC1_Init();
 108:Src/main.c    ****   MX_TIM1_Init();
 109:Src/main.c    ****   MX_TIM2_Init();
 110:Src/main.c    ****   /* USER CODE BEGIN 2 */
 111:Src/main.c    **** 
 112:Src/main.c    ****   /* USER CODE END 2 */
 113:Src/main.c    **** 
 114:Src/main.c    ****   /* Infinite loop */
 115:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 116:Src/main.c    ****   while (1)
 117:Src/main.c    ****   {
 118:Src/main.c    **** 
 119:Src/main.c    ****   /* USER CODE END WHILE */
 120:Src/main.c    **** 
 121:Src/main.c    ****   /* USER CODE BEGIN 3 */
 122:Src/main.c    **** 
 123:Src/main.c    ****   }
 124:Src/main.c    ****   /* USER CODE END 3 */
 125:Src/main.c    **** 
 126:Src/main.c    **** }
 127:Src/main.c    **** 
 128:Src/main.c    **** /**
 129:Src/main.c    ****   * @brief System Clock Configuration
 130:Src/main.c    ****   * @retval None
 131:Src/main.c    ****   */
 132:Src/main.c    **** void SystemClock_Config(void)
 133:Src/main.c    **** {
 134:Src/main.c    **** 
 135:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 136:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 137:Src/main.c    **** 
 138:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 139:Src/main.c    ****     */
 140:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 141:Src/main.c    **** 
 142:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 143:Src/main.c    **** 
 144:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 145:Src/main.c    ****     */
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc5osJKi.s 			page 4


 146:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 147:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 148:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 149:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 150:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 151:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 152:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 72;
 153:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 154:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 155:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 156:Src/main.c    ****   {
 157:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 158:Src/main.c    ****   }
 159:Src/main.c    **** 
 160:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 161:Src/main.c    ****     */
 162:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 163:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 164:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 165:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 166:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV16;
 167:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV16;
 168:Src/main.c    **** 
 169:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 170:Src/main.c    ****   {
 171:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 172:Src/main.c    ****   }
 173:Src/main.c    **** 
 174:Src/main.c    ****     /**Configure the Systick interrupt time 
 175:Src/main.c    ****     */
 176:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 177:Src/main.c    **** 
 178:Src/main.c    ****     /**Configure the Systick 
 179:Src/main.c    ****     */
 180:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 181:Src/main.c    **** 
 182:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 183:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 184:Src/main.c    **** }
 185:Src/main.c    **** 
 186:Src/main.c    **** /* ADC1 init function */
 187:Src/main.c    **** static void MX_ADC1_Init(void)
 188:Src/main.c    **** {
 189:Src/main.c    **** 
 190:Src/main.c    ****   ADC_ChannelConfTypeDef sConfig;
 191:Src/main.c    **** 
 192:Src/main.c    ****     /**Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of co
 193:Src/main.c    ****     */
 194:Src/main.c    ****   hadc1.Instance = ADC1;
 195:Src/main.c    ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 196:Src/main.c    ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 197:Src/main.c    ****   hadc1.Init.ScanConvMode = DISABLE;
 198:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 199:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 200:Src/main.c    ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 201:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 202:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc5osJKi.s 			page 5


 203:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 204:Src/main.c    ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 205:Src/main.c    ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 206:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 207:Src/main.c    ****   {
 208:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 209:Src/main.c    ****   }
 210:Src/main.c    **** 
 211:Src/main.c    ****     /**Configure for the selected ADC regular channel its corresponding rank in the sequencer and i
 212:Src/main.c    ****     */
 213:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_0;
 214:Src/main.c    ****   sConfig.Rank = 1;
 215:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 216:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 217:Src/main.c    ****   {
 218:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 219:Src/main.c    ****   }
 220:Src/main.c    **** 
 221:Src/main.c    **** }
 222:Src/main.c    **** 
 223:Src/main.c    **** /* TIM1 init function */
 224:Src/main.c    **** static void MX_TIM1_Init(void)
 225:Src/main.c    **** {
 226:Src/main.c    **** 
 227:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig;
 228:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
 229:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
 230:Src/main.c    ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig;
 231:Src/main.c    **** 
 232:Src/main.c    ****   htim1.Instance = TIM1;
 233:Src/main.c    ****   htim1.Init.Prescaler = 0;
 234:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 235:Src/main.c    ****   htim1.Init.Period = 0;
 236:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 237:Src/main.c    ****   htim1.Init.RepetitionCounter = 0;
 238:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 239:Src/main.c    ****   {
 240:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 241:Src/main.c    ****   }
 242:Src/main.c    **** 
 243:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 244:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 245:Src/main.c    ****   {
 246:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 247:Src/main.c    ****   }
 248:Src/main.c    **** 
 249:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 250:Src/main.c    ****   {
 251:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 252:Src/main.c    ****   }
 253:Src/main.c    **** 
 254:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 255:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 256:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 257:Src/main.c    ****   {
 258:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 259:Src/main.c    ****   }
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc5osJKi.s 			page 6


 260:Src/main.c    **** 
 261:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 262:Src/main.c    ****   sConfigOC.Pulse = 0;
 263:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 264:Src/main.c    ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 265:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 266:Src/main.c    ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 267:Src/main.c    ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 268:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 269:Src/main.c    ****   {
 270:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 271:Src/main.c    ****   }
 272:Src/main.c    **** 
 273:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 274:Src/main.c    ****   {
 275:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 276:Src/main.c    ****   }
 277:Src/main.c    **** 
 278:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 279:Src/main.c    ****   {
 280:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 281:Src/main.c    ****   }
 282:Src/main.c    **** 
 283:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 284:Src/main.c    ****   {
 285:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 286:Src/main.c    ****   }
 287:Src/main.c    **** 
 288:Src/main.c    ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 289:Src/main.c    ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 290:Src/main.c    ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 291:Src/main.c    ****   sBreakDeadTimeConfig.DeadTime = 0;
 292:Src/main.c    ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 293:Src/main.c    ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 294:Src/main.c    ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 295:Src/main.c    ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 296:Src/main.c    ****   {
 297:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 298:Src/main.c    ****   }
 299:Src/main.c    **** 
 300:Src/main.c    ****   HAL_TIM_MspPostInit(&htim1);
 301:Src/main.c    **** 
 302:Src/main.c    **** }
 303:Src/main.c    **** 
 304:Src/main.c    **** /* TIM2 init function */
 305:Src/main.c    **** static void MX_TIM2_Init(void)
 306:Src/main.c    **** {
 307:Src/main.c    **** 
 308:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig;
 309:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
 310:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
 311:Src/main.c    **** 
 312:Src/main.c    ****   htim2.Instance = TIM2;
 313:Src/main.c    ****   htim2.Init.Prescaler = 0;
 314:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 315:Src/main.c    ****   htim2.Init.Period = 0;
 316:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc5osJKi.s 			page 7


 317:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 318:Src/main.c    ****   {
 319:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 320:Src/main.c    ****   }
 321:Src/main.c    **** 
 322:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 323:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 324:Src/main.c    ****   {
 325:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 326:Src/main.c    ****   }
 327:Src/main.c    **** 
 328:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 329:Src/main.c    ****   {
 330:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 331:Src/main.c    ****   }
 332:Src/main.c    **** 
 333:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 334:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 335:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 336:Src/main.c    ****   {
 337:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 338:Src/main.c    ****   }
 339:Src/main.c    **** 
 340:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 341:Src/main.c    ****   sConfigOC.Pulse = 0;
 342:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 343:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 344:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 345:Src/main.c    ****   {
 346:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 347:Src/main.c    ****   }
 348:Src/main.c    **** 
 349:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 350:Src/main.c    ****   {
 351:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 352:Src/main.c    ****   }
 353:Src/main.c    **** 
 354:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 355:Src/main.c    ****   {
 356:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 357:Src/main.c    ****   }
 358:Src/main.c    **** 
 359:Src/main.c    ****   HAL_TIM_MspPostInit(&htim2);
 360:Src/main.c    **** 
 361:Src/main.c    **** }
 362:Src/main.c    **** 
 363:Src/main.c    **** /** Configure pins as 
 364:Src/main.c    ****         * Analog 
 365:Src/main.c    ****         * Input 
 366:Src/main.c    ****         * Output
 367:Src/main.c    ****         * EVENT_OUT
 368:Src/main.c    ****         * EXTI
 369:Src/main.c    **** */
 370:Src/main.c    **** static void MX_GPIO_Init(void)
 371:Src/main.c    **** {
  28              		.loc 1 371 0
  29              		.cfi_startproc
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc5osJKi.s 			page 8


  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 20
  35              		.cfi_offset 4, -20
  36              		.cfi_offset 5, -16
  37              		.cfi_offset 6, -12
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40 0002 89B0     		sub	sp, sp, #36
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 56
  43              	.LBB2:
 372:Src/main.c    **** 
 373:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct;
 374:Src/main.c    **** 
 375:Src/main.c    ****   /* GPIO Ports Clock Enable */
 376:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  44              		.loc 1 376 0
  45 0004 0024     		movs	r4, #0
  46 0006 0094     		str	r4, [sp]
  47 0008 214B     		ldr	r3, .L3
  48 000a 1A6B     		ldr	r2, [r3, #48]
  49 000c 42F00102 		orr	r2, r2, #1
  50 0010 1A63     		str	r2, [r3, #48]
  51 0012 1A6B     		ldr	r2, [r3, #48]
  52 0014 02F00102 		and	r2, r2, #1
  53 0018 0092     		str	r2, [sp]
  54 001a 009A     		ldr	r2, [sp]
  55              	.LBE2:
  56              	.LBB3:
 377:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  57              		.loc 1 377 0
  58 001c 0194     		str	r4, [sp, #4]
  59 001e 1A6B     		ldr	r2, [r3, #48]
  60 0020 42F00202 		orr	r2, r2, #2
  61 0024 1A63     		str	r2, [r3, #48]
  62 0026 1A6B     		ldr	r2, [r3, #48]
  63 0028 02F00202 		and	r2, r2, #2
  64 002c 0192     		str	r2, [sp, #4]
  65 002e 019A     		ldr	r2, [sp, #4]
  66              	.LBE3:
  67              	.LBB4:
 378:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  68              		.loc 1 378 0
  69 0030 0294     		str	r4, [sp, #8]
  70 0032 1A6B     		ldr	r2, [r3, #48]
  71 0034 42F00402 		orr	r2, r2, #4
  72 0038 1A63     		str	r2, [r3, #48]
  73 003a 1B6B     		ldr	r3, [r3, #48]
  74 003c 03F00403 		and	r3, r3, #4
  75 0040 0293     		str	r3, [sp, #8]
  76 0042 029B     		ldr	r3, [sp, #8]
  77              	.LBE4:
 379:Src/main.c    **** 
 380:Src/main.c    ****   /*Configure GPIO pin Output Level */
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc5osJKi.s 			page 9


 381:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, R_Sonar_Out_Pin|L_Sonar_Out_Pin, GPIO_PIN_RESET);
  78              		.loc 1 381 0
  79 0044 134E     		ldr	r6, .L3+4
  80 0046 3046     		mov	r0, r6
  81 0048 4FF4A041 		mov	r1, #20480
  82 004c 2246     		mov	r2, r4
  83 004e FFF7FEFF 		bl	HAL_GPIO_WritePin
  84              	.LVL0:
 382:Src/main.c    **** 
 383:Src/main.c    ****   /*Configure GPIO pins : R_Sonar_Out_Pin L_Sonar_Out_Pin */
 384:Src/main.c    ****   GPIO_InitStruct.Pin = R_Sonar_Out_Pin|L_Sonar_Out_Pin;
  85              		.loc 1 384 0
  86 0052 4FF4A043 		mov	r3, #20480
  87 0056 0393     		str	r3, [sp, #12]
 385:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  88              		.loc 1 385 0
  89 0058 0125     		movs	r5, #1
  90 005a 0495     		str	r5, [sp, #16]
 386:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
  91              		.loc 1 386 0
  92 005c 0227     		movs	r7, #2
  93 005e 0597     		str	r7, [sp, #20]
 387:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_MEDIUM;
  94              		.loc 1 387 0
  95 0060 0695     		str	r5, [sp, #24]
 388:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
  96              		.loc 1 388 0
  97 0062 3046     		mov	r0, r6
  98 0064 03A9     		add	r1, sp, #12
  99 0066 FFF7FEFF 		bl	HAL_GPIO_Init
 100              	.LVL1:
 389:Src/main.c    **** 
 390:Src/main.c    ****   /*Configure GPIO pins : R_Sonar_In_Pin L_Sonar_In_Pin */
 391:Src/main.c    ****   GPIO_InitStruct.Pin = R_Sonar_In_Pin|L_Sonar_In_Pin;
 101              		.loc 1 391 0
 102 006a 4FF42043 		mov	r3, #40960
 103 006e 0393     		str	r3, [sp, #12]
 392:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 104              		.loc 1 392 0
 105 0070 0494     		str	r4, [sp, #16]
 393:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 106              		.loc 1 393 0
 107 0072 0597     		str	r7, [sp, #20]
 394:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 108              		.loc 1 394 0
 109 0074 3046     		mov	r0, r6
 110 0076 03A9     		add	r1, sp, #12
 111 0078 FFF7FEFF 		bl	HAL_GPIO_Init
 112              	.LVL2:
 395:Src/main.c    **** 
 396:Src/main.c    ****   /*Configure GPIO pins : QRD_R_Pin QRD_L_Pin */
 397:Src/main.c    ****   GPIO_InitStruct.Pin = QRD_R_Pin|QRD_L_Pin;
 113              		.loc 1 397 0
 114 007c C023     		movs	r3, #192
 115 007e 0393     		str	r3, [sp, #12]
 398:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 116              		.loc 1 398 0
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc5osJKi.s 			page 10


 117 0080 0494     		str	r4, [sp, #16]
 399:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 118              		.loc 1 399 0
 119 0082 0595     		str	r5, [sp, #20]
 400:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 120              		.loc 1 400 0
 121 0084 0448     		ldr	r0, .L3+8
 122 0086 03A9     		add	r1, sp, #12
 123 0088 FFF7FEFF 		bl	HAL_GPIO_Init
 124              	.LVL3:
 401:Src/main.c    **** 
 402:Src/main.c    **** }
 125              		.loc 1 402 0
 126 008c 09B0     		add	sp, sp, #36
 127              	.LCFI2:
 128              		.cfi_def_cfa_offset 20
 129              		@ sp needed
 130 008e F0BD     		pop	{r4, r5, r6, r7, pc}
 131              	.L4:
 132              		.align	2
 133              	.L3:
 134 0090 00380240 		.word	1073887232
 135 0094 00040240 		.word	1073873920
 136 0098 00080240 		.word	1073874944
 137              		.cfi_endproc
 138              	.LFE128:
 140              		.section	.text._Error_Handler,"ax",%progbits
 141              		.align	2
 142              		.global	_Error_Handler
 143              		.thumb
 144              		.thumb_func
 146              	_Error_Handler:
 147              	.LFB129:
 403:Src/main.c    **** 
 404:Src/main.c    **** /* USER CODE BEGIN 4 */
 405:Src/main.c    **** 
 406:Src/main.c    **** /* USER CODE END 4 */
 407:Src/main.c    **** 
 408:Src/main.c    **** /**
 409:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 410:Src/main.c    ****   * @param  file: The file name as string.
 411:Src/main.c    ****   * @param  line: The line in file as a number.
 412:Src/main.c    ****   * @retval None
 413:Src/main.c    ****   */
 414:Src/main.c    **** void _Error_Handler(char *file, int line)
 415:Src/main.c    **** {
 148              		.loc 1 415 0
 149              		.cfi_startproc
 150              		@ Volatile: function does not return.
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		@ link register save eliminated.
 154              	.LVL4:
 155              	.L6:
 416:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 417:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 418:Src/main.c    ****   while(1)
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc5osJKi.s 			page 11


 419:Src/main.c    ****   {
 420:Src/main.c    ****   }
 156              		.loc 1 420 0 discriminator 1
 157 0000 FEE7     		b	.L6
 158              		.cfi_endproc
 159              	.LFE129:
 161 0002 00BF     		.section	.text.MX_ADC1_Init,"ax",%progbits
 162              		.align	2
 163              		.thumb
 164              		.thumb_func
 166              	MX_ADC1_Init:
 167              	.LFB125:
 188:Src/main.c    **** 
 168              		.loc 1 188 0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 16
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 172 0000 00B5     		push	{lr}
 173              	.LCFI3:
 174              		.cfi_def_cfa_offset 4
 175              		.cfi_offset 14, -4
 176 0002 85B0     		sub	sp, sp, #20
 177              	.LCFI4:
 178              		.cfi_def_cfa_offset 24
 194:Src/main.c    ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 179              		.loc 1 194 0
 180 0004 1448     		ldr	r0, .L11
 181 0006 154B     		ldr	r3, .L11+4
 182 0008 0360     		str	r3, [r0]
 195:Src/main.c    ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 183              		.loc 1 195 0
 184 000a 0023     		movs	r3, #0
 185 000c 4360     		str	r3, [r0, #4]
 196:Src/main.c    ****   hadc1.Init.ScanConvMode = DISABLE;
 186              		.loc 1 196 0
 187 000e 8360     		str	r3, [r0, #8]
 197:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 188              		.loc 1 197 0
 189 0010 0361     		str	r3, [r0, #16]
 198:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 190              		.loc 1 198 0
 191 0012 8361     		str	r3, [r0, #24]
 199:Src/main.c    ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 192              		.loc 1 199 0
 193 0014 0362     		str	r3, [r0, #32]
 200:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 194              		.loc 1 200 0
 195 0016 C362     		str	r3, [r0, #44]
 201:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 196              		.loc 1 201 0
 197 0018 114A     		ldr	r2, .L11+8
 198 001a 8262     		str	r2, [r0, #40]
 202:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 199              		.loc 1 202 0
 200 001c C360     		str	r3, [r0, #12]
 203:Src/main.c    ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 201              		.loc 1 203 0
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc5osJKi.s 			page 12


 202 001e 0122     		movs	r2, #1
 203 0020 C261     		str	r2, [r0, #28]
 204:Src/main.c    ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 204              		.loc 1 204 0
 205 0022 0363     		str	r3, [r0, #48]
 205:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 206              		.loc 1 205 0
 207 0024 4261     		str	r2, [r0, #20]
 206:Src/main.c    ****   {
 208              		.loc 1 206 0
 209 0026 FFF7FEFF 		bl	HAL_ADC_Init
 210              	.LVL5:
 211 002a 18B1     		cbz	r0, .L8
 208:Src/main.c    ****   }
 212              		.loc 1 208 0
 213 002c 0D48     		ldr	r0, .L11+12
 214 002e D021     		movs	r1, #208
 215 0030 FFF7FEFF 		bl	_Error_Handler
 216              	.LVL6:
 217              	.L8:
 213:Src/main.c    ****   sConfig.Rank = 1;
 218              		.loc 1 213 0
 219 0034 0023     		movs	r3, #0
 220 0036 0093     		str	r3, [sp]
 214:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 221              		.loc 1 214 0
 222 0038 0122     		movs	r2, #1
 223 003a 0192     		str	r2, [sp, #4]
 215:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 224              		.loc 1 215 0
 225 003c 0293     		str	r3, [sp, #8]
 216:Src/main.c    ****   {
 226              		.loc 1 216 0
 227 003e 0648     		ldr	r0, .L11
 228 0040 6946     		mov	r1, sp
 229 0042 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 230              	.LVL7:
 231 0046 18B1     		cbz	r0, .L7
 218:Src/main.c    ****   }
 232              		.loc 1 218 0
 233 0048 0648     		ldr	r0, .L11+12
 234 004a DA21     		movs	r1, #218
 235 004c FFF7FEFF 		bl	_Error_Handler
 236              	.LVL8:
 237              	.L7:
 221:Src/main.c    **** 
 238              		.loc 1 221 0
 239 0050 05B0     		add	sp, sp, #20
 240              	.LCFI5:
 241              		.cfi_def_cfa_offset 4
 242              		@ sp needed
 243 0052 5DF804FB 		ldr	pc, [sp], #4
 244              	.L12:
 245 0056 00BF     		.align	2
 246              	.L11:
 247 0058 00000000 		.word	hadc1
 248 005c 00200140 		.word	1073815552
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc5osJKi.s 			page 13


 249 0060 0100000F 		.word	251658241
 250 0064 00000000 		.word	.LC0
 251              		.cfi_endproc
 252              	.LFE125:
 254              		.section	.text.MX_TIM1_Init,"ax",%progbits
 255              		.align	2
 256              		.thumb
 257              		.thumb_func
 259              	MX_TIM1_Init:
 260              	.LFB126:
 225:Src/main.c    **** 
 261              		.loc 1 225 0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 80
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265 0000 00B5     		push	{lr}
 266              	.LCFI6:
 267              		.cfi_def_cfa_offset 4
 268              		.cfi_offset 14, -4
 269 0002 95B0     		sub	sp, sp, #84
 270              	.LCFI7:
 271              		.cfi_def_cfa_offset 88
 232:Src/main.c    ****   htim1.Init.Prescaler = 0;
 272              		.loc 1 232 0
 273 0004 3F48     		ldr	r0, .L24
 274 0006 404B     		ldr	r3, .L24+4
 275 0008 0360     		str	r3, [r0]
 233:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 276              		.loc 1 233 0
 277 000a 0023     		movs	r3, #0
 278 000c 4360     		str	r3, [r0, #4]
 234:Src/main.c    ****   htim1.Init.Period = 0;
 279              		.loc 1 234 0
 280 000e 8360     		str	r3, [r0, #8]
 235:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 281              		.loc 1 235 0
 282 0010 C360     		str	r3, [r0, #12]
 236:Src/main.c    ****   htim1.Init.RepetitionCounter = 0;
 283              		.loc 1 236 0
 284 0012 0361     		str	r3, [r0, #16]
 237:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 285              		.loc 1 237 0
 286 0014 4361     		str	r3, [r0, #20]
 238:Src/main.c    ****   {
 287              		.loc 1 238 0
 288 0016 FFF7FEFF 		bl	HAL_TIM_Base_Init
 289              	.LVL9:
 290 001a 18B1     		cbz	r0, .L14
 240:Src/main.c    ****   }
 291              		.loc 1 240 0
 292 001c 3B48     		ldr	r0, .L24+8
 293 001e F021     		movs	r1, #240
 294 0020 FFF7FEFF 		bl	_Error_Handler
 295              	.LVL10:
 296              	.L14:
 243:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 297              		.loc 1 243 0
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc5osJKi.s 			page 14


 298 0024 14A9     		add	r1, sp, #80
 299 0026 4FF48053 		mov	r3, #4096
 300 002a 41F8103D 		str	r3, [r1, #-16]!
 244:Src/main.c    ****   {
 301              		.loc 1 244 0
 302 002e 3548     		ldr	r0, .L24
 303 0030 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 304              	.LVL11:
 305 0034 18B1     		cbz	r0, .L15
 246:Src/main.c    ****   }
 306              		.loc 1 246 0
 307 0036 3548     		ldr	r0, .L24+8
 308 0038 F621     		movs	r1, #246
 309 003a FFF7FEFF 		bl	_Error_Handler
 310              	.LVL12:
 311              	.L15:
 249:Src/main.c    ****   {
 312              		.loc 1 249 0
 313 003e 3148     		ldr	r0, .L24
 314 0040 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 315              	.LVL13:
 316 0044 18B1     		cbz	r0, .L16
 251:Src/main.c    ****   }
 317              		.loc 1 251 0
 318 0046 3148     		ldr	r0, .L24+8
 319 0048 FB21     		movs	r1, #251
 320 004a FFF7FEFF 		bl	_Error_Handler
 321              	.LVL14:
 322              	.L16:
 254:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 323              		.loc 1 254 0
 324 004e 0023     		movs	r3, #0
 325 0050 0E93     		str	r3, [sp, #56]
 255:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 326              		.loc 1 255 0
 327 0052 0F93     		str	r3, [sp, #60]
 256:Src/main.c    ****   {
 328              		.loc 1 256 0
 329 0054 2B48     		ldr	r0, .L24
 330 0056 0EA9     		add	r1, sp, #56
 331 0058 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 332              	.LVL15:
 333 005c 20B1     		cbz	r0, .L17
 258:Src/main.c    ****   }
 334              		.loc 1 258 0
 335 005e 2B48     		ldr	r0, .L24+8
 336 0060 4FF48171 		mov	r1, #258
 337 0064 FFF7FEFF 		bl	_Error_Handler
 338              	.LVL16:
 339              	.L17:
 261:Src/main.c    ****   sConfigOC.Pulse = 0;
 340              		.loc 1 261 0
 341 0068 6023     		movs	r3, #96
 342 006a 0793     		str	r3, [sp, #28]
 262:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 343              		.loc 1 262 0
 344 006c 0022     		movs	r2, #0
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc5osJKi.s 			page 15


 345 006e 0892     		str	r2, [sp, #32]
 263:Src/main.c    ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 346              		.loc 1 263 0
 347 0070 0992     		str	r2, [sp, #36]
 264:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 348              		.loc 1 264 0
 349 0072 0A92     		str	r2, [sp, #40]
 265:Src/main.c    ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 350              		.loc 1 265 0
 351 0074 0B92     		str	r2, [sp, #44]
 266:Src/main.c    ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 352              		.loc 1 266 0
 353 0076 0C92     		str	r2, [sp, #48]
 267:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 354              		.loc 1 267 0
 355 0078 0D92     		str	r2, [sp, #52]
 268:Src/main.c    ****   {
 356              		.loc 1 268 0
 357 007a 2248     		ldr	r0, .L24
 358 007c 07A9     		add	r1, sp, #28
 359 007e FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 360              	.LVL17:
 361 0082 20B1     		cbz	r0, .L18
 270:Src/main.c    ****   }
 362              		.loc 1 270 0
 363 0084 2148     		ldr	r0, .L24+8
 364 0086 4FF48771 		mov	r1, #270
 365 008a FFF7FEFF 		bl	_Error_Handler
 366              	.LVL18:
 367              	.L18:
 273:Src/main.c    ****   {
 368              		.loc 1 273 0
 369 008e 1D48     		ldr	r0, .L24
 370 0090 07A9     		add	r1, sp, #28
 371 0092 0422     		movs	r2, #4
 372 0094 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 373              	.LVL19:
 374 0098 20B1     		cbz	r0, .L19
 275:Src/main.c    ****   }
 375              		.loc 1 275 0
 376 009a 1C48     		ldr	r0, .L24+8
 377 009c 40F21311 		movw	r1, #275
 378 00a0 FFF7FEFF 		bl	_Error_Handler
 379              	.LVL20:
 380              	.L19:
 278:Src/main.c    ****   {
 381              		.loc 1 278 0
 382 00a4 1748     		ldr	r0, .L24
 383 00a6 07A9     		add	r1, sp, #28
 384 00a8 0822     		movs	r2, #8
 385 00aa FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 386              	.LVL21:
 387 00ae 20B1     		cbz	r0, .L20
 280:Src/main.c    ****   }
 388              		.loc 1 280 0
 389 00b0 1648     		ldr	r0, .L24+8
 390 00b2 4FF48C71 		mov	r1, #280
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc5osJKi.s 			page 16


 391 00b6 FFF7FEFF 		bl	_Error_Handler
 392              	.LVL22:
 393              	.L20:
 283:Src/main.c    ****   {
 394              		.loc 1 283 0
 395 00ba 1248     		ldr	r0, .L24
 396 00bc 07A9     		add	r1, sp, #28
 397 00be 0C22     		movs	r2, #12
 398 00c0 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 399              	.LVL23:
 400 00c4 20B1     		cbz	r0, .L21
 285:Src/main.c    ****   }
 401              		.loc 1 285 0
 402 00c6 1148     		ldr	r0, .L24+8
 403 00c8 40F21D11 		movw	r1, #285
 404 00cc FFF7FEFF 		bl	_Error_Handler
 405              	.LVL24:
 406              	.L21:
 288:Src/main.c    ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 407              		.loc 1 288 0
 408 00d0 0023     		movs	r3, #0
 409 00d2 0093     		str	r3, [sp]
 289:Src/main.c    ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 410              		.loc 1 289 0
 411 00d4 0193     		str	r3, [sp, #4]
 290:Src/main.c    ****   sBreakDeadTimeConfig.DeadTime = 0;
 412              		.loc 1 290 0
 413 00d6 0293     		str	r3, [sp, #8]
 291:Src/main.c    ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 414              		.loc 1 291 0
 415 00d8 0393     		str	r3, [sp, #12]
 292:Src/main.c    ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 416              		.loc 1 292 0
 417 00da 0493     		str	r3, [sp, #16]
 293:Src/main.c    ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 418              		.loc 1 293 0
 419 00dc 4FF40052 		mov	r2, #8192
 420 00e0 0592     		str	r2, [sp, #20]
 294:Src/main.c    ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 421              		.loc 1 294 0
 422 00e2 0693     		str	r3, [sp, #24]
 295:Src/main.c    ****   {
 423              		.loc 1 295 0
 424 00e4 0748     		ldr	r0, .L24
 425 00e6 6946     		mov	r1, sp
 426 00e8 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 427              	.LVL25:
 428 00ec 20B1     		cbz	r0, .L22
 297:Src/main.c    ****   }
 429              		.loc 1 297 0
 430 00ee 0748     		ldr	r0, .L24+8
 431 00f0 40F22911 		movw	r1, #297
 432 00f4 FFF7FEFF 		bl	_Error_Handler
 433              	.LVL26:
 434              	.L22:
 300:Src/main.c    **** 
 435              		.loc 1 300 0
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc5osJKi.s 			page 17


 436 00f8 0248     		ldr	r0, .L24
 437 00fa FFF7FEFF 		bl	HAL_TIM_MspPostInit
 438              	.LVL27:
 302:Src/main.c    **** 
 439              		.loc 1 302 0
 440 00fe 15B0     		add	sp, sp, #84
 441              	.LCFI8:
 442              		.cfi_def_cfa_offset 4
 443              		@ sp needed
 444 0100 5DF804FB 		ldr	pc, [sp], #4
 445              	.L25:
 446              		.align	2
 447              	.L24:
 448 0104 00000000 		.word	htim1
 449 0108 00000140 		.word	1073807360
 450 010c 00000000 		.word	.LC0
 451              		.cfi_endproc
 452              	.LFE126:
 454              		.section	.text.MX_TIM2_Init,"ax",%progbits
 455              		.align	2
 456              		.thumb
 457              		.thumb_func
 459              	MX_TIM2_Init:
 460              	.LFB127:
 306:Src/main.c    **** 
 461              		.loc 1 306 0
 462              		.cfi_startproc
 463              		@ args = 0, pretend = 0, frame = 56
 464              		@ frame_needed = 0, uses_anonymous_args = 0
 465 0000 00B5     		push	{lr}
 466              	.LCFI9:
 467              		.cfi_def_cfa_offset 4
 468              		.cfi_offset 14, -4
 469 0002 8FB0     		sub	sp, sp, #60
 470              	.LCFI10:
 471              		.cfi_def_cfa_offset 64
 312:Src/main.c    ****   htim2.Init.Prescaler = 0;
 472              		.loc 1 312 0
 473 0004 3048     		ldr	r0, .L35
 474 0006 4FF08043 		mov	r3, #1073741824
 475 000a 0360     		str	r3, [r0]
 313:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 476              		.loc 1 313 0
 477 000c 0023     		movs	r3, #0
 478 000e 4360     		str	r3, [r0, #4]
 314:Src/main.c    ****   htim2.Init.Period = 0;
 479              		.loc 1 314 0
 480 0010 8360     		str	r3, [r0, #8]
 315:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 481              		.loc 1 315 0
 482 0012 C360     		str	r3, [r0, #12]
 316:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 483              		.loc 1 316 0
 484 0014 0361     		str	r3, [r0, #16]
 317:Src/main.c    ****   {
 485              		.loc 1 317 0
 486 0016 FFF7FEFF 		bl	HAL_TIM_Base_Init
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc5osJKi.s 			page 18


 487              	.LVL28:
 488 001a 20B1     		cbz	r0, .L27
 319:Src/main.c    ****   }
 489              		.loc 1 319 0
 490 001c 2B48     		ldr	r0, .L35+4
 491 001e 40F23F11 		movw	r1, #319
 492 0022 FFF7FEFF 		bl	_Error_Handler
 493              	.LVL29:
 494              	.L27:
 322:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 495              		.loc 1 322 0
 496 0026 0EA9     		add	r1, sp, #56
 497 0028 4FF48053 		mov	r3, #4096
 498 002c 41F8103D 		str	r3, [r1, #-16]!
 323:Src/main.c    ****   {
 499              		.loc 1 323 0
 500 0030 2548     		ldr	r0, .L35
 501 0032 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 502              	.LVL30:
 503 0036 20B1     		cbz	r0, .L28
 325:Src/main.c    ****   }
 504              		.loc 1 325 0
 505 0038 2448     		ldr	r0, .L35+4
 506 003a 40F24511 		movw	r1, #325
 507 003e FFF7FEFF 		bl	_Error_Handler
 508              	.LVL31:
 509              	.L28:
 328:Src/main.c    ****   {
 510              		.loc 1 328 0
 511 0042 2148     		ldr	r0, .L35
 512 0044 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 513              	.LVL32:
 514 0048 20B1     		cbz	r0, .L29
 330:Src/main.c    ****   }
 515              		.loc 1 330 0
 516 004a 2048     		ldr	r0, .L35+4
 517 004c 4FF4A571 		mov	r1, #330
 518 0050 FFF7FEFF 		bl	_Error_Handler
 519              	.LVL33:
 520              	.L29:
 333:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 521              		.loc 1 333 0
 522 0054 0023     		movs	r3, #0
 523 0056 0893     		str	r3, [sp, #32]
 334:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 524              		.loc 1 334 0
 525 0058 0993     		str	r3, [sp, #36]
 335:Src/main.c    ****   {
 526              		.loc 1 335 0
 527 005a 1B48     		ldr	r0, .L35
 528 005c 08A9     		add	r1, sp, #32
 529 005e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 530              	.LVL34:
 531 0062 20B1     		cbz	r0, .L30
 337:Src/main.c    ****   }
 532              		.loc 1 337 0
 533 0064 1948     		ldr	r0, .L35+4
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc5osJKi.s 			page 19


 534 0066 40F25111 		movw	r1, #337
 535 006a FFF7FEFF 		bl	_Error_Handler
 536              	.LVL35:
 537              	.L30:
 340:Src/main.c    ****   sConfigOC.Pulse = 0;
 538              		.loc 1 340 0
 539 006e 6023     		movs	r3, #96
 540 0070 0193     		str	r3, [sp, #4]
 341:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 541              		.loc 1 341 0
 542 0072 0022     		movs	r2, #0
 543 0074 0292     		str	r2, [sp, #8]
 342:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 544              		.loc 1 342 0
 545 0076 0392     		str	r2, [sp, #12]
 343:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 546              		.loc 1 343 0
 547 0078 0592     		str	r2, [sp, #20]
 344:Src/main.c    ****   {
 548              		.loc 1 344 0
 549 007a 1348     		ldr	r0, .L35
 550 007c 01A9     		add	r1, sp, #4
 551 007e FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 552              	.LVL36:
 553 0082 20B1     		cbz	r0, .L31
 346:Src/main.c    ****   }
 554              		.loc 1 346 0
 555 0084 1148     		ldr	r0, .L35+4
 556 0086 4FF4AD71 		mov	r1, #346
 557 008a FFF7FEFF 		bl	_Error_Handler
 558              	.LVL37:
 559              	.L31:
 349:Src/main.c    ****   {
 560              		.loc 1 349 0
 561 008e 0E48     		ldr	r0, .L35
 562 0090 01A9     		add	r1, sp, #4
 563 0092 0422     		movs	r2, #4
 564 0094 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 565              	.LVL38:
 566 0098 20B1     		cbz	r0, .L32
 351:Src/main.c    ****   }
 567              		.loc 1 351 0
 568 009a 0C48     		ldr	r0, .L35+4
 569 009c 40F25F11 		movw	r1, #351
 570 00a0 FFF7FEFF 		bl	_Error_Handler
 571              	.LVL39:
 572              	.L32:
 354:Src/main.c    ****   {
 573              		.loc 1 354 0
 574 00a4 0848     		ldr	r0, .L35
 575 00a6 01A9     		add	r1, sp, #4
 576 00a8 0822     		movs	r2, #8
 577 00aa FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 578              	.LVL40:
 579 00ae 20B1     		cbz	r0, .L33
 356:Src/main.c    ****   }
 580              		.loc 1 356 0
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc5osJKi.s 			page 20


 581 00b0 0648     		ldr	r0, .L35+4
 582 00b2 4FF4B271 		mov	r1, #356
 583 00b6 FFF7FEFF 		bl	_Error_Handler
 584              	.LVL41:
 585              	.L33:
 359:Src/main.c    **** 
 586              		.loc 1 359 0
 587 00ba 0348     		ldr	r0, .L35
 588 00bc FFF7FEFF 		bl	HAL_TIM_MspPostInit
 589              	.LVL42:
 361:Src/main.c    **** 
 590              		.loc 1 361 0
 591 00c0 0FB0     		add	sp, sp, #60
 592              	.LCFI11:
 593              		.cfi_def_cfa_offset 4
 594              		@ sp needed
 595 00c2 5DF804FB 		ldr	pc, [sp], #4
 596              	.L36:
 597 00c6 00BF     		.align	2
 598              	.L35:
 599 00c8 00000000 		.word	htim2
 600 00cc 00000000 		.word	.LC0
 601              		.cfi_endproc
 602              	.LFE127:
 604              		.section	.text.SystemClock_Config,"ax",%progbits
 605              		.align	2
 606              		.global	SystemClock_Config
 607              		.thumb
 608              		.thumb_func
 610              	SystemClock_Config:
 611              	.LFB124:
 133:Src/main.c    **** 
 612              		.loc 1 133 0
 613              		.cfi_startproc
 614              		@ args = 0, pretend = 0, frame = 80
 615              		@ frame_needed = 0, uses_anonymous_args = 0
 616 0000 00B5     		push	{lr}
 617              	.LCFI12:
 618              		.cfi_def_cfa_offset 4
 619              		.cfi_offset 14, -4
 620 0002 95B0     		sub	sp, sp, #84
 621              	.LCFI13:
 622              		.cfi_def_cfa_offset 88
 623              	.LBB5:
 140:Src/main.c    **** 
 624              		.loc 1 140 0
 625 0004 0022     		movs	r2, #0
 626 0006 0192     		str	r2, [sp, #4]
 627 0008 294B     		ldr	r3, .L41
 628 000a 196C     		ldr	r1, [r3, #64]
 629 000c 41F08051 		orr	r1, r1, #268435456
 630 0010 1964     		str	r1, [r3, #64]
 631 0012 1B6C     		ldr	r3, [r3, #64]
 632 0014 03F08053 		and	r3, r3, #268435456
 633 0018 0193     		str	r3, [sp, #4]
 634 001a 019B     		ldr	r3, [sp, #4]
 635              	.LBE5:
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc5osJKi.s 			page 21


 636              	.LBB6:
 142:Src/main.c    **** 
 637              		.loc 1 142 0
 638 001c 0292     		str	r2, [sp, #8]
 639 001e 2549     		ldr	r1, .L41+4
 640 0020 0B68     		ldr	r3, [r1]
 641 0022 23F44043 		bic	r3, r3, #49152
 642 0026 43F40043 		orr	r3, r3, #32768
 643 002a 0B60     		str	r3, [r1]
 644 002c 0B68     		ldr	r3, [r1]
 645 002e 03F44043 		and	r3, r3, #49152
 646 0032 0293     		str	r3, [sp, #8]
 647 0034 029B     		ldr	r3, [sp, #8]
 648              	.LBE6:
 146:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 649              		.loc 1 146 0
 650 0036 0223     		movs	r3, #2
 651 0038 0893     		str	r3, [sp, #32]
 147:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 652              		.loc 1 147 0
 653 003a 0121     		movs	r1, #1
 654 003c 0B91     		str	r1, [sp, #44]
 148:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 655              		.loc 1 148 0
 656 003e 1021     		movs	r1, #16
 657 0040 0C91     		str	r1, [sp, #48]
 149:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 658              		.loc 1 149 0
 659 0042 0E93     		str	r3, [sp, #56]
 150:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 660              		.loc 1 150 0
 661 0044 0F92     		str	r2, [sp, #60]
 151:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 72;
 662              		.loc 1 151 0
 663 0046 0822     		movs	r2, #8
 664 0048 1092     		str	r2, [sp, #64]
 152:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 665              		.loc 1 152 0
 666 004a 4822     		movs	r2, #72
 667 004c 1192     		str	r2, [sp, #68]
 153:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 668              		.loc 1 153 0
 669 004e 1293     		str	r3, [sp, #72]
 154:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 670              		.loc 1 154 0
 671 0050 0423     		movs	r3, #4
 672 0052 1393     		str	r3, [sp, #76]
 155:Src/main.c    ****   {
 673              		.loc 1 155 0
 674 0054 08A8     		add	r0, sp, #32
 675 0056 FFF7FEFF 		bl	HAL_RCC_OscConfig
 676              	.LVL43:
 677 005a 18B1     		cbz	r0, .L38
 157:Src/main.c    ****   }
 678              		.loc 1 157 0
 679 005c 1648     		ldr	r0, .L41+8
 680 005e 9D21     		movs	r1, #157
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc5osJKi.s 			page 22


 681 0060 FFF7FEFF 		bl	_Error_Handler
 682              	.LVL44:
 683              	.L38:
 162:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 684              		.loc 1 162 0
 685 0064 0F23     		movs	r3, #15
 686 0066 0393     		str	r3, [sp, #12]
 164:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 687              		.loc 1 164 0
 688 0068 0221     		movs	r1, #2
 689 006a 0491     		str	r1, [sp, #16]
 165:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV16;
 690              		.loc 1 165 0
 691 006c 0023     		movs	r3, #0
 692 006e 0593     		str	r3, [sp, #20]
 166:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV16;
 693              		.loc 1 166 0
 694 0070 4FF4E053 		mov	r3, #7168
 695 0074 0693     		str	r3, [sp, #24]
 167:Src/main.c    **** 
 696              		.loc 1 167 0
 697 0076 0793     		str	r3, [sp, #28]
 169:Src/main.c    ****   {
 698              		.loc 1 169 0
 699 0078 03A8     		add	r0, sp, #12
 700 007a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 701              	.LVL45:
 702 007e 18B1     		cbz	r0, .L39
 171:Src/main.c    ****   }
 703              		.loc 1 171 0
 704 0080 0D48     		ldr	r0, .L41+8
 705 0082 AB21     		movs	r1, #171
 706 0084 FFF7FEFF 		bl	_Error_Handler
 707              	.LVL46:
 708              	.L39:
 176:Src/main.c    **** 
 709              		.loc 1 176 0
 710 0088 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 711              	.LVL47:
 712 008c 0B4B     		ldr	r3, .L41+12
 713 008e A3FB0030 		umull	r3, r0, r3, r0
 714 0092 8009     		lsrs	r0, r0, #6
 715 0094 FFF7FEFF 		bl	HAL_SYSTICK_Config
 716              	.LVL48:
 180:Src/main.c    **** 
 717              		.loc 1 180 0
 718 0098 0420     		movs	r0, #4
 719 009a FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 720              	.LVL49:
 183:Src/main.c    **** }
 721              		.loc 1 183 0
 722 009e 4FF0FF30 		mov	r0, #-1
 723 00a2 0021     		movs	r1, #0
 724 00a4 0A46     		mov	r2, r1
 725 00a6 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 726              	.LVL50:
 184:Src/main.c    **** 
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc5osJKi.s 			page 23


 727              		.loc 1 184 0
 728 00aa 15B0     		add	sp, sp, #84
 729              	.LCFI14:
 730              		.cfi_def_cfa_offset 4
 731              		@ sp needed
 732 00ac 5DF804FB 		ldr	pc, [sp], #4
 733              	.L42:
 734              		.align	2
 735              	.L41:
 736 00b0 00380240 		.word	1073887232
 737 00b4 00700040 		.word	1073770496
 738 00b8 00000000 		.word	.LC0
 739 00bc D34D6210 		.word	274877907
 740              		.cfi_endproc
 741              	.LFE124:
 743              		.section	.text.main,"ax",%progbits
 744              		.align	2
 745              		.global	main
 746              		.thumb
 747              		.thumb_func
 749              	main:
 750              	.LFB123:
  84:Src/main.c    ****   /* USER CODE BEGIN 1 */
 751              		.loc 1 84 0
 752              		.cfi_startproc
 753              		@ Volatile: function does not return.
 754              		@ args = 0, pretend = 0, frame = 0
 755              		@ frame_needed = 0, uses_anonymous_args = 0
 756 0000 08B5     		push	{r3, lr}
 757              	.LCFI15:
 758              		.cfi_def_cfa_offset 8
 759              		.cfi_offset 3, -8
 760              		.cfi_offset 14, -4
  92:Src/main.c    **** 
 761              		.loc 1 92 0
 762 0002 FFF7FEFF 		bl	HAL_Init
 763              	.LVL51:
  99:Src/main.c    **** 
 764              		.loc 1 99 0
 765 0006 FFF7FEFF 		bl	SystemClock_Config
 766              	.LVL52:
 106:Src/main.c    ****   MX_ADC1_Init();
 767              		.loc 1 106 0
 768 000a FFF7FEFF 		bl	MX_GPIO_Init
 769              	.LVL53:
 107:Src/main.c    ****   MX_TIM1_Init();
 770              		.loc 1 107 0
 771 000e FFF7FEFF 		bl	MX_ADC1_Init
 772              	.LVL54:
 108:Src/main.c    ****   MX_TIM2_Init();
 773              		.loc 1 108 0
 774 0012 FFF7FEFF 		bl	MX_TIM1_Init
 775              	.LVL55:
 109:Src/main.c    ****   /* USER CODE BEGIN 2 */
 776              		.loc 1 109 0
 777 0016 FFF7FEFF 		bl	MX_TIM2_Init
 778              	.LVL56:
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc5osJKi.s 			page 24


 779              	.L44:
 123:Src/main.c    ****   /* USER CODE END 3 */
 780              		.loc 1 123 0 discriminator 1
 781 001a FEE7     		b	.L44
 782              		.cfi_endproc
 783              	.LFE123:
 785              		.comm	htim2,60,4
 786              		.comm	htim1,60,4
 787              		.comm	hadc1,72,4
 788              		.section	.rodata.str1.4,"aMS",%progbits,1
 789              		.align	2
 790              	.LC0:
 791 0000 5372632F 		.ascii	"Src/main.c\000"
 791      6D61696E 
 791      2E6300
 792              		.text
 793              	.Letext0:
 794              		.file 2 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 795              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/machine/_default_types
 796              		.file 4 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/sys/_stdint.h"
 797              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 798              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 799              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 800              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 801              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 802              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 803              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 804              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 805              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 806              		.file 14 "Drivers/CMSIS/Include/core_cm4.h"
 807              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 808              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc5osJKi.s 			page 25


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc5osJKi.s:21     .text.MX_GPIO_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc5osJKi.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc5osJKi.s:134    .text.MX_GPIO_Init:0000000000000090 $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc5osJKi.s:141    .text._Error_Handler:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc5osJKi.s:146    .text._Error_Handler:0000000000000000 _Error_Handler
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc5osJKi.s:162    .text.MX_ADC1_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc5osJKi.s:166    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc5osJKi.s:247    .text.MX_ADC1_Init:0000000000000058 $d
                            *COM*:0000000000000048 hadc1
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc5osJKi.s:255    .text.MX_TIM1_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc5osJKi.s:259    .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc5osJKi.s:448    .text.MX_TIM1_Init:0000000000000104 $d
                            *COM*:000000000000003c htim1
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc5osJKi.s:455    .text.MX_TIM2_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc5osJKi.s:459    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc5osJKi.s:599    .text.MX_TIM2_Init:00000000000000c8 $d
                            *COM*:000000000000003c htim2
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc5osJKi.s:605    .text.SystemClock_Config:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc5osJKi.s:610    .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc5osJKi.s:736    .text.SystemClock_Config:00000000000000b0 $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc5osJKi.s:744    .text.main:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc5osJKi.s:749    .text.main:0000000000000000 main
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//cc5osJKi.s:789    .rodata.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
