ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccsf9ieu.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"main.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  25              	MX_GPIO_Init:
  26              	.LFB127:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** 
   2:Src/main.c    **** /**
   3:Src/main.c    ****  ******************************************************************************
   4:Src/main.c    ****  * @file           : main.c
   5:Src/main.c    ****  * @brief          : Main program body
   6:Src/main.c    ****  ******************************************************************************
   7:Src/main.c    ****  ** This notice applies to any and all portions of this file
   8:Src/main.c    ****  * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****  * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****  * inserted by the user or by software development tools
  11:Src/main.c    ****  * are owned by their respective copyright owners.
  12:Src/main.c    ****  *
  13:Src/main.c    ****  * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/main.c    ****  *
  15:Src/main.c    ****  * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****  * are permitted provided that the following conditions are met:
  17:Src/main.c    ****  *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****  *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****  *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****  *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****  *      and/or other materials provided with the distribution.
  22:Src/main.c    ****  *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****  *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****  *      without specific prior written permission.
  25:Src/main.c    ****  *
  26:Src/main.c    ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccsf9ieu.s 			page 2


  32:Src/main.c    ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/main.c    ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****  * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****  *
  37:Src/main.c    ****  ******************************************************************************
  38:Src/main.c    ****  */
  39:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  40:Src/main.c    **** #include "main.h"
  41:Src/main.c    **** #include "stm32f4xx_hal.h"
  42:Src/main.c    **** 
  43:Src/main.c    **** /* USER CODE BEGIN Includes */
  44:Src/main.c    **** #include "fonts.h"
  45:Src/main.c    **** #include "ssd1306.h"
  46:Src/main.c    **** /* USER CODE END Includes */
  47:Src/main.c    **** 
  48:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  49:Src/main.c    **** I2C_HandleTypeDef hi2c1;
  50:Src/main.c    **** 
  51:Src/main.c    **** TIM_HandleTypeDef htim1;
  52:Src/main.c    **** 
  53:Src/main.c    **** /* USER CODE BEGIN PV */
  54:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  55:Src/main.c    **** #define MOTOR_PWM_PERIOD 65536
  56:Src/main.c    **** #define MOTOR_LEFT_FORWARD TIM_CHANNEL_1
  57:Src/main.c    **** #define MOTOR_LEFT_BACKWARD TIM_CHANNEL_2 
  58:Src/main.c    **** #define MOTOR_RIGHT_FORWARD TIM_CHANNEL_3 
  59:Src/main.c    **** #define MOTOR_RIGHT_BACKWARD TIM_CHANNEL_4 
  60:Src/main.c    **** /* USER CODE END PV */
  61:Src/main.c    **** 
  62:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  63:Src/main.c    **** void SystemClock_Config(void);
  64:Src/main.c    **** static void MX_GPIO_Init(void);
  65:Src/main.c    **** static void MX_I2C1_Init(void);
  66:Src/main.c    **** static void MX_TIM1_Init(void);
  67:Src/main.c    **** 
  68:Src/main.c    **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
  69:Src/main.c    **** 
  70:Src/main.c    **** 
  71:Src/main.c    **** /* USER CODE BEGIN PFP */
  72:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  73:Src/main.c    **** 
  74:Src/main.c    **** /* USER CODE END PFP */
  75:Src/main.c    **** 
  76:Src/main.c    **** /* USER CODE BEGIN 0 */
  77:Src/main.c    **** 
  78:Src/main.c    **** /* USER CODE END 0 */
  79:Src/main.c    **** 
  80:Src/main.c    **** /**
  81:Src/main.c    ****  * @brief  The application entry point.
  82:Src/main.c    ****  *
  83:Src/main.c    ****  * @retval None
  84:Src/main.c    ****  */
  85:Src/main.c    **** int main(void)
  86:Src/main.c    **** {
  87:Src/main.c    ****     /* USER CODE BEGIN 1 */
  88:Src/main.c    **** 
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccsf9ieu.s 			page 3


  89:Src/main.c    ****     /* USER CODE END 1 */
  90:Src/main.c    **** 
  91:Src/main.c    ****     /* MCU Configuration----------------------------------------------------------*/
  92:Src/main.c    **** 
  93:Src/main.c    ****     /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  94:Src/main.c    ****     HAL_Init();
  95:Src/main.c    **** 
  96:Src/main.c    ****     /* USER CODE BEGIN Init */
  97:Src/main.c    **** 
  98:Src/main.c    ****     /* USER CODE END Init */
  99:Src/main.c    **** 
 100:Src/main.c    ****     /* Configure the system clock */
 101:Src/main.c    ****     SystemClock_Config();
 102:Src/main.c    **** 
 103:Src/main.c    ****     /* USER CODE BEGIN SysInit */
 104:Src/main.c    **** 
 105:Src/main.c    ****     /* USER CODE END SysInit */
 106:Src/main.c    **** 
 107:Src/main.c    ****     /* Initialize all configured peripherals */
 108:Src/main.c    ****     MX_GPIO_Init();
 109:Src/main.c    ****     MX_I2C1_Init();
 110:Src/main.c    ****     MX_TIM1_Init();
 111:Src/main.c    ****     /* USER CODE BEGIN 2 */
 112:Src/main.c    ****     ssd1306_Init();
 113:Src/main.c    ****     HAL_Delay(10);
 114:Src/main.c    ****     ssd1306_Fill(Black);
 115:Src/main.c    ****     ssd1306_UpdateScreen();
 116:Src/main.c    ****     HAL_Delay(10);
 117:Src/main.c    ****     ssd1306_SetCursor(0,0);
 118:Src/main.c    ****     ssd1306_WriteString("Starting...",Font_11x18,White);
 119:Src/main.c    ****     ssd1306_UpdateScreen();
 120:Src/main.c    **** 
 121:Src/main.c    ****     HAL_TIM_PWM_Stop(&htim1, MOTOR_LEFT_FORWARD);
 122:Src/main.c    ****     HAL_TIM_PWM_Stop(&htim1, MOTOR_LEFT_BACKWARD);
 123:Src/main.c    ****     HAL_TIM_PWM_Stop(&htim1, MOTOR_RIGHT_FORWARD);
 124:Src/main.c    ****     HAL_TIM_PWM_Stop(&htim1, MOTOR_RIGHT_BACKWARD);
 125:Src/main.c    **** 
 126:Src/main.c    ****     //forward
 127:Src/main.c    ****     __HAL_TIM_SET_COMPARE(&htim1, MOTOR_LEFT_FORWARD, 0.7*MOTOR_PWM_PERIOD);
 128:Src/main.c    ****     __HAL_TIM_SET_COMPARE(&htim1, MOTOR_RIGHT_FORWARD, 0.7*MOTOR_PWM_PERIOD);
 129:Src/main.c    ****     HAL_TIM_PWM_Start(&htim1, MOTOR_RIGHT_FORWARD);
 130:Src/main.c    ****     HAL_TIM_PWM_Start(&htim1, MOTOR_LEFT_FORWARD);
 131:Src/main.c    ****     HAL_Delay(3000);
 132:Src/main.c    ****     HAL_TIM_PWM_Stop(&htim1, MOTOR_RIGHT_FORWARD);
 133:Src/main.c    ****     HAL_TIM_PWM_Stop(&htim1, MOTOR_LEFT_FORWARD);
 134:Src/main.c    ****     ssd1306_Fill(Black);
 135:Src/main.c    ****     ssd1306_UpdateScreen();
 136:Src/main.c    ****     ssd1306_SetCursor(0,0);
 137:Src/main.c    ****     ssd1306_WriteString("Forwards 0.7",Font_11x18,White);
 138:Src/main.c    ****     ssd1306_UpdateScreen();
 139:Src/main.c    ****     //backward
 140:Src/main.c    ****     __HAL_TIM_SET_COMPARE(&htim1, MOTOR_LEFT_BACKWARD, 0.7*MOTOR_PWM_PERIOD);
 141:Src/main.c    ****     __HAL_TIM_SET_COMPARE(&htim1, MOTOR_RIGHT_BACKWARD, 0.7*MOTOR_PWM_PERIOD);
 142:Src/main.c    ****     HAL_TIM_PWM_Start(&htim1, MOTOR_RIGHT_BACKWARD);
 143:Src/main.c    ****     HAL_TIM_PWM_Start(&htim1, MOTOR_LEFT_BACKWARD);
 144:Src/main.c    ****     HAL_Delay(3000);
 145:Src/main.c    ****     HAL_TIM_PWM_Stop(&htim1, MOTOR_RIGHT_BACKWARD);
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccsf9ieu.s 			page 4


 146:Src/main.c    ****     HAL_TIM_PWM_Stop(&htim1, MOTOR_LEFT_BACKWARD);
 147:Src/main.c    ****     ssd1306_Fill(Black);
 148:Src/main.c    ****     ssd1306_UpdateScreen();
 149:Src/main.c    ****     ssd1306_SetCursor(0,0);
 150:Src/main.c    ****     ssd1306_WriteString("Backwards 0.7",Font_11x18,White);
 151:Src/main.c    ****     ssd1306_UpdateScreen();
 152:Src/main.c    ****     //left
 153:Src/main.c    ****     __HAL_TIM_SET_COMPARE(&htim1, MOTOR_LEFT_FORWARD, 0.5*MOTOR_PWM_PERIOD);
 154:Src/main.c    ****     __HAL_TIM_SET_COMPARE(&htim1, MOTOR_RIGHT_FORWARD, 0.9*MOTOR_PWM_PERIOD);
 155:Src/main.c    ****     HAL_TIM_PWM_Start(&htim1, MOTOR_RIGHT_FORWARD);
 156:Src/main.c    ****     HAL_TIM_PWM_Start(&htim1, MOTOR_LEFT_FORWARD);
 157:Src/main.c    ****     HAL_Delay(3000);
 158:Src/main.c    ****     HAL_TIM_PWM_Stop(&htim1, MOTOR_RIGHT_FORWARD);
 159:Src/main.c    ****     HAL_TIM_PWM_Stop(&htim1, MOTOR_LEFT_FORWARD);
 160:Src/main.c    ****     ssd1306_Fill(Black);
 161:Src/main.c    ****     ssd1306_UpdateScreen();
 162:Src/main.c    ****     ssd1306_SetCursor(0,0);
 163:Src/main.c    ****     ssd1306_WriteString("L 0.5 R 0.9",Font_11x18,White);
 164:Src/main.c    ****     ssd1306_UpdateScreen();
 165:Src/main.c    ****     //left
 166:Src/main.c    ****     __HAL_TIM_SET_COMPARE(&htim1, MOTOR_LEFT_FORWARD, 0.7*MOTOR_PWM_PERIOD);
 167:Src/main.c    ****     __HAL_TIM_SET_COMPARE(&htim1, MOTOR_RIGHT_BACKWARD, 0.7*MOTOR_PWM_PERIOD);
 168:Src/main.c    ****     HAL_TIM_PWM_Start(&htim1, MOTOR_RIGHT_BACKWARD);
 169:Src/main.c    ****     HAL_TIM_PWM_Start(&htim1, MOTOR_LEFT_FORWARD);
 170:Src/main.c    ****     ssd1306_Fill(Black);
 171:Src/main.c    ****     ssd1306_UpdateScreen();
 172:Src/main.c    ****     ssd1306_SetCursor(0,0);
 173:Src/main.c    ****     ssd1306_WriteString("Fuck yess!!",Font_11x18,White);
 174:Src/main.c    ****     ssd1306_UpdateScreen();
 175:Src/main.c    ****     /* USER CODE END 2 */
 176:Src/main.c    **** 
 177:Src/main.c    ****     /* Infinite loop */
 178:Src/main.c    ****     /* USER CODE BEGIN WHILE */
 179:Src/main.c    ****     while (1)
 180:Src/main.c    ****     {
 181:Src/main.c    **** 
 182:Src/main.c    ****         /* USER CODE END WHILE */
 183:Src/main.c    ****         /* USER CODE BEGIN 3 */
 184:Src/main.c    **** 
 185:Src/main.c    ****     }
 186:Src/main.c    ****     /* USER CODE END 3 */
 187:Src/main.c    **** 
 188:Src/main.c    **** }
 189:Src/main.c    **** 
 190:Src/main.c    **** /**
 191:Src/main.c    ****  * @brief System Clock Configuration
 192:Src/main.c    ****  * @retval None
 193:Src/main.c    ****  */
 194:Src/main.c    **** void SystemClock_Config(void)
 195:Src/main.c    **** {
 196:Src/main.c    **** 
 197:Src/main.c    ****     RCC_OscInitTypeDef RCC_OscInitStruct;
 198:Src/main.c    ****     RCC_ClkInitTypeDef RCC_ClkInitStruct;
 199:Src/main.c    **** 
 200:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 201:Src/main.c    ****     */
 202:Src/main.c    ****     __HAL_RCC_PWR_CLK_ENABLE();
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccsf9ieu.s 			page 5


 203:Src/main.c    **** 
 204:Src/main.c    ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 205:Src/main.c    **** 
 206:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 207:Src/main.c    ****     */
 208:Src/main.c    ****     RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 209:Src/main.c    ****     RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 210:Src/main.c    ****     RCC_OscInitStruct.HSICalibrationValue = 16;
 211:Src/main.c    ****     RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 212:Src/main.c    ****     RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 213:Src/main.c    ****     RCC_OscInitStruct.PLL.PLLM = 8;
 214:Src/main.c    ****     RCC_OscInitStruct.PLL.PLLN = 72;
 215:Src/main.c    ****     RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 216:Src/main.c    ****     RCC_OscInitStruct.PLL.PLLQ = 4;
 217:Src/main.c    ****     if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 218:Src/main.c    ****     {
 219:Src/main.c    ****         _Error_Handler(__FILE__, __LINE__);
 220:Src/main.c    ****     }
 221:Src/main.c    **** 
 222:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 223:Src/main.c    ****     */
 224:Src/main.c    ****     RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 225:Src/main.c    ****         |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 226:Src/main.c    ****     RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 227:Src/main.c    ****     RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 228:Src/main.c    ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 229:Src/main.c    ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 230:Src/main.c    **** 
 231:Src/main.c    ****     if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 232:Src/main.c    ****     {
 233:Src/main.c    ****         _Error_Handler(__FILE__, __LINE__);
 234:Src/main.c    ****     }
 235:Src/main.c    **** 
 236:Src/main.c    ****     /**Configure the Systick interrupt time 
 237:Src/main.c    ****     */
 238:Src/main.c    ****     HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 239:Src/main.c    **** 
 240:Src/main.c    ****     /**Configure the Systick 
 241:Src/main.c    ****     */
 242:Src/main.c    ****     HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 243:Src/main.c    **** 
 244:Src/main.c    ****     /* SysTick_IRQn interrupt configuration */
 245:Src/main.c    ****     HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 246:Src/main.c    **** }
 247:Src/main.c    **** 
 248:Src/main.c    **** /* I2C1 init function */
 249:Src/main.c    **** static void MX_I2C1_Init(void)
 250:Src/main.c    **** {
 251:Src/main.c    **** 
 252:Src/main.c    ****     hi2c1.Instance = I2C1;
 253:Src/main.c    ****     hi2c1.Init.ClockSpeed = 100000;
 254:Src/main.c    ****     hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 255:Src/main.c    ****     hi2c1.Init.OwnAddress1 = 0;
 256:Src/main.c    ****     hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 257:Src/main.c    ****     hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 258:Src/main.c    ****     hi2c1.Init.OwnAddress2 = 0;
 259:Src/main.c    ****     hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccsf9ieu.s 			page 6


 260:Src/main.c    ****     hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 261:Src/main.c    ****     if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 262:Src/main.c    ****     {
 263:Src/main.c    ****         _Error_Handler(__FILE__, __LINE__);
 264:Src/main.c    ****     }
 265:Src/main.c    **** 
 266:Src/main.c    **** }
 267:Src/main.c    **** 
 268:Src/main.c    **** /* TIM1 init function */
 269:Src/main.c    **** static void MX_TIM1_Init(void)
 270:Src/main.c    **** {
 271:Src/main.c    **** 
 272:Src/main.c    ****     TIM_ClockConfigTypeDef sClockSourceConfig;
 273:Src/main.c    ****     TIM_MasterConfigTypeDef sMasterConfig;
 274:Src/main.c    ****     TIM_OC_InitTypeDef sConfigOC;
 275:Src/main.c    ****     TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig;
 276:Src/main.c    **** 
 277:Src/main.c    ****     htim1.Instance = TIM1;
 278:Src/main.c    ****     htim1.Init.Prescaler = 1000;
 279:Src/main.c    ****     htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 280:Src/main.c    ****     htim1.Init.Period = MOTOR_PWM_PERIOD;
 281:Src/main.c    ****     htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 282:Src/main.c    ****     htim1.Init.RepetitionCounter = 0;
 283:Src/main.c    ****     if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 284:Src/main.c    ****     {
 285:Src/main.c    ****         _Error_Handler(__FILE__, __LINE__);
 286:Src/main.c    ****     }
 287:Src/main.c    **** 
 288:Src/main.c    ****     sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 289:Src/main.c    ****     if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 290:Src/main.c    ****     {
 291:Src/main.c    ****         _Error_Handler(__FILE__, __LINE__);
 292:Src/main.c    ****     }
 293:Src/main.c    **** 
 294:Src/main.c    ****     if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 295:Src/main.c    ****     {
 296:Src/main.c    ****         _Error_Handler(__FILE__, __LINE__);
 297:Src/main.c    ****     }
 298:Src/main.c    **** 
 299:Src/main.c    ****     sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 300:Src/main.c    ****     sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 301:Src/main.c    ****     if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 302:Src/main.c    ****     {
 303:Src/main.c    ****         _Error_Handler(__FILE__, __LINE__);
 304:Src/main.c    ****     }
 305:Src/main.c    **** 
 306:Src/main.c    ****     sConfigOC.OCMode = TIM_OCMODE_PWM1;
 307:Src/main.c    ****     sConfigOC.Pulse = 0;
 308:Src/main.c    ****     sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 309:Src/main.c    ****     sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 310:Src/main.c    ****     sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 311:Src/main.c    ****     sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 312:Src/main.c    ****     sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 313:Src/main.c    ****     if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 314:Src/main.c    ****     {
 315:Src/main.c    ****         _Error_Handler(__FILE__, __LINE__);
 316:Src/main.c    ****     }
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccsf9ieu.s 			page 7


 317:Src/main.c    **** 
 318:Src/main.c    ****     if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 319:Src/main.c    ****     {
 320:Src/main.c    ****         _Error_Handler(__FILE__, __LINE__);
 321:Src/main.c    ****     }
 322:Src/main.c    **** 
 323:Src/main.c    ****     if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 324:Src/main.c    ****     {
 325:Src/main.c    ****         _Error_Handler(__FILE__, __LINE__);
 326:Src/main.c    ****     }
 327:Src/main.c    **** 
 328:Src/main.c    ****     if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 329:Src/main.c    ****     {
 330:Src/main.c    ****         _Error_Handler(__FILE__, __LINE__);
 331:Src/main.c    ****     }
 332:Src/main.c    **** 
 333:Src/main.c    ****     sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 334:Src/main.c    ****     sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 335:Src/main.c    ****     sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 336:Src/main.c    ****     sBreakDeadTimeConfig.DeadTime = 0;
 337:Src/main.c    ****     sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 338:Src/main.c    ****     sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 339:Src/main.c    ****     sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 340:Src/main.c    ****     if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 341:Src/main.c    ****     {
 342:Src/main.c    ****         _Error_Handler(__FILE__, __LINE__);
 343:Src/main.c    ****     }
 344:Src/main.c    **** 
 345:Src/main.c    ****     HAL_TIM_MspPostInit(&htim1);
 346:Src/main.c    **** 
 347:Src/main.c    ****     HAL_TIM_PWM_Start(&htim1, MOTOR_LEFT_FORWARD);
 348:Src/main.c    ****     HAL_TIM_PWM_Start(&htim1, MOTOR_LEFT_BACKWARD);
 349:Src/main.c    ****     HAL_TIM_PWM_Start(&htim1, MOTOR_RIGHT_FORWARD);
 350:Src/main.c    ****     HAL_TIM_PWM_Start(&htim1, MOTOR_RIGHT_BACKWARD);
 351:Src/main.c    **** }
 352:Src/main.c    **** 
 353:Src/main.c    **** /** Configure pins as 
 354:Src/main.c    ****  * Analog 
 355:Src/main.c    ****  * Input 
 356:Src/main.c    ****  * Output
 357:Src/main.c    ****  * EVENT_OUT
 358:Src/main.c    ****  * EXTI
 359:Src/main.c    ****  */
 360:Src/main.c    **** static void MX_GPIO_Init(void)
 361:Src/main.c    **** {
  28              		.loc 1 361 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 00B5     		push	{lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 14, -4
  36 0002 89B0     		sub	sp, sp, #36
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 40
  39              	.LBB2:
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccsf9ieu.s 			page 8


 362:Src/main.c    **** 
 363:Src/main.c    ****     GPIO_InitTypeDef GPIO_InitStruct;
 364:Src/main.c    **** 
 365:Src/main.c    ****     /* GPIO Ports Clock Enable */
 366:Src/main.c    ****     __HAL_RCC_GPIOA_CLK_ENABLE();
  40              		.loc 1 366 0
  41 0004 0022     		movs	r2, #0
  42 0006 0192     		str	r2, [sp, #4]
  43 0008 0F4B     		ldr	r3, .L3
  44 000a 196B     		ldr	r1, [r3, #48]
  45 000c 41F00101 		orr	r1, r1, #1
  46 0010 1963     		str	r1, [r3, #48]
  47 0012 196B     		ldr	r1, [r3, #48]
  48 0014 01F00101 		and	r1, r1, #1
  49 0018 0191     		str	r1, [sp, #4]
  50 001a 0199     		ldr	r1, [sp, #4]
  51              	.LBE2:
  52              	.LBB3:
 367:Src/main.c    ****     __HAL_RCC_GPIOB_CLK_ENABLE();
  53              		.loc 1 367 0
  54 001c 0292     		str	r2, [sp, #8]
  55 001e 196B     		ldr	r1, [r3, #48]
  56 0020 41F00201 		orr	r1, r1, #2
  57 0024 1963     		str	r1, [r3, #48]
  58 0026 1B6B     		ldr	r3, [r3, #48]
  59 0028 03F00203 		and	r3, r3, #2
  60 002c 0293     		str	r3, [sp, #8]
  61 002e 029B     		ldr	r3, [sp, #8]
  62              	.LBE3:
 368:Src/main.c    **** 
 369:Src/main.c    ****     /*Configure GPIO pins : QRD_LEFT_Pin QRD_RIGHT_Pin */
 370:Src/main.c    ****     GPIO_InitStruct.Pin = QRD_LEFT_Pin|QRD_RIGHT_Pin;
  63              		.loc 1 370 0
  64 0030 C023     		movs	r3, #192
  65 0032 0393     		str	r3, [sp, #12]
 371:Src/main.c    ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
  66              		.loc 1 371 0
  67 0034 0492     		str	r2, [sp, #16]
 372:Src/main.c    ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
  68              		.loc 1 372 0
  69 0036 0123     		movs	r3, #1
  70 0038 0593     		str	r3, [sp, #20]
 373:Src/main.c    ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  71              		.loc 1 373 0
  72 003a 0448     		ldr	r0, .L3+4
  73 003c 03A9     		add	r1, sp, #12
  74 003e FFF7FEFF 		bl	HAL_GPIO_Init
  75              	.LVL0:
 374:Src/main.c    **** 
 375:Src/main.c    **** }
  76              		.loc 1 375 0
  77 0042 09B0     		add	sp, sp, #36
  78              	.LCFI2:
  79              		.cfi_def_cfa_offset 4
  80              		@ sp needed
  81 0044 5DF804FB 		ldr	pc, [sp], #4
  82              	.L4:
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccsf9ieu.s 			page 9


  83              		.align	2
  84              	.L3:
  85 0048 00380240 		.word	1073887232
  86 004c 00000240 		.word	1073872896
  87              		.cfi_endproc
  88              	.LFE127:
  90              		.section	.text._Error_Handler,"ax",%progbits
  91              		.align	2
  92              		.global	_Error_Handler
  93              		.thumb
  94              		.thumb_func
  96              	_Error_Handler:
  97              	.LFB128:
 376:Src/main.c    **** 
 377:Src/main.c    **** /* USER CODE BEGIN 4 */
 378:Src/main.c    **** 
 379:Src/main.c    **** /* USER CODE END 4 */
 380:Src/main.c    **** 
 381:Src/main.c    **** /**
 382:Src/main.c    ****  * @brief  This function is executed in case of error occurrence.
 383:Src/main.c    ****  * @param  file: The file name as string.
 384:Src/main.c    ****  * @param  line: The line in file as a number.
 385:Src/main.c    ****  * @retval None
 386:Src/main.c    ****  */
 387:Src/main.c    **** void _Error_Handler(char *file, int line)
 388:Src/main.c    **** {
  98              		.loc 1 388 0
  99              		.cfi_startproc
 100              		@ Volatile: function does not return.
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 104              	.LVL1:
 105              	.L6:
 389:Src/main.c    ****     /* USER CODE BEGIN Error_Handler_Debug */
 390:Src/main.c    ****     /* User can add his own implementation to report the HAL error return state */
 391:Src/main.c    ****     while(1)
 392:Src/main.c    ****     {
 393:Src/main.c    ****     }
 106              		.loc 1 393 0 discriminator 1
 107 0000 FEE7     		b	.L6
 108              		.cfi_endproc
 109              	.LFE128:
 111 0002 00BF     		.section	.text.MX_I2C1_Init,"ax",%progbits
 112              		.align	2
 113              		.thumb
 114              		.thumb_func
 116              	MX_I2C1_Init:
 117              	.LFB125:
 250:Src/main.c    **** 
 118              		.loc 1 250 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122 0000 08B5     		push	{r3, lr}
 123              	.LCFI3:
 124              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccsf9ieu.s 			page 10


 125              		.cfi_offset 3, -8
 126              		.cfi_offset 14, -4
 252:Src/main.c    ****     hi2c1.Init.ClockSpeed = 100000;
 127              		.loc 1 252 0
 128 0002 0C48     		ldr	r0, .L10
 129 0004 0C4B     		ldr	r3, .L10+4
 130 0006 0360     		str	r3, [r0]
 253:Src/main.c    ****     hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 131              		.loc 1 253 0
 132 0008 0C4B     		ldr	r3, .L10+8
 133 000a 4360     		str	r3, [r0, #4]
 254:Src/main.c    ****     hi2c1.Init.OwnAddress1 = 0;
 134              		.loc 1 254 0
 135 000c 0023     		movs	r3, #0
 136 000e 8360     		str	r3, [r0, #8]
 255:Src/main.c    ****     hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 137              		.loc 1 255 0
 138 0010 C360     		str	r3, [r0, #12]
 256:Src/main.c    ****     hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 139              		.loc 1 256 0
 140 0012 4FF48042 		mov	r2, #16384
 141 0016 0261     		str	r2, [r0, #16]
 257:Src/main.c    ****     hi2c1.Init.OwnAddress2 = 0;
 142              		.loc 1 257 0
 143 0018 4361     		str	r3, [r0, #20]
 258:Src/main.c    ****     hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 144              		.loc 1 258 0
 145 001a 8361     		str	r3, [r0, #24]
 259:Src/main.c    ****     hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 146              		.loc 1 259 0
 147 001c C361     		str	r3, [r0, #28]
 260:Src/main.c    ****     if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 148              		.loc 1 260 0
 149 001e 0362     		str	r3, [r0, #32]
 261:Src/main.c    ****     {
 150              		.loc 1 261 0
 151 0020 FFF7FEFF 		bl	HAL_I2C_Init
 152              	.LVL2:
 153 0024 20B1     		cbz	r0, .L7
 263:Src/main.c    ****     }
 154              		.loc 1 263 0
 155 0026 0648     		ldr	r0, .L10+12
 156 0028 40F20711 		movw	r1, #263
 157 002c FFF7FEFF 		bl	_Error_Handler
 158              	.LVL3:
 159              	.L7:
 160 0030 08BD     		pop	{r3, pc}
 161              	.L11:
 162 0032 00BF     		.align	2
 163              	.L10:
 164 0034 00000000 		.word	hi2c1
 165 0038 00540040 		.word	1073763328
 166 003c A0860100 		.word	100000
 167 0040 00000000 		.word	.LC0
 168              		.cfi_endproc
 169              	.LFE125:
 171              		.section	.text.MX_TIM1_Init,"ax",%progbits
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccsf9ieu.s 			page 11


 172              		.align	2
 173              		.thumb
 174              		.thumb_func
 176              	MX_TIM1_Init:
 177              	.LFB126:
 270:Src/main.c    **** 
 178              		.loc 1 270 0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 80
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182 0000 10B5     		push	{r4, lr}
 183              	.LCFI4:
 184              		.cfi_def_cfa_offset 8
 185              		.cfi_offset 4, -8
 186              		.cfi_offset 14, -4
 187 0002 94B0     		sub	sp, sp, #80
 188              	.LCFI5:
 189              		.cfi_def_cfa_offset 88
 277:Src/main.c    ****     htim1.Init.Prescaler = 1000;
 190              		.loc 1 277 0
 191 0004 4B48     		ldr	r0, .L23
 192 0006 4C4B     		ldr	r3, .L23+4
 193 0008 0360     		str	r3, [r0]
 278:Src/main.c    ****     htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 194              		.loc 1 278 0
 195 000a 4FF47A73 		mov	r3, #1000
 196 000e 4360     		str	r3, [r0, #4]
 279:Src/main.c    ****     htim1.Init.Period = MOTOR_PWM_PERIOD;
 197              		.loc 1 279 0
 198 0010 0023     		movs	r3, #0
 199 0012 8360     		str	r3, [r0, #8]
 280:Src/main.c    ****     htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 200              		.loc 1 280 0
 201 0014 4FF48032 		mov	r2, #65536
 202 0018 C260     		str	r2, [r0, #12]
 281:Src/main.c    ****     htim1.Init.RepetitionCounter = 0;
 203              		.loc 1 281 0
 204 001a 0361     		str	r3, [r0, #16]
 282:Src/main.c    ****     if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 205              		.loc 1 282 0
 206 001c 4361     		str	r3, [r0, #20]
 283:Src/main.c    ****     {
 207              		.loc 1 283 0
 208 001e FFF7FEFF 		bl	HAL_TIM_Base_Init
 209              	.LVL4:
 210 0022 20B1     		cbz	r0, .L13
 285:Src/main.c    ****     }
 211              		.loc 1 285 0
 212 0024 4548     		ldr	r0, .L23+8
 213 0026 40F21D11 		movw	r1, #285
 214 002a FFF7FEFF 		bl	_Error_Handler
 215              	.LVL5:
 216              	.L13:
 288:Src/main.c    ****     if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 217              		.loc 1 288 0
 218 002e 14A9     		add	r1, sp, #80
 219 0030 4FF48053 		mov	r3, #4096
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccsf9ieu.s 			page 12


 220 0034 41F8103D 		str	r3, [r1, #-16]!
 289:Src/main.c    ****     {
 221              		.loc 1 289 0
 222 0038 3E48     		ldr	r0, .L23
 223 003a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 224              	.LVL6:
 225 003e 20B1     		cbz	r0, .L14
 291:Src/main.c    ****     }
 226              		.loc 1 291 0
 227 0040 3E48     		ldr	r0, .L23+8
 228 0042 40F22311 		movw	r1, #291
 229 0046 FFF7FEFF 		bl	_Error_Handler
 230              	.LVL7:
 231              	.L14:
 294:Src/main.c    ****     {
 232              		.loc 1 294 0
 233 004a 3A48     		ldr	r0, .L23
 234 004c FFF7FEFF 		bl	HAL_TIM_PWM_Init
 235              	.LVL8:
 236 0050 20B1     		cbz	r0, .L15
 296:Src/main.c    ****     }
 237              		.loc 1 296 0
 238 0052 3A48     		ldr	r0, .L23+8
 239 0054 4FF49471 		mov	r1, #296
 240 0058 FFF7FEFF 		bl	_Error_Handler
 241              	.LVL9:
 242              	.L15:
 299:Src/main.c    ****     sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 243              		.loc 1 299 0
 244 005c 0023     		movs	r3, #0
 245 005e 0E93     		str	r3, [sp, #56]
 300:Src/main.c    ****     if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 246              		.loc 1 300 0
 247 0060 0F93     		str	r3, [sp, #60]
 301:Src/main.c    ****     {
 248              		.loc 1 301 0
 249 0062 3448     		ldr	r0, .L23
 250 0064 0EA9     		add	r1, sp, #56
 251 0066 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 252              	.LVL10:
 253 006a 20B1     		cbz	r0, .L16
 303:Src/main.c    ****     }
 254              		.loc 1 303 0
 255 006c 3348     		ldr	r0, .L23+8
 256 006e 40F22F11 		movw	r1, #303
 257 0072 FFF7FEFF 		bl	_Error_Handler
 258              	.LVL11:
 259              	.L16:
 306:Src/main.c    ****     sConfigOC.Pulse = 0;
 260              		.loc 1 306 0
 261 0076 6023     		movs	r3, #96
 262 0078 0793     		str	r3, [sp, #28]
 307:Src/main.c    ****     sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 263              		.loc 1 307 0
 264 007a 0022     		movs	r2, #0
 265 007c 0892     		str	r2, [sp, #32]
 308:Src/main.c    ****     sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccsf9ieu.s 			page 13


 266              		.loc 1 308 0
 267 007e 0992     		str	r2, [sp, #36]
 309:Src/main.c    ****     sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 268              		.loc 1 309 0
 269 0080 0A92     		str	r2, [sp, #40]
 310:Src/main.c    ****     sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 270              		.loc 1 310 0
 271 0082 0B92     		str	r2, [sp, #44]
 311:Src/main.c    ****     sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 272              		.loc 1 311 0
 273 0084 0C92     		str	r2, [sp, #48]
 312:Src/main.c    ****     if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 274              		.loc 1 312 0
 275 0086 0D92     		str	r2, [sp, #52]
 313:Src/main.c    ****     {
 276              		.loc 1 313 0
 277 0088 2A48     		ldr	r0, .L23
 278 008a 07A9     		add	r1, sp, #28
 279 008c FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 280              	.LVL12:
 281 0090 20B1     		cbz	r0, .L17
 315:Src/main.c    ****     }
 282              		.loc 1 315 0
 283 0092 2A48     		ldr	r0, .L23+8
 284 0094 40F23B11 		movw	r1, #315
 285 0098 FFF7FEFF 		bl	_Error_Handler
 286              	.LVL13:
 287              	.L17:
 318:Src/main.c    ****     {
 288              		.loc 1 318 0
 289 009c 2548     		ldr	r0, .L23
 290 009e 07A9     		add	r1, sp, #28
 291 00a0 0422     		movs	r2, #4
 292 00a2 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 293              	.LVL14:
 294 00a6 20B1     		cbz	r0, .L18
 320:Src/main.c    ****     }
 295              		.loc 1 320 0
 296 00a8 2448     		ldr	r0, .L23+8
 297 00aa 4FF4A071 		mov	r1, #320
 298 00ae FFF7FEFF 		bl	_Error_Handler
 299              	.LVL15:
 300              	.L18:
 323:Src/main.c    ****     {
 301              		.loc 1 323 0
 302 00b2 2048     		ldr	r0, .L23
 303 00b4 07A9     		add	r1, sp, #28
 304 00b6 0822     		movs	r2, #8
 305 00b8 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 306              	.LVL16:
 307 00bc 20B1     		cbz	r0, .L19
 325:Src/main.c    ****     }
 308              		.loc 1 325 0
 309 00be 1F48     		ldr	r0, .L23+8
 310 00c0 40F24511 		movw	r1, #325
 311 00c4 FFF7FEFF 		bl	_Error_Handler
 312              	.LVL17:
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccsf9ieu.s 			page 14


 313              	.L19:
 328:Src/main.c    ****     {
 314              		.loc 1 328 0
 315 00c8 1A48     		ldr	r0, .L23
 316 00ca 07A9     		add	r1, sp, #28
 317 00cc 0C22     		movs	r2, #12
 318 00ce FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 319              	.LVL18:
 320 00d2 20B1     		cbz	r0, .L20
 330:Src/main.c    ****     }
 321              		.loc 1 330 0
 322 00d4 1948     		ldr	r0, .L23+8
 323 00d6 4FF4A571 		mov	r1, #330
 324 00da FFF7FEFF 		bl	_Error_Handler
 325              	.LVL19:
 326              	.L20:
 333:Src/main.c    ****     sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 327              		.loc 1 333 0
 328 00de 0023     		movs	r3, #0
 329 00e0 0093     		str	r3, [sp]
 334:Src/main.c    ****     sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 330              		.loc 1 334 0
 331 00e2 0193     		str	r3, [sp, #4]
 335:Src/main.c    ****     sBreakDeadTimeConfig.DeadTime = 0;
 332              		.loc 1 335 0
 333 00e4 0293     		str	r3, [sp, #8]
 336:Src/main.c    ****     sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 334              		.loc 1 336 0
 335 00e6 0393     		str	r3, [sp, #12]
 337:Src/main.c    ****     sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 336              		.loc 1 337 0
 337 00e8 0493     		str	r3, [sp, #16]
 338:Src/main.c    ****     sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 338              		.loc 1 338 0
 339 00ea 4FF40052 		mov	r2, #8192
 340 00ee 0592     		str	r2, [sp, #20]
 339:Src/main.c    ****     if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 341              		.loc 1 339 0
 342 00f0 0693     		str	r3, [sp, #24]
 340:Src/main.c    ****     {
 343              		.loc 1 340 0
 344 00f2 1048     		ldr	r0, .L23
 345 00f4 6946     		mov	r1, sp
 346 00f6 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 347              	.LVL20:
 348 00fa 20B1     		cbz	r0, .L21
 342:Src/main.c    ****     }
 349              		.loc 1 342 0
 350 00fc 0F48     		ldr	r0, .L23+8
 351 00fe 4FF4AB71 		mov	r1, #342
 352 0102 FFF7FEFF 		bl	_Error_Handler
 353              	.LVL21:
 354              	.L21:
 345:Src/main.c    **** 
 355              		.loc 1 345 0
 356 0106 0B4C     		ldr	r4, .L23
 357 0108 2046     		mov	r0, r4
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccsf9ieu.s 			page 15


 358 010a FFF7FEFF 		bl	HAL_TIM_MspPostInit
 359              	.LVL22:
 347:Src/main.c    ****     HAL_TIM_PWM_Start(&htim1, MOTOR_LEFT_BACKWARD);
 360              		.loc 1 347 0
 361 010e 2046     		mov	r0, r4
 362 0110 0021     		movs	r1, #0
 363 0112 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 364              	.LVL23:
 348:Src/main.c    ****     HAL_TIM_PWM_Start(&htim1, MOTOR_RIGHT_FORWARD);
 365              		.loc 1 348 0
 366 0116 2046     		mov	r0, r4
 367 0118 0421     		movs	r1, #4
 368 011a FFF7FEFF 		bl	HAL_TIM_PWM_Start
 369              	.LVL24:
 349:Src/main.c    ****     HAL_TIM_PWM_Start(&htim1, MOTOR_RIGHT_BACKWARD);
 370              		.loc 1 349 0
 371 011e 2046     		mov	r0, r4
 372 0120 0821     		movs	r1, #8
 373 0122 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 374              	.LVL25:
 350:Src/main.c    **** }
 375              		.loc 1 350 0
 376 0126 2046     		mov	r0, r4
 377 0128 0C21     		movs	r1, #12
 378 012a FFF7FEFF 		bl	HAL_TIM_PWM_Start
 379              	.LVL26:
 351:Src/main.c    **** 
 380              		.loc 1 351 0
 381 012e 14B0     		add	sp, sp, #80
 382              	.LCFI6:
 383              		.cfi_def_cfa_offset 8
 384              		@ sp needed
 385 0130 10BD     		pop	{r4, pc}
 386              	.L24:
 387 0132 00BF     		.align	2
 388              	.L23:
 389 0134 00000000 		.word	htim1
 390 0138 00000140 		.word	1073807360
 391 013c 00000000 		.word	.LC0
 392              		.cfi_endproc
 393              	.LFE126:
 395              		.section	.text.SystemClock_Config,"ax",%progbits
 396              		.align	2
 397              		.global	SystemClock_Config
 398              		.thumb
 399              		.thumb_func
 401              	SystemClock_Config:
 402              	.LFB124:
 195:Src/main.c    **** 
 403              		.loc 1 195 0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 80
 406              		@ frame_needed = 0, uses_anonymous_args = 0
 407 0000 00B5     		push	{lr}
 408              	.LCFI7:
 409              		.cfi_def_cfa_offset 4
 410              		.cfi_offset 14, -4
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccsf9ieu.s 			page 16


 411 0002 95B0     		sub	sp, sp, #84
 412              	.LCFI8:
 413              		.cfi_def_cfa_offset 88
 414              	.LBB4:
 202:Src/main.c    **** 
 415              		.loc 1 202 0
 416 0004 0022     		movs	r2, #0
 417 0006 0192     		str	r2, [sp, #4]
 418 0008 294B     		ldr	r3, .L29
 419 000a 196C     		ldr	r1, [r3, #64]
 420 000c 41F08051 		orr	r1, r1, #268435456
 421 0010 1964     		str	r1, [r3, #64]
 422 0012 1B6C     		ldr	r3, [r3, #64]
 423 0014 03F08053 		and	r3, r3, #268435456
 424 0018 0193     		str	r3, [sp, #4]
 425 001a 019B     		ldr	r3, [sp, #4]
 426              	.LBE4:
 427              	.LBB5:
 204:Src/main.c    **** 
 428              		.loc 1 204 0
 429 001c 0292     		str	r2, [sp, #8]
 430 001e 2549     		ldr	r1, .L29+4
 431 0020 0B68     		ldr	r3, [r1]
 432 0022 23F44043 		bic	r3, r3, #49152
 433 0026 43F40043 		orr	r3, r3, #32768
 434 002a 0B60     		str	r3, [r1]
 435 002c 0B68     		ldr	r3, [r1]
 436 002e 03F44043 		and	r3, r3, #49152
 437 0032 0293     		str	r3, [sp, #8]
 438 0034 029B     		ldr	r3, [sp, #8]
 439              	.LBE5:
 208:Src/main.c    ****     RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 440              		.loc 1 208 0
 441 0036 0223     		movs	r3, #2
 442 0038 0893     		str	r3, [sp, #32]
 209:Src/main.c    ****     RCC_OscInitStruct.HSICalibrationValue = 16;
 443              		.loc 1 209 0
 444 003a 0121     		movs	r1, #1
 445 003c 0B91     		str	r1, [sp, #44]
 210:Src/main.c    ****     RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 446              		.loc 1 210 0
 447 003e 1021     		movs	r1, #16
 448 0040 0C91     		str	r1, [sp, #48]
 211:Src/main.c    ****     RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 449              		.loc 1 211 0
 450 0042 0E93     		str	r3, [sp, #56]
 212:Src/main.c    ****     RCC_OscInitStruct.PLL.PLLM = 8;
 451              		.loc 1 212 0
 452 0044 0F92     		str	r2, [sp, #60]
 213:Src/main.c    ****     RCC_OscInitStruct.PLL.PLLN = 72;
 453              		.loc 1 213 0
 454 0046 0822     		movs	r2, #8
 455 0048 1092     		str	r2, [sp, #64]
 214:Src/main.c    ****     RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 456              		.loc 1 214 0
 457 004a 4822     		movs	r2, #72
 458 004c 1192     		str	r2, [sp, #68]
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccsf9ieu.s 			page 17


 215:Src/main.c    ****     RCC_OscInitStruct.PLL.PLLQ = 4;
 459              		.loc 1 215 0
 460 004e 1293     		str	r3, [sp, #72]
 216:Src/main.c    ****     if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 461              		.loc 1 216 0
 462 0050 0423     		movs	r3, #4
 463 0052 1393     		str	r3, [sp, #76]
 217:Src/main.c    ****     {
 464              		.loc 1 217 0
 465 0054 08A8     		add	r0, sp, #32
 466 0056 FFF7FEFF 		bl	HAL_RCC_OscConfig
 467              	.LVL27:
 468 005a 18B1     		cbz	r0, .L26
 219:Src/main.c    ****     }
 469              		.loc 1 219 0
 470 005c 1648     		ldr	r0, .L29+8
 471 005e DB21     		movs	r1, #219
 472 0060 FFF7FEFF 		bl	_Error_Handler
 473              	.LVL28:
 474              	.L26:
 224:Src/main.c    ****         |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 475              		.loc 1 224 0
 476 0064 0F23     		movs	r3, #15
 477 0066 0393     		str	r3, [sp, #12]
 226:Src/main.c    ****     RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 478              		.loc 1 226 0
 479 0068 0221     		movs	r1, #2
 480 006a 0491     		str	r1, [sp, #16]
 227:Src/main.c    ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 481              		.loc 1 227 0
 482 006c 0023     		movs	r3, #0
 483 006e 0593     		str	r3, [sp, #20]
 228:Src/main.c    ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 484              		.loc 1 228 0
 485 0070 4FF48052 		mov	r2, #4096
 486 0074 0692     		str	r2, [sp, #24]
 229:Src/main.c    **** 
 487              		.loc 1 229 0
 488 0076 0793     		str	r3, [sp, #28]
 231:Src/main.c    ****     {
 489              		.loc 1 231 0
 490 0078 03A8     		add	r0, sp, #12
 491 007a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 492              	.LVL29:
 493 007e 18B1     		cbz	r0, .L27
 233:Src/main.c    ****     }
 494              		.loc 1 233 0
 495 0080 0D48     		ldr	r0, .L29+8
 496 0082 E921     		movs	r1, #233
 497 0084 FFF7FEFF 		bl	_Error_Handler
 498              	.LVL30:
 499              	.L27:
 238:Src/main.c    **** 
 500              		.loc 1 238 0
 501 0088 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 502              	.LVL31:
 503 008c 0B4B     		ldr	r3, .L29+12
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccsf9ieu.s 			page 18


 504 008e A3FB0030 		umull	r3, r0, r3, r0
 505 0092 8009     		lsrs	r0, r0, #6
 506 0094 FFF7FEFF 		bl	HAL_SYSTICK_Config
 507              	.LVL32:
 242:Src/main.c    **** 
 508              		.loc 1 242 0
 509 0098 0420     		movs	r0, #4
 510 009a FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 511              	.LVL33:
 245:Src/main.c    **** }
 512              		.loc 1 245 0
 513 009e 4FF0FF30 		mov	r0, #-1
 514 00a2 0021     		movs	r1, #0
 515 00a4 0A46     		mov	r2, r1
 516 00a6 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 517              	.LVL34:
 246:Src/main.c    **** 
 518              		.loc 1 246 0
 519 00aa 15B0     		add	sp, sp, #84
 520              	.LCFI9:
 521              		.cfi_def_cfa_offset 4
 522              		@ sp needed
 523 00ac 5DF804FB 		ldr	pc, [sp], #4
 524              	.L30:
 525              		.align	2
 526              	.L29:
 527 00b0 00380240 		.word	1073887232
 528 00b4 00700040 		.word	1073770496
 529 00b8 00000000 		.word	.LC0
 530 00bc D34D6210 		.word	274877907
 531              		.cfi_endproc
 532              	.LFE124:
 534              		.section	.text.main,"ax",%progbits
 535              		.align	2
 536              		.global	main
 537              		.thumb
 538              		.thumb_func
 540              	main:
 541              	.LFB123:
  86:Src/main.c    ****     /* USER CODE BEGIN 1 */
 542              		.loc 1 86 0
 543              		.cfi_startproc
 544              		@ Volatile: function does not return.
 545              		@ args = 0, pretend = 0, frame = 0
 546              		@ frame_needed = 0, uses_anonymous_args = 0
 547 0000 08B5     		push	{r3, lr}
 548              	.LCFI10:
 549              		.cfi_def_cfa_offset 8
 550              		.cfi_offset 3, -8
 551              		.cfi_offset 14, -4
  94:Src/main.c    **** 
 552              		.loc 1 94 0
 553 0002 FFF7FEFF 		bl	HAL_Init
 554              	.LVL35:
 101:Src/main.c    **** 
 555              		.loc 1 101 0
 556 0006 FFF7FEFF 		bl	SystemClock_Config
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccsf9ieu.s 			page 19


 557              	.LVL36:
 108:Src/main.c    ****     MX_I2C1_Init();
 558              		.loc 1 108 0
 559 000a FFF7FEFF 		bl	MX_GPIO_Init
 560              	.LVL37:
 109:Src/main.c    ****     MX_TIM1_Init();
 561              		.loc 1 109 0
 562 000e FFF7FEFF 		bl	MX_I2C1_Init
 563              	.LVL38:
 110:Src/main.c    ****     /* USER CODE BEGIN 2 */
 564              		.loc 1 110 0
 565 0012 FFF7FEFF 		bl	MX_TIM1_Init
 566              	.LVL39:
 112:Src/main.c    ****     HAL_Delay(10);
 567              		.loc 1 112 0
 568 0016 FFF7FEFF 		bl	ssd1306_Init
 569              	.LVL40:
 113:Src/main.c    ****     ssd1306_Fill(Black);
 570              		.loc 1 113 0
 571 001a 0A20     		movs	r0, #10
 572 001c FFF7FEFF 		bl	HAL_Delay
 573              	.LVL41:
 114:Src/main.c    ****     ssd1306_UpdateScreen();
 574              		.loc 1 114 0
 575 0020 0020     		movs	r0, #0
 576 0022 FFF7FEFF 		bl	ssd1306_Fill
 577              	.LVL42:
 115:Src/main.c    ****     HAL_Delay(10);
 578              		.loc 1 115 0
 579 0026 FFF7FEFF 		bl	ssd1306_UpdateScreen
 580              	.LVL43:
 116:Src/main.c    ****     ssd1306_SetCursor(0,0);
 581              		.loc 1 116 0
 582 002a 0A20     		movs	r0, #10
 583 002c FFF7FEFF 		bl	HAL_Delay
 584              	.LVL44:
 117:Src/main.c    ****     ssd1306_WriteString("Starting...",Font_11x18,White);
 585              		.loc 1 117 0
 586 0030 0020     		movs	r0, #0
 587 0032 0146     		mov	r1, r0
 588 0034 FFF7FEFF 		bl	ssd1306_SetCursor
 589              	.LVL45:
 118:Src/main.c    ****     ssd1306_UpdateScreen();
 590              		.loc 1 118 0
 591 0038 5A4D     		ldr	r5, .L34
 592 003a 5B48     		ldr	r0, .L34+4
 593 003c 95E80600 		ldmia	r5, {r1, r2}
 594 0040 0123     		movs	r3, #1
 595 0042 FFF7FEFF 		bl	ssd1306_WriteString
 596              	.LVL46:
 119:Src/main.c    **** 
 597              		.loc 1 119 0
 598 0046 FFF7FEFF 		bl	ssd1306_UpdateScreen
 599              	.LVL47:
 121:Src/main.c    ****     HAL_TIM_PWM_Stop(&htim1, MOTOR_LEFT_BACKWARD);
 600              		.loc 1 121 0
 601 004a 584C     		ldr	r4, .L34+8
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccsf9ieu.s 			page 20


 602 004c 2046     		mov	r0, r4
 603 004e 0021     		movs	r1, #0
 604 0050 FFF7FEFF 		bl	HAL_TIM_PWM_Stop
 605              	.LVL48:
 122:Src/main.c    ****     HAL_TIM_PWM_Stop(&htim1, MOTOR_RIGHT_FORWARD);
 606              		.loc 1 122 0
 607 0054 2046     		mov	r0, r4
 608 0056 0421     		movs	r1, #4
 609 0058 FFF7FEFF 		bl	HAL_TIM_PWM_Stop
 610              	.LVL49:
 123:Src/main.c    ****     HAL_TIM_PWM_Stop(&htim1, MOTOR_RIGHT_BACKWARD);
 611              		.loc 1 123 0
 612 005c 2046     		mov	r0, r4
 613 005e 0821     		movs	r1, #8
 614 0060 FFF7FEFF 		bl	HAL_TIM_PWM_Stop
 615              	.LVL50:
 124:Src/main.c    **** 
 616              		.loc 1 124 0
 617 0064 2046     		mov	r0, r4
 618 0066 0C21     		movs	r1, #12
 619 0068 FFF7FEFF 		bl	HAL_TIM_PWM_Stop
 620              	.LVL51:
 127:Src/main.c    ****     __HAL_TIM_SET_COMPARE(&htim1, MOTOR_RIGHT_FORWARD, 0.7*MOTOR_PWM_PERIOD);
 621              		.loc 1 127 0
 622 006c 2368     		ldr	r3, [r4]
 623 006e 4BF23336 		movw	r6, #45875
 624 0072 5E63     		str	r6, [r3, #52]
 128:Src/main.c    ****     HAL_TIM_PWM_Start(&htim1, MOTOR_RIGHT_FORWARD);
 625              		.loc 1 128 0
 626 0074 DE63     		str	r6, [r3, #60]
 129:Src/main.c    ****     HAL_TIM_PWM_Start(&htim1, MOTOR_LEFT_FORWARD);
 627              		.loc 1 129 0
 628 0076 2046     		mov	r0, r4
 629 0078 0821     		movs	r1, #8
 630 007a FFF7FEFF 		bl	HAL_TIM_PWM_Start
 631              	.LVL52:
 130:Src/main.c    ****     HAL_Delay(3000);
 632              		.loc 1 130 0
 633 007e 2046     		mov	r0, r4
 634 0080 0021     		movs	r1, #0
 635 0082 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 636              	.LVL53:
 131:Src/main.c    ****     HAL_TIM_PWM_Stop(&htim1, MOTOR_RIGHT_FORWARD);
 637              		.loc 1 131 0
 638 0086 40F6B830 		movw	r0, #3000
 639 008a FFF7FEFF 		bl	HAL_Delay
 640              	.LVL54:
 132:Src/main.c    ****     HAL_TIM_PWM_Stop(&htim1, MOTOR_LEFT_FORWARD);
 641              		.loc 1 132 0
 642 008e 2046     		mov	r0, r4
 643 0090 0821     		movs	r1, #8
 644 0092 FFF7FEFF 		bl	HAL_TIM_PWM_Stop
 645              	.LVL55:
 133:Src/main.c    ****     ssd1306_Fill(Black);
 646              		.loc 1 133 0
 647 0096 2046     		mov	r0, r4
 648 0098 0021     		movs	r1, #0
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccsf9ieu.s 			page 21


 649 009a FFF7FEFF 		bl	HAL_TIM_PWM_Stop
 650              	.LVL56:
 134:Src/main.c    ****     ssd1306_UpdateScreen();
 651              		.loc 1 134 0
 652 009e 0020     		movs	r0, #0
 653 00a0 FFF7FEFF 		bl	ssd1306_Fill
 654              	.LVL57:
 135:Src/main.c    ****     ssd1306_SetCursor(0,0);
 655              		.loc 1 135 0
 656 00a4 FFF7FEFF 		bl	ssd1306_UpdateScreen
 657              	.LVL58:
 136:Src/main.c    ****     ssd1306_WriteString("Forwards 0.7",Font_11x18,White);
 658              		.loc 1 136 0
 659 00a8 0020     		movs	r0, #0
 660 00aa 0146     		mov	r1, r0
 661 00ac FFF7FEFF 		bl	ssd1306_SetCursor
 662              	.LVL59:
 137:Src/main.c    ****     ssd1306_UpdateScreen();
 663              		.loc 1 137 0
 664 00b0 3F48     		ldr	r0, .L34+12
 665 00b2 95E80600 		ldmia	r5, {r1, r2}
 666 00b6 0123     		movs	r3, #1
 667 00b8 FFF7FEFF 		bl	ssd1306_WriteString
 668              	.LVL60:
 138:Src/main.c    ****     //backward
 669              		.loc 1 138 0
 670 00bc FFF7FEFF 		bl	ssd1306_UpdateScreen
 671              	.LVL61:
 140:Src/main.c    ****     __HAL_TIM_SET_COMPARE(&htim1, MOTOR_RIGHT_BACKWARD, 0.7*MOTOR_PWM_PERIOD);
 672              		.loc 1 140 0
 673 00c0 2368     		ldr	r3, [r4]
 674 00c2 9E63     		str	r6, [r3, #56]
 141:Src/main.c    ****     HAL_TIM_PWM_Start(&htim1, MOTOR_RIGHT_BACKWARD);
 675              		.loc 1 141 0
 676 00c4 1E64     		str	r6, [r3, #64]
 142:Src/main.c    ****     HAL_TIM_PWM_Start(&htim1, MOTOR_LEFT_BACKWARD);
 677              		.loc 1 142 0
 678 00c6 2046     		mov	r0, r4
 679 00c8 0C21     		movs	r1, #12
 680 00ca FFF7FEFF 		bl	HAL_TIM_PWM_Start
 681              	.LVL62:
 143:Src/main.c    ****     HAL_Delay(3000);
 682              		.loc 1 143 0
 683 00ce 2046     		mov	r0, r4
 684 00d0 0421     		movs	r1, #4
 685 00d2 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 686              	.LVL63:
 144:Src/main.c    ****     HAL_TIM_PWM_Stop(&htim1, MOTOR_RIGHT_BACKWARD);
 687              		.loc 1 144 0
 688 00d6 40F6B830 		movw	r0, #3000
 689 00da FFF7FEFF 		bl	HAL_Delay
 690              	.LVL64:
 145:Src/main.c    ****     HAL_TIM_PWM_Stop(&htim1, MOTOR_LEFT_BACKWARD);
 691              		.loc 1 145 0
 692 00de 2046     		mov	r0, r4
 693 00e0 0C21     		movs	r1, #12
 694 00e2 FFF7FEFF 		bl	HAL_TIM_PWM_Stop
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccsf9ieu.s 			page 22


 695              	.LVL65:
 146:Src/main.c    ****     ssd1306_Fill(Black);
 696              		.loc 1 146 0
 697 00e6 2046     		mov	r0, r4
 698 00e8 0421     		movs	r1, #4
 699 00ea FFF7FEFF 		bl	HAL_TIM_PWM_Stop
 700              	.LVL66:
 147:Src/main.c    ****     ssd1306_UpdateScreen();
 701              		.loc 1 147 0
 702 00ee 0020     		movs	r0, #0
 703 00f0 FFF7FEFF 		bl	ssd1306_Fill
 704              	.LVL67:
 148:Src/main.c    ****     ssd1306_SetCursor(0,0);
 705              		.loc 1 148 0
 706 00f4 FFF7FEFF 		bl	ssd1306_UpdateScreen
 707              	.LVL68:
 149:Src/main.c    ****     ssd1306_WriteString("Backwards 0.7",Font_11x18,White);
 708              		.loc 1 149 0
 709 00f8 0020     		movs	r0, #0
 710 00fa 0146     		mov	r1, r0
 711 00fc FFF7FEFF 		bl	ssd1306_SetCursor
 712              	.LVL69:
 150:Src/main.c    ****     ssd1306_UpdateScreen();
 713              		.loc 1 150 0
 714 0100 2C48     		ldr	r0, .L34+16
 715 0102 95E80600 		ldmia	r5, {r1, r2}
 716 0106 0123     		movs	r3, #1
 717 0108 FFF7FEFF 		bl	ssd1306_WriteString
 718              	.LVL70:
 151:Src/main.c    ****     //left
 719              		.loc 1 151 0
 720 010c FFF7FEFF 		bl	ssd1306_UpdateScreen
 721              	.LVL71:
 153:Src/main.c    ****     __HAL_TIM_SET_COMPARE(&htim1, MOTOR_RIGHT_FORWARD, 0.9*MOTOR_PWM_PERIOD);
 722              		.loc 1 153 0
 723 0110 2368     		ldr	r3, [r4]
 724 0112 4FF40042 		mov	r2, #32768
 725 0116 5A63     		str	r2, [r3, #52]
 154:Src/main.c    ****     HAL_TIM_PWM_Start(&htim1, MOTOR_RIGHT_FORWARD);
 726              		.loc 1 154 0
 727 0118 4EF26662 		movw	r2, #58982
 728 011c DA63     		str	r2, [r3, #60]
 155:Src/main.c    ****     HAL_TIM_PWM_Start(&htim1, MOTOR_LEFT_FORWARD);
 729              		.loc 1 155 0
 730 011e 2046     		mov	r0, r4
 731 0120 0821     		movs	r1, #8
 732 0122 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 733              	.LVL72:
 156:Src/main.c    ****     HAL_Delay(3000);
 734              		.loc 1 156 0
 735 0126 2046     		mov	r0, r4
 736 0128 0021     		movs	r1, #0
 737 012a FFF7FEFF 		bl	HAL_TIM_PWM_Start
 738              	.LVL73:
 157:Src/main.c    ****     HAL_TIM_PWM_Stop(&htim1, MOTOR_RIGHT_FORWARD);
 739              		.loc 1 157 0
 740 012e 40F6B830 		movw	r0, #3000
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccsf9ieu.s 			page 23


 741 0132 FFF7FEFF 		bl	HAL_Delay
 742              	.LVL74:
 158:Src/main.c    ****     HAL_TIM_PWM_Stop(&htim1, MOTOR_LEFT_FORWARD);
 743              		.loc 1 158 0
 744 0136 2046     		mov	r0, r4
 745 0138 0821     		movs	r1, #8
 746 013a FFF7FEFF 		bl	HAL_TIM_PWM_Stop
 747              	.LVL75:
 159:Src/main.c    ****     ssd1306_Fill(Black);
 748              		.loc 1 159 0
 749 013e 2046     		mov	r0, r4
 750 0140 0021     		movs	r1, #0
 751 0142 FFF7FEFF 		bl	HAL_TIM_PWM_Stop
 752              	.LVL76:
 160:Src/main.c    ****     ssd1306_UpdateScreen();
 753              		.loc 1 160 0
 754 0146 0020     		movs	r0, #0
 755 0148 FFF7FEFF 		bl	ssd1306_Fill
 756              	.LVL77:
 161:Src/main.c    ****     ssd1306_SetCursor(0,0);
 757              		.loc 1 161 0
 758 014c FFF7FEFF 		bl	ssd1306_UpdateScreen
 759              	.LVL78:
 162:Src/main.c    ****     ssd1306_WriteString("L 0.5 R 0.9",Font_11x18,White);
 760              		.loc 1 162 0
 761 0150 0020     		movs	r0, #0
 762 0152 0146     		mov	r1, r0
 763 0154 FFF7FEFF 		bl	ssd1306_SetCursor
 764              	.LVL79:
 163:Src/main.c    ****     ssd1306_UpdateScreen();
 765              		.loc 1 163 0
 766 0158 1748     		ldr	r0, .L34+20
 767 015a 95E80600 		ldmia	r5, {r1, r2}
 768 015e 0123     		movs	r3, #1
 769 0160 FFF7FEFF 		bl	ssd1306_WriteString
 770              	.LVL80:
 164:Src/main.c    ****     //left
 771              		.loc 1 164 0
 772 0164 FFF7FEFF 		bl	ssd1306_UpdateScreen
 773              	.LVL81:
 166:Src/main.c    ****     __HAL_TIM_SET_COMPARE(&htim1, MOTOR_RIGHT_BACKWARD, 0.7*MOTOR_PWM_PERIOD);
 774              		.loc 1 166 0
 775 0168 2368     		ldr	r3, [r4]
 776 016a 5E63     		str	r6, [r3, #52]
 167:Src/main.c    ****     HAL_TIM_PWM_Start(&htim1, MOTOR_RIGHT_BACKWARD);
 777              		.loc 1 167 0
 778 016c 1E64     		str	r6, [r3, #64]
 168:Src/main.c    ****     HAL_TIM_PWM_Start(&htim1, MOTOR_LEFT_FORWARD);
 779              		.loc 1 168 0
 780 016e 2046     		mov	r0, r4
 781 0170 0C21     		movs	r1, #12
 782 0172 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 783              	.LVL82:
 169:Src/main.c    ****     ssd1306_Fill(Black);
 784              		.loc 1 169 0
 785 0176 2046     		mov	r0, r4
 786 0178 0021     		movs	r1, #0
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccsf9ieu.s 			page 24


 787 017a FFF7FEFF 		bl	HAL_TIM_PWM_Start
 788              	.LVL83:
 170:Src/main.c    ****     ssd1306_UpdateScreen();
 789              		.loc 1 170 0
 790 017e 0020     		movs	r0, #0
 791 0180 FFF7FEFF 		bl	ssd1306_Fill
 792              	.LVL84:
 171:Src/main.c    ****     ssd1306_SetCursor(0,0);
 793              		.loc 1 171 0
 794 0184 FFF7FEFF 		bl	ssd1306_UpdateScreen
 795              	.LVL85:
 172:Src/main.c    ****     ssd1306_WriteString("Fuck yess!!",Font_11x18,White);
 796              		.loc 1 172 0
 797 0188 0020     		movs	r0, #0
 798 018a 0146     		mov	r1, r0
 799 018c FFF7FEFF 		bl	ssd1306_SetCursor
 800              	.LVL86:
 173:Src/main.c    ****     ssd1306_UpdateScreen();
 801              		.loc 1 173 0
 802 0190 0A48     		ldr	r0, .L34+24
 803 0192 95E80600 		ldmia	r5, {r1, r2}
 804 0196 0123     		movs	r3, #1
 805 0198 FFF7FEFF 		bl	ssd1306_WriteString
 806              	.LVL87:
 174:Src/main.c    ****     /* USER CODE END 2 */
 807              		.loc 1 174 0
 808 019c FFF7FEFF 		bl	ssd1306_UpdateScreen
 809              	.LVL88:
 810              	.L32:
 185:Src/main.c    ****     /* USER CODE END 3 */
 811              		.loc 1 185 0 discriminator 1
 812 01a0 FEE7     		b	.L32
 813              	.L35:
 814 01a2 00BF     		.align	2
 815              	.L34:
 816 01a4 00000000 		.word	Font_11x18
 817 01a8 0C000000 		.word	.LC1
 818 01ac 00000000 		.word	htim1
 819 01b0 18000000 		.word	.LC2
 820 01b4 28000000 		.word	.LC3
 821 01b8 38000000 		.word	.LC4
 822 01bc 44000000 		.word	.LC5
 823              		.cfi_endproc
 824              	.LFE123:
 826              		.comm	htim1,60,4
 827              		.comm	hi2c1,84,4
 828              		.section	.rodata.str1.4,"aMS",%progbits,1
 829              		.align	2
 830              	.LC0:
 831 0000 5372632F 		.ascii	"Src/main.c\000"
 831      6D61696E 
 831      2E6300
 832 000b 00       		.space	1
 833              	.LC1:
 834 000c 53746172 		.ascii	"Starting...\000"
 834      74696E67 
 834      2E2E2E00 
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccsf9ieu.s 			page 25


 835              	.LC2:
 836 0018 466F7277 		.ascii	"Forwards 0.7\000"
 836      61726473 
 836      20302E37 
 836      00
 837 0025 000000   		.space	3
 838              	.LC3:
 839 0028 4261636B 		.ascii	"Backwards 0.7\000"
 839      77617264 
 839      7320302E 
 839      3700
 840 0036 0000     		.space	2
 841              	.LC4:
 842 0038 4C20302E 		.ascii	"L 0.5 R 0.9\000"
 842      35205220 
 842      302E3900 
 843              	.LC5:
 844 0044 4675636B 		.ascii	"Fuck yess!!\000"
 844      20796573 
 844      73212100 
 845              		.text
 846              	.Letext0:
 847              		.file 2 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 848              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/machine/_default_types
 849              		.file 4 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/sys/_stdint.h"
 850              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 851              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 852              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 853              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 854              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 855              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 856              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 857              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 858              		.file 13 "Inc/fonts.h"
 859              		.file 14 "Inc/ssd1306.h"
 860              		.file 15 "Drivers/CMSIS/Include/core_cm4.h"
 861              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 862              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccsf9ieu.s 			page 26


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccsf9ieu.s:21     .text.MX_GPIO_Init:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccsf9ieu.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccsf9ieu.s:85     .text.MX_GPIO_Init:0000000000000048 $d
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccsf9ieu.s:91     .text._Error_Handler:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccsf9ieu.s:96     .text._Error_Handler:0000000000000000 _Error_Handler
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccsf9ieu.s:112    .text.MX_I2C1_Init:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccsf9ieu.s:116    .text.MX_I2C1_Init:0000000000000000 MX_I2C1_Init
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccsf9ieu.s:164    .text.MX_I2C1_Init:0000000000000034 $d
                            *COM*:0000000000000054 hi2c1
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccsf9ieu.s:172    .text.MX_TIM1_Init:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccsf9ieu.s:176    .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccsf9ieu.s:389    .text.MX_TIM1_Init:0000000000000134 $d
                            *COM*:000000000000003c htim1
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccsf9ieu.s:396    .text.SystemClock_Config:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccsf9ieu.s:401    .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccsf9ieu.s:527    .text.SystemClock_Config:00000000000000b0 $d
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccsf9ieu.s:535    .text.main:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccsf9ieu.s:540    .text.main:0000000000000000 main
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccsf9ieu.s:816    .text.main:00000000000001a4 $d
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccsf9ieu.s:829    .rodata.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_I2C_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_TIM_PWM_Start
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
ssd1306_Init
HAL_Delay
ssd1306_Fill
ssd1306_UpdateScreen
ssd1306_SetCursor
ssd1306_WriteString
HAL_TIM_PWM_Stop
Font_11x18
