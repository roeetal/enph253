ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccecpAI2.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"main.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  25              	MX_GPIO_Init:
  26              	.LFB127:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** 
   2:Src/main.c    **** /**
   3:Src/main.c    ****  ******************************************************************************
   4:Src/main.c    ****  * @file           : main.c
   5:Src/main.c    ****  * @brief          : Main program body
   6:Src/main.c    ****  ******************************************************************************
   7:Src/main.c    ****  ** This notice applies to any and all portions of this file
   8:Src/main.c    ****  * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****  * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****  * inserted by the user or by software development tools
  11:Src/main.c    ****  * are owned by their respective copyright owners.
  12:Src/main.c    ****  *
  13:Src/main.c    ****  * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/main.c    ****  *
  15:Src/main.c    ****  * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****  * are permitted provided that the following conditions are met:
  17:Src/main.c    ****  *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****  *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****  *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****  *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****  *      and/or other materials provided with the distribution.
  22:Src/main.c    ****  *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****  *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****  *      without specific prior written permission.
  25:Src/main.c    ****  *
  26:Src/main.c    ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccecpAI2.s 			page 2


  32:Src/main.c    ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/main.c    ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****  * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****  *
  37:Src/main.c    ****  ******************************************************************************
  38:Src/main.c    ****  */
  39:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  40:Src/main.c    **** #include "main.h"
  41:Src/main.c    **** #include "stm32f4xx_hal.h"
  42:Src/main.c    **** 
  43:Src/main.c    **** /* USER CODE BEGIN Includes */
  44:Src/main.c    **** #include "fonts.h"
  45:Src/main.c    **** #include "ssd1306.h"
  46:Src/main.c    **** /* USER CODE END Includes */
  47:Src/main.c    **** 
  48:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  49:Src/main.c    **** I2C_HandleTypeDef hi2c1;
  50:Src/main.c    **** 
  51:Src/main.c    **** TIM_HandleTypeDef htim1;
  52:Src/main.c    **** 
  53:Src/main.c    **** /* USER CODE BEGIN PV */
  54:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  55:Src/main.c    **** #define MOTOR_SPEED 100
  56:Src/main.c    **** #define MOTOR_LEFT_FORWARD TIM_CHANNEL_1
  57:Src/main.c    **** #define MOTOR_LEFT_BACKWARD TIM_CHANNEL_2
  58:Src/main.c    **** #define MOTOR_RIGHT_FORWARD TIM_CHANNEL_3
  59:Src/main.c    **** #define MOTOR_RIGHT_BACKWARD TIM_CHANNEL_4
  60:Src/main.c    **** /* USER CODE END PV */
  61:Src/main.c    **** 
  62:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  63:Src/main.c    **** void SystemClock_Config(void);
  64:Src/main.c    **** static void MX_GPIO_Init(void);
  65:Src/main.c    **** static void MX_I2C1_Init(void);
  66:Src/main.c    **** static void MX_TIM1_Init(void);
  67:Src/main.c    **** 
  68:Src/main.c    **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
  69:Src/main.c    **** 
  70:Src/main.c    **** 
  71:Src/main.c    **** /* USER CODE BEGIN PFP */
  72:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  73:Src/main.c    **** void print(char* msg);
  74:Src/main.c    **** 
  75:Src/main.c    **** /* USER CODE END PFP */
  76:Src/main.c    **** 
  77:Src/main.c    **** /* USER CODE BEGIN 0 */
  78:Src/main.c    **** 
  79:Src/main.c    **** /* USER CODE END 0 */
  80:Src/main.c    **** 
  81:Src/main.c    **** /**
  82:Src/main.c    ****  * @brief  The application entry point.
  83:Src/main.c    ****  *
  84:Src/main.c    ****  * @retval None
  85:Src/main.c    ****  */
  86:Src/main.c    **** int main(void)
  87:Src/main.c    **** {
  88:Src/main.c    ****     /* USER CODE BEGIN 1 */
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccecpAI2.s 			page 3


  89:Src/main.c    **** 
  90:Src/main.c    ****     /* USER CODE END 1 */
  91:Src/main.c    **** 
  92:Src/main.c    ****     /* MCU Configuration----------------------------------------------------------*/
  93:Src/main.c    **** 
  94:Src/main.c    ****     /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  95:Src/main.c    ****     HAL_Init();
  96:Src/main.c    **** 
  97:Src/main.c    ****     /* USER CODE BEGIN Init */
  98:Src/main.c    **** 
  99:Src/main.c    ****     /* USER CODE END Init */
 100:Src/main.c    **** 
 101:Src/main.c    ****     /* Configure the system clock */
 102:Src/main.c    ****     SystemClock_Config();
 103:Src/main.c    **** 
 104:Src/main.c    ****     /* USER CODE BEGIN SysInit */
 105:Src/main.c    **** 
 106:Src/main.c    ****     /* USER CODE END SysInit */
 107:Src/main.c    **** 
 108:Src/main.c    ****     /* Initialize all configured peripherals */
 109:Src/main.c    ****     MX_GPIO_Init();
 110:Src/main.c    ****     MX_I2C1_Init();
 111:Src/main.c    ****     MX_TIM1_Init();
 112:Src/main.c    ****     ssd1306_Init();
 113:Src/main.c    ****     /* USER CODE BEGIN 2 */
 114:Src/main.c    ****     print("Starting...");
 115:Src/main.c    ****     HAL_TIM_PWM_Start(&htim1, MOTOR_RIGHT_FORWARD);
 116:Src/main.c    ****     HAL_TIM_PWM_Start(&htim1, MOTOR_RIGHT_BACKWARD);
 117:Src/main.c    ****     HAL_TIM_PWM_Start(&htim1, MOTOR_LEFT_FORWARD);
 118:Src/main.c    ****     HAL_TIM_PWM_Start(&htim1, MOTOR_LEFT_BACKWARD);
 119:Src/main.c    ****     //forward
 120:Src/main.c    ****     print("L 0.7 R 0.7");
 121:Src/main.c    ****     __HAL_TIM_SetCompare(&htim1, MOTOR_LEFT_FORWARD, 0.7*MOTOR_SPEED);
 122:Src/main.c    ****     __HAL_TIM_SetCompare(&htim1, MOTOR_RIGHT_FORWARD, 0.7*MOTOR_SPEED);
 123:Src/main.c    ****     HAL_Delay(5000);
 124:Src/main.c    ****     //backward
 125:Src/main.c    ****     print("L -0.7 R -0.7");
 126:Src/main.c    ****     __HAL_TIM_SetCompare(&htim1, MOTOR_LEFT_FORWARD, 0*MOTOR_SPEED);
 127:Src/main.c    ****     __HAL_TIM_SetCompare(&htim1, MOTOR_RIGHT_FORWARD, 0*MOTOR_SPEED);
 128:Src/main.c    ****     __HAL_TIM_SetCompare(&htim1, MOTOR_RIGHT_BACKWARD, 0.7*MOTOR_SPEED);
 129:Src/main.c    ****     __HAL_TIM_SetCompare(&htim1, MOTOR_LEFT_BACKWARD, 0.7*MOTOR_SPEED);
 130:Src/main.c    ****     HAL_Delay(5000);
 131:Src/main.c    ****     //turn
 132:Src/main.c    ****     print("L 0.9 R -0.7");
 133:Src/main.c    ****     __HAL_TIM_SetCompare(&htim1, MOTOR_LEFT_BACKWARD, 0*MOTOR_SPEED);
 134:Src/main.c    ****     __HAL_TIM_SetCompare(&htim1, MOTOR_RIGHT_FORWARD, 0*MOTOR_SPEED);
 135:Src/main.c    ****     __HAL_TIM_SetCompare(&htim1, MOTOR_RIGHT_BACKWARD, 0.7*MOTOR_SPEED);
 136:Src/main.c    ****     __HAL_TIM_SetCompare(&htim1, MOTOR_LEFT_FORWARD, 0.9*MOTOR_SPEED);
 137:Src/main.c    ****     HAL_Delay(5000);
 138:Src/main.c    ****     //spin
 139:Src/main.c    ****     __HAL_TIM_SetCompare(&htim1, MOTOR_LEFT_FORWARD, 0.9*MOTOR_SPEED);
 140:Src/main.c    ****     __HAL_TIM_SetCompare(&htim1, MOTOR_RIGHT_FORWARD, 0*MOTOR_SPEED);
 141:Src/main.c    ****     __HAL_TIM_SetCompare(&htim1, MOTOR_RIGHT_BACKWARD, 0.9*MOTOR_SPEED);
 142:Src/main.c    ****     __HAL_TIM_SetCompare(&htim1, MOTOR_LEFT_BACKWARD, 0*MOTOR_SPEED);
 143:Src/main.c    ****     HAL_Delay(5000);
 144:Src/main.c    **** 
 145:Src/main.c    ****     int i=0;
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccecpAI2.s 			page 4


 146:Src/main.c    ****     __HAL_TIM_SetCompare(&htim1, MOTOR_LEFT_BACKWARD, 0*MOTOR_SPEED);
 147:Src/main.c    ****     __HAL_TIM_SetCompare(&htim1, MOTOR_RIGHT_BACKWARD, 0*MOTOR_SPEED);
 148:Src/main.c    ****     print("Go boy");
 149:Src/main.c    ****     /* USER CODE END 2 */
 150:Src/main.c    **** 
 151:Src/main.c    ****     /* Infinite loop */
 152:Src/main.c    ****     /* USER CODE BEGIN WHILE */
 153:Src/main.c    ****     while (1)
 154:Src/main.c    ****     {
 155:Src/main.c    ****         if(i<=MOTOR_SPEED){
 156:Src/main.c    ****             __HAL_TIM_SetCompare(&htim1, MOTOR_RIGHT_FORWARD, i);
 157:Src/main.c    ****             __HAL_TIM_SetCompare(&htim1, MOTOR_LEFT_FORWARD, i);
 158:Src/main.c    ****             HAL_Delay(500);
 159:Src/main.c    ****             i++;
 160:Src/main.c    ****         }
 161:Src/main.c    ****         /* USER CODE END WHILE */
 162:Src/main.c    **** 
 163:Src/main.c    ****         /* USER CODE BEGIN 3 */
 164:Src/main.c    **** 
 165:Src/main.c    ****     }
 166:Src/main.c    ****     /* USER CODE END 3 */
 167:Src/main.c    **** 
 168:Src/main.c    **** }
 169:Src/main.c    **** 
 170:Src/main.c    **** /**
 171:Src/main.c    ****  * @brief System Clock Configuration
 172:Src/main.c    ****  * @retval None
 173:Src/main.c    ****  */
 174:Src/main.c    **** void SystemClock_Config(void)
 175:Src/main.c    **** {
 176:Src/main.c    **** 
 177:Src/main.c    ****     RCC_OscInitTypeDef RCC_OscInitStruct;
 178:Src/main.c    ****     RCC_ClkInitTypeDef RCC_ClkInitStruct;
 179:Src/main.c    **** 
 180:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 181:Src/main.c    ****     */
 182:Src/main.c    ****     __HAL_RCC_PWR_CLK_ENABLE();
 183:Src/main.c    **** 
 184:Src/main.c    ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 185:Src/main.c    **** 
 186:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 187:Src/main.c    ****     */
 188:Src/main.c    ****     RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 189:Src/main.c    ****     RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 190:Src/main.c    ****     RCC_OscInitStruct.HSICalibrationValue = 16;
 191:Src/main.c    ****     RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 192:Src/main.c    ****     if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 193:Src/main.c    ****     {
 194:Src/main.c    ****         _Error_Handler(__FILE__, __LINE__);
 195:Src/main.c    ****     }
 196:Src/main.c    **** 
 197:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 198:Src/main.c    ****     */
 199:Src/main.c    ****     RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 200:Src/main.c    ****         |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 201:Src/main.c    ****     RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 202:Src/main.c    ****     RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccecpAI2.s 			page 5


 203:Src/main.c    ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 204:Src/main.c    ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 205:Src/main.c    **** 
 206:Src/main.c    ****     if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 207:Src/main.c    ****     {
 208:Src/main.c    ****         _Error_Handler(__FILE__, __LINE__);
 209:Src/main.c    ****     }
 210:Src/main.c    **** 
 211:Src/main.c    ****     /**Configure the Systick interrupt time 
 212:Src/main.c    ****     */
 213:Src/main.c    ****     HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 214:Src/main.c    **** 
 215:Src/main.c    ****     /**Configure the Systick 
 216:Src/main.c    ****     */
 217:Src/main.c    ****     HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 218:Src/main.c    **** 
 219:Src/main.c    ****     /* SysTick_IRQn interrupt configuration */
 220:Src/main.c    ****     HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 221:Src/main.c    **** }
 222:Src/main.c    **** 
 223:Src/main.c    **** /* I2C1 init function */
 224:Src/main.c    **** static void MX_I2C1_Init(void)
 225:Src/main.c    **** {
 226:Src/main.c    **** 
 227:Src/main.c    ****     hi2c1.Instance = I2C1;
 228:Src/main.c    ****     hi2c1.Init.ClockSpeed = 100000;
 229:Src/main.c    ****     hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 230:Src/main.c    ****     hi2c1.Init.OwnAddress1 = 0;
 231:Src/main.c    ****     hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 232:Src/main.c    ****     hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 233:Src/main.c    ****     hi2c1.Init.OwnAddress2 = 0;
 234:Src/main.c    ****     hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 235:Src/main.c    ****     hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 236:Src/main.c    ****     if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 237:Src/main.c    ****     {
 238:Src/main.c    ****         _Error_Handler(__FILE__, __LINE__);
 239:Src/main.c    ****     }
 240:Src/main.c    **** 
 241:Src/main.c    **** }
 242:Src/main.c    **** 
 243:Src/main.c    **** /* TIM1 init function */
 244:Src/main.c    **** static void MX_TIM1_Init(void)
 245:Src/main.c    **** {
 246:Src/main.c    **** 
 247:Src/main.c    ****     TIM_ClockConfigTypeDef sClockSourceConfig;
 248:Src/main.c    ****     TIM_MasterConfigTypeDef sMasterConfig;
 249:Src/main.c    ****     TIM_OC_InitTypeDef sConfigOC;
 250:Src/main.c    ****     TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig;
 251:Src/main.c    **** 
 252:Src/main.c    ****     htim1.Instance = TIM1;
 253:Src/main.c    ****     htim1.Init.Prescaler = 0;
 254:Src/main.c    ****     htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 255:Src/main.c    ****     htim1.Init.Period = MOTOR_SPEED;
 256:Src/main.c    ****     htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 257:Src/main.c    ****     htim1.Init.RepetitionCounter = 0;
 258:Src/main.c    ****     if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 259:Src/main.c    ****     {
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccecpAI2.s 			page 6


 260:Src/main.c    ****         _Error_Handler(__FILE__, __LINE__);
 261:Src/main.c    ****     }
 262:Src/main.c    **** 
 263:Src/main.c    ****     sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 264:Src/main.c    ****     if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 265:Src/main.c    ****     {
 266:Src/main.c    ****         _Error_Handler(__FILE__, __LINE__);
 267:Src/main.c    ****     }
 268:Src/main.c    **** 
 269:Src/main.c    ****     if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 270:Src/main.c    ****     {
 271:Src/main.c    ****         _Error_Handler(__FILE__, __LINE__);
 272:Src/main.c    ****     }
 273:Src/main.c    **** 
 274:Src/main.c    ****     sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 275:Src/main.c    ****     sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 276:Src/main.c    ****     if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 277:Src/main.c    ****     {
 278:Src/main.c    ****         _Error_Handler(__FILE__, __LINE__);
 279:Src/main.c    ****     }
 280:Src/main.c    **** 
 281:Src/main.c    ****     sConfigOC.OCMode = TIM_OCMODE_PWM1;
 282:Src/main.c    ****     sConfigOC.Pulse = 0;
 283:Src/main.c    ****     sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 284:Src/main.c    ****     sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 285:Src/main.c    ****     sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 286:Src/main.c    ****     sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 287:Src/main.c    ****     sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 288:Src/main.c    ****     if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 289:Src/main.c    ****     {
 290:Src/main.c    ****         _Error_Handler(__FILE__, __LINE__);
 291:Src/main.c    ****     }
 292:Src/main.c    **** 
 293:Src/main.c    ****     if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 294:Src/main.c    ****     {
 295:Src/main.c    ****         _Error_Handler(__FILE__, __LINE__);
 296:Src/main.c    ****     }
 297:Src/main.c    **** 
 298:Src/main.c    ****     if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 299:Src/main.c    ****     {
 300:Src/main.c    ****         _Error_Handler(__FILE__, __LINE__);
 301:Src/main.c    ****     }
 302:Src/main.c    **** 
 303:Src/main.c    ****     if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 304:Src/main.c    ****     {
 305:Src/main.c    ****         _Error_Handler(__FILE__, __LINE__);
 306:Src/main.c    ****     }
 307:Src/main.c    **** 
 308:Src/main.c    ****     sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 309:Src/main.c    ****     sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 310:Src/main.c    ****     sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 311:Src/main.c    ****     sBreakDeadTimeConfig.DeadTime = 0;
 312:Src/main.c    ****     sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 313:Src/main.c    ****     sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 314:Src/main.c    ****     sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 315:Src/main.c    ****     if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 316:Src/main.c    ****     {
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccecpAI2.s 			page 7


 317:Src/main.c    ****         _Error_Handler(__FILE__, __LINE__);
 318:Src/main.c    ****     }
 319:Src/main.c    **** 
 320:Src/main.c    ****     HAL_TIM_MspPostInit(&htim1);
 321:Src/main.c    **** 
 322:Src/main.c    **** }
 323:Src/main.c    **** 
 324:Src/main.c    **** /** Configure pins as 
 325:Src/main.c    ****  * Analog 
 326:Src/main.c    ****  * Input 
 327:Src/main.c    ****  * Output
 328:Src/main.c    ****  * EVENT_OUT
 329:Src/main.c    ****  * EXTI
 330:Src/main.c    ****  */
 331:Src/main.c    **** static void MX_GPIO_Init(void)
 332:Src/main.c    **** {
  28              		.loc 1 332 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 00B5     		push	{lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 14, -4
  36 0002 89B0     		sub	sp, sp, #36
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 40
  39              	.LBB2:
 333:Src/main.c    **** 
 334:Src/main.c    ****     GPIO_InitTypeDef GPIO_InitStruct;
 335:Src/main.c    **** 
 336:Src/main.c    ****     /* GPIO Ports Clock Enable */
 337:Src/main.c    ****     __HAL_RCC_GPIOA_CLK_ENABLE();
  40              		.loc 1 337 0
  41 0004 0022     		movs	r2, #0
  42 0006 0192     		str	r2, [sp, #4]
  43 0008 0F4B     		ldr	r3, .L3
  44 000a 196B     		ldr	r1, [r3, #48]
  45 000c 41F00101 		orr	r1, r1, #1
  46 0010 1963     		str	r1, [r3, #48]
  47 0012 196B     		ldr	r1, [r3, #48]
  48 0014 01F00101 		and	r1, r1, #1
  49 0018 0191     		str	r1, [sp, #4]
  50 001a 0199     		ldr	r1, [sp, #4]
  51              	.LBE2:
  52              	.LBB3:
 338:Src/main.c    ****     __HAL_RCC_GPIOB_CLK_ENABLE();
  53              		.loc 1 338 0
  54 001c 0292     		str	r2, [sp, #8]
  55 001e 196B     		ldr	r1, [r3, #48]
  56 0020 41F00201 		orr	r1, r1, #2
  57 0024 1963     		str	r1, [r3, #48]
  58 0026 1B6B     		ldr	r3, [r3, #48]
  59 0028 03F00203 		and	r3, r3, #2
  60 002c 0293     		str	r3, [sp, #8]
  61 002e 029B     		ldr	r3, [sp, #8]
  62              	.LBE3:
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccecpAI2.s 			page 8


 339:Src/main.c    **** 
 340:Src/main.c    ****     /*Configure GPIO pins : QRD_RIGHT_Pin QRD_LEFT_Pin */
 341:Src/main.c    ****     GPIO_InitStruct.Pin = QRD_RIGHT_Pin|QRD_LEFT_Pin;
  63              		.loc 1 341 0
  64 0030 C023     		movs	r3, #192
  65 0032 0393     		str	r3, [sp, #12]
 342:Src/main.c    ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
  66              		.loc 1 342 0
  67 0034 0492     		str	r2, [sp, #16]
 343:Src/main.c    ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
  68              		.loc 1 343 0
  69 0036 0123     		movs	r3, #1
  70 0038 0593     		str	r3, [sp, #20]
 344:Src/main.c    ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  71              		.loc 1 344 0
  72 003a 0448     		ldr	r0, .L3+4
  73 003c 03A9     		add	r1, sp, #12
  74 003e FFF7FEFF 		bl	HAL_GPIO_Init
  75              	.LVL0:
 345:Src/main.c    **** 
 346:Src/main.c    **** }
  76              		.loc 1 346 0
  77 0042 09B0     		add	sp, sp, #36
  78              	.LCFI2:
  79              		.cfi_def_cfa_offset 4
  80              		@ sp needed
  81 0044 5DF804FB 		ldr	pc, [sp], #4
  82              	.L4:
  83              		.align	2
  84              	.L3:
  85 0048 00380240 		.word	1073887232
  86 004c 00000240 		.word	1073872896
  87              		.cfi_endproc
  88              	.LFE127:
  90              		.section	.text.print,"ax",%progbits
  91              		.align	2
  92              		.global	print
  93              		.thumb
  94              		.thumb_func
  96              	print:
  97              	.LFB128:
 347:Src/main.c    **** 
 348:Src/main.c    **** /* USER CODE BEGIN 4 */
 349:Src/main.c    **** void print(char* msg){
  98              		.loc 1 349 0
  99              		.cfi_startproc
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              	.LVL1:
 103 0000 10B5     		push	{r4, lr}
 104              	.LCFI3:
 105              		.cfi_def_cfa_offset 8
 106              		.cfi_offset 4, -8
 107              		.cfi_offset 14, -4
 108 0002 0446     		mov	r4, r0
 350:Src/main.c    ****     ssd1306_Fill(Black);
 109              		.loc 1 350 0
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccecpAI2.s 			page 9


 110 0004 0020     		movs	r0, #0
 111              	.LVL2:
 112 0006 FFF7FEFF 		bl	ssd1306_Fill
 113              	.LVL3:
 351:Src/main.c    ****     ssd1306_UpdateScreen();
 114              		.loc 1 351 0
 115 000a FFF7FEFF 		bl	ssd1306_UpdateScreen
 116              	.LVL4:
 352:Src/main.c    ****     ssd1306_SetCursor(0,0);
 117              		.loc 1 352 0
 118 000e 0020     		movs	r0, #0
 119 0010 0146     		mov	r1, r0
 120 0012 FFF7FEFF 		bl	ssd1306_SetCursor
 121              	.LVL5:
 353:Src/main.c    ****     ssd1306_WriteString(msg,Font_11x18,White);
 122              		.loc 1 353 0
 123 0016 054B     		ldr	r3, .L7
 124 0018 2046     		mov	r0, r4
 125 001a 93E80600 		ldmia	r3, {r1, r2}
 126 001e 0123     		movs	r3, #1
 127 0020 FFF7FEFF 		bl	ssd1306_WriteString
 128              	.LVL6:
 354:Src/main.c    ****     ssd1306_UpdateScreen();
 129              		.loc 1 354 0
 130 0024 FFF7FEFF 		bl	ssd1306_UpdateScreen
 131              	.LVL7:
 132 0028 10BD     		pop	{r4, pc}
 133              	.LVL8:
 134              	.L8:
 135 002a 00BF     		.align	2
 136              	.L7:
 137 002c 00000000 		.word	Font_11x18
 138              		.cfi_endproc
 139              	.LFE128:
 141              		.section	.text._Error_Handler,"ax",%progbits
 142              		.align	2
 143              		.global	_Error_Handler
 144              		.thumb
 145              		.thumb_func
 147              	_Error_Handler:
 148              	.LFB129:
 355:Src/main.c    **** }
 356:Src/main.c    **** 
 357:Src/main.c    **** /* USER CODE END 4 */
 358:Src/main.c    **** 
 359:Src/main.c    **** /**
 360:Src/main.c    ****  * @brief  This function is executed in case of error occurrence.
 361:Src/main.c    ****  * @param  file: The file name as string.
 362:Src/main.c    ****  * @param  line: The line in file as a number.
 363:Src/main.c    ****  * @retval None
 364:Src/main.c    ****  */
 365:Src/main.c    **** void _Error_Handler(char *file, int line)
 366:Src/main.c    **** {
 149              		.loc 1 366 0
 150              		.cfi_startproc
 151              		@ Volatile: function does not return.
 152              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccecpAI2.s 			page 10


 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		@ link register save eliminated.
 155              	.LVL9:
 156              	.L10:
 367:Src/main.c    ****     /* USER CODE BEGIN Error_Handler_Debug */
 368:Src/main.c    ****     /* User can add his own implementation to report the HAL error return state */
 369:Src/main.c    ****     while(1)
 370:Src/main.c    ****     {
 371:Src/main.c    ****     }
 157              		.loc 1 371 0 discriminator 1
 158 0000 FEE7     		b	.L10
 159              		.cfi_endproc
 160              	.LFE129:
 162 0002 00BF     		.section	.text.MX_I2C1_Init,"ax",%progbits
 163              		.align	2
 164              		.thumb
 165              		.thumb_func
 167              	MX_I2C1_Init:
 168              	.LFB125:
 225:Src/main.c    **** 
 169              		.loc 1 225 0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173 0000 08B5     		push	{r3, lr}
 174              	.LCFI4:
 175              		.cfi_def_cfa_offset 8
 176              		.cfi_offset 3, -8
 177              		.cfi_offset 14, -4
 227:Src/main.c    ****     hi2c1.Init.ClockSpeed = 100000;
 178              		.loc 1 227 0
 179 0002 0B48     		ldr	r0, .L14
 180 0004 0B4B     		ldr	r3, .L14+4
 181 0006 0360     		str	r3, [r0]
 228:Src/main.c    ****     hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 182              		.loc 1 228 0
 183 0008 0B4B     		ldr	r3, .L14+8
 184 000a 4360     		str	r3, [r0, #4]
 229:Src/main.c    ****     hi2c1.Init.OwnAddress1 = 0;
 185              		.loc 1 229 0
 186 000c 0023     		movs	r3, #0
 187 000e 8360     		str	r3, [r0, #8]
 230:Src/main.c    ****     hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 188              		.loc 1 230 0
 189 0010 C360     		str	r3, [r0, #12]
 231:Src/main.c    ****     hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 190              		.loc 1 231 0
 191 0012 4FF48042 		mov	r2, #16384
 192 0016 0261     		str	r2, [r0, #16]
 232:Src/main.c    ****     hi2c1.Init.OwnAddress2 = 0;
 193              		.loc 1 232 0
 194 0018 4361     		str	r3, [r0, #20]
 233:Src/main.c    ****     hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 195              		.loc 1 233 0
 196 001a 8361     		str	r3, [r0, #24]
 234:Src/main.c    ****     hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 197              		.loc 1 234 0
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccecpAI2.s 			page 11


 198 001c C361     		str	r3, [r0, #28]
 235:Src/main.c    ****     if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 199              		.loc 1 235 0
 200 001e 0362     		str	r3, [r0, #32]
 236:Src/main.c    ****     {
 201              		.loc 1 236 0
 202 0020 FFF7FEFF 		bl	HAL_I2C_Init
 203              	.LVL10:
 204 0024 18B1     		cbz	r0, .L11
 238:Src/main.c    ****     }
 205              		.loc 1 238 0
 206 0026 0548     		ldr	r0, .L14+12
 207 0028 EE21     		movs	r1, #238
 208 002a FFF7FEFF 		bl	_Error_Handler
 209              	.LVL11:
 210              	.L11:
 211 002e 08BD     		pop	{r3, pc}
 212              	.L15:
 213              		.align	2
 214              	.L14:
 215 0030 00000000 		.word	hi2c1
 216 0034 00540040 		.word	1073763328
 217 0038 A0860100 		.word	100000
 218 003c 00000000 		.word	.LC0
 219              		.cfi_endproc
 220              	.LFE125:
 222              		.section	.text.MX_TIM1_Init,"ax",%progbits
 223              		.align	2
 224              		.thumb
 225              		.thumb_func
 227              	MX_TIM1_Init:
 228              	.LFB126:
 245:Src/main.c    **** 
 229              		.loc 1 245 0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 80
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233 0000 00B5     		push	{lr}
 234              	.LCFI5:
 235              		.cfi_def_cfa_offset 4
 236              		.cfi_offset 14, -4
 237 0002 95B0     		sub	sp, sp, #84
 238              	.LCFI6:
 239              		.cfi_def_cfa_offset 88
 252:Src/main.c    ****     htim1.Init.Prescaler = 0;
 240              		.loc 1 252 0
 241 0004 4148     		ldr	r0, .L27
 242 0006 424B     		ldr	r3, .L27+4
 243 0008 0360     		str	r3, [r0]
 253:Src/main.c    ****     htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 244              		.loc 1 253 0
 245 000a 0023     		movs	r3, #0
 246 000c 4360     		str	r3, [r0, #4]
 254:Src/main.c    ****     htim1.Init.Period = MOTOR_SPEED;
 247              		.loc 1 254 0
 248 000e 8360     		str	r3, [r0, #8]
 255:Src/main.c    ****     htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccecpAI2.s 			page 12


 249              		.loc 1 255 0
 250 0010 6422     		movs	r2, #100
 251 0012 C260     		str	r2, [r0, #12]
 256:Src/main.c    ****     htim1.Init.RepetitionCounter = 0;
 252              		.loc 1 256 0
 253 0014 0361     		str	r3, [r0, #16]
 257:Src/main.c    ****     if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 254              		.loc 1 257 0
 255 0016 4361     		str	r3, [r0, #20]
 258:Src/main.c    ****     {
 256              		.loc 1 258 0
 257 0018 FFF7FEFF 		bl	HAL_TIM_Base_Init
 258              	.LVL12:
 259 001c 20B1     		cbz	r0, .L17
 260:Src/main.c    ****     }
 260              		.loc 1 260 0
 261 001e 3D48     		ldr	r0, .L27+8
 262 0020 4FF48271 		mov	r1, #260
 263 0024 FFF7FEFF 		bl	_Error_Handler
 264              	.LVL13:
 265              	.L17:
 263:Src/main.c    ****     if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 266              		.loc 1 263 0
 267 0028 14A9     		add	r1, sp, #80
 268 002a 4FF48053 		mov	r3, #4096
 269 002e 41F8103D 		str	r3, [r1, #-16]!
 264:Src/main.c    ****     {
 270              		.loc 1 264 0
 271 0032 3648     		ldr	r0, .L27
 272 0034 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 273              	.LVL14:
 274 0038 20B1     		cbz	r0, .L18
 266:Src/main.c    ****     }
 275              		.loc 1 266 0
 276 003a 3648     		ldr	r0, .L27+8
 277 003c 4FF48571 		mov	r1, #266
 278 0040 FFF7FEFF 		bl	_Error_Handler
 279              	.LVL15:
 280              	.L18:
 269:Src/main.c    ****     {
 281              		.loc 1 269 0
 282 0044 3148     		ldr	r0, .L27
 283 0046 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 284              	.LVL16:
 285 004a 20B1     		cbz	r0, .L19
 271:Src/main.c    ****     }
 286              		.loc 1 271 0
 287 004c 3148     		ldr	r0, .L27+8
 288 004e 40F20F11 		movw	r1, #271
 289 0052 FFF7FEFF 		bl	_Error_Handler
 290              	.LVL17:
 291              	.L19:
 274:Src/main.c    ****     sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 292              		.loc 1 274 0
 293 0056 0023     		movs	r3, #0
 294 0058 0E93     		str	r3, [sp, #56]
 275:Src/main.c    ****     if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccecpAI2.s 			page 13


 295              		.loc 1 275 0
 296 005a 0F93     		str	r3, [sp, #60]
 276:Src/main.c    ****     {
 297              		.loc 1 276 0
 298 005c 2B48     		ldr	r0, .L27
 299 005e 0EA9     		add	r1, sp, #56
 300 0060 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 301              	.LVL18:
 302 0064 20B1     		cbz	r0, .L20
 278:Src/main.c    ****     }
 303              		.loc 1 278 0
 304 0066 2B48     		ldr	r0, .L27+8
 305 0068 4FF48B71 		mov	r1, #278
 306 006c FFF7FEFF 		bl	_Error_Handler
 307              	.LVL19:
 308              	.L20:
 281:Src/main.c    ****     sConfigOC.Pulse = 0;
 309              		.loc 1 281 0
 310 0070 6023     		movs	r3, #96
 311 0072 0793     		str	r3, [sp, #28]
 282:Src/main.c    ****     sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 312              		.loc 1 282 0
 313 0074 0022     		movs	r2, #0
 314 0076 0892     		str	r2, [sp, #32]
 283:Src/main.c    ****     sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 315              		.loc 1 283 0
 316 0078 0992     		str	r2, [sp, #36]
 284:Src/main.c    ****     sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 317              		.loc 1 284 0
 318 007a 0A92     		str	r2, [sp, #40]
 285:Src/main.c    ****     sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 319              		.loc 1 285 0
 320 007c 0B92     		str	r2, [sp, #44]
 286:Src/main.c    ****     sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 321              		.loc 1 286 0
 322 007e 0C92     		str	r2, [sp, #48]
 287:Src/main.c    ****     if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 323              		.loc 1 287 0
 324 0080 0D92     		str	r2, [sp, #52]
 288:Src/main.c    ****     {
 325              		.loc 1 288 0
 326 0082 2248     		ldr	r0, .L27
 327 0084 07A9     		add	r1, sp, #28
 328 0086 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 329              	.LVL20:
 330 008a 20B1     		cbz	r0, .L21
 290:Src/main.c    ****     }
 331              		.loc 1 290 0
 332 008c 2148     		ldr	r0, .L27+8
 333 008e 4FF49171 		mov	r1, #290
 334 0092 FFF7FEFF 		bl	_Error_Handler
 335              	.LVL21:
 336              	.L21:
 293:Src/main.c    ****     {
 337              		.loc 1 293 0
 338 0096 1D48     		ldr	r0, .L27
 339 0098 07A9     		add	r1, sp, #28
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccecpAI2.s 			page 14


 340 009a 0422     		movs	r2, #4
 341 009c FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 342              	.LVL22:
 343 00a0 20B1     		cbz	r0, .L22
 295:Src/main.c    ****     }
 344              		.loc 1 295 0
 345 00a2 1C48     		ldr	r0, .L27+8
 346 00a4 40F22711 		movw	r1, #295
 347 00a8 FFF7FEFF 		bl	_Error_Handler
 348              	.LVL23:
 349              	.L22:
 298:Src/main.c    ****     {
 350              		.loc 1 298 0
 351 00ac 1748     		ldr	r0, .L27
 352 00ae 07A9     		add	r1, sp, #28
 353 00b0 0822     		movs	r2, #8
 354 00b2 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 355              	.LVL24:
 356 00b6 20B1     		cbz	r0, .L23
 300:Src/main.c    ****     }
 357              		.loc 1 300 0
 358 00b8 1648     		ldr	r0, .L27+8
 359 00ba 4FF49671 		mov	r1, #300
 360 00be FFF7FEFF 		bl	_Error_Handler
 361              	.LVL25:
 362              	.L23:
 303:Src/main.c    ****     {
 363              		.loc 1 303 0
 364 00c2 1248     		ldr	r0, .L27
 365 00c4 07A9     		add	r1, sp, #28
 366 00c6 0C22     		movs	r2, #12
 367 00c8 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 368              	.LVL26:
 369 00cc 20B1     		cbz	r0, .L24
 305:Src/main.c    ****     }
 370              		.loc 1 305 0
 371 00ce 1148     		ldr	r0, .L27+8
 372 00d0 40F23111 		movw	r1, #305
 373 00d4 FFF7FEFF 		bl	_Error_Handler
 374              	.LVL27:
 375              	.L24:
 308:Src/main.c    ****     sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 376              		.loc 1 308 0
 377 00d8 0023     		movs	r3, #0
 378 00da 0093     		str	r3, [sp]
 309:Src/main.c    ****     sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 379              		.loc 1 309 0
 380 00dc 0193     		str	r3, [sp, #4]
 310:Src/main.c    ****     sBreakDeadTimeConfig.DeadTime = 0;
 381              		.loc 1 310 0
 382 00de 0293     		str	r3, [sp, #8]
 311:Src/main.c    ****     sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 383              		.loc 1 311 0
 384 00e0 0393     		str	r3, [sp, #12]
 312:Src/main.c    ****     sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 385              		.loc 1 312 0
 386 00e2 0493     		str	r3, [sp, #16]
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccecpAI2.s 			page 15


 313:Src/main.c    ****     sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 387              		.loc 1 313 0
 388 00e4 4FF40052 		mov	r2, #8192
 389 00e8 0592     		str	r2, [sp, #20]
 314:Src/main.c    ****     if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 390              		.loc 1 314 0
 391 00ea 0693     		str	r3, [sp, #24]
 315:Src/main.c    ****     {
 392              		.loc 1 315 0
 393 00ec 0748     		ldr	r0, .L27
 394 00ee 6946     		mov	r1, sp
 395 00f0 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 396              	.LVL28:
 397 00f4 20B1     		cbz	r0, .L25
 317:Src/main.c    ****     }
 398              		.loc 1 317 0
 399 00f6 0748     		ldr	r0, .L27+8
 400 00f8 40F23D11 		movw	r1, #317
 401 00fc FFF7FEFF 		bl	_Error_Handler
 402              	.LVL29:
 403              	.L25:
 320:Src/main.c    **** 
 404              		.loc 1 320 0
 405 0100 0248     		ldr	r0, .L27
 406 0102 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 407              	.LVL30:
 322:Src/main.c    **** 
 408              		.loc 1 322 0
 409 0106 15B0     		add	sp, sp, #84
 410              	.LCFI7:
 411              		.cfi_def_cfa_offset 4
 412              		@ sp needed
 413 0108 5DF804FB 		ldr	pc, [sp], #4
 414              	.L28:
 415              		.align	2
 416              	.L27:
 417 010c 00000000 		.word	htim1
 418 0110 00000140 		.word	1073807360
 419 0114 00000000 		.word	.LC0
 420              		.cfi_endproc
 421              	.LFE126:
 423              		.section	.text.SystemClock_Config,"ax",%progbits
 424              		.align	2
 425              		.global	SystemClock_Config
 426              		.thumb
 427              		.thumb_func
 429              	SystemClock_Config:
 430              	.LFB124:
 175:Src/main.c    **** 
 431              		.loc 1 175 0
 432              		.cfi_startproc
 433              		@ args = 0, pretend = 0, frame = 80
 434              		@ frame_needed = 0, uses_anonymous_args = 0
 435 0000 00B5     		push	{lr}
 436              	.LCFI8:
 437              		.cfi_def_cfa_offset 4
 438              		.cfi_offset 14, -4
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccecpAI2.s 			page 16


 439 0002 95B0     		sub	sp, sp, #84
 440              	.LCFI9:
 441              		.cfi_def_cfa_offset 88
 442              	.LBB4:
 182:Src/main.c    **** 
 443              		.loc 1 182 0
 444 0004 0022     		movs	r2, #0
 445 0006 0192     		str	r2, [sp, #4]
 446 0008 244B     		ldr	r3, .L33
 447 000a 196C     		ldr	r1, [r3, #64]
 448 000c 41F08051 		orr	r1, r1, #268435456
 449 0010 1964     		str	r1, [r3, #64]
 450 0012 1B6C     		ldr	r3, [r3, #64]
 451 0014 03F08053 		and	r3, r3, #268435456
 452 0018 0193     		str	r3, [sp, #4]
 453 001a 019B     		ldr	r3, [sp, #4]
 454              	.LBE4:
 455              	.LBB5:
 184:Src/main.c    **** 
 456              		.loc 1 184 0
 457 001c 0292     		str	r2, [sp, #8]
 458 001e 2049     		ldr	r1, .L33+4
 459 0020 0B68     		ldr	r3, [r1]
 460 0022 23F44043 		bic	r3, r3, #49152
 461 0026 43F40043 		orr	r3, r3, #32768
 462 002a 0B60     		str	r3, [r1]
 463 002c 0B68     		ldr	r3, [r1]
 464 002e 03F44043 		and	r3, r3, #49152
 465 0032 0293     		str	r3, [sp, #8]
 466 0034 029B     		ldr	r3, [sp, #8]
 467              	.LBE5:
 188:Src/main.c    ****     RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 468              		.loc 1 188 0
 469 0036 0223     		movs	r3, #2
 470 0038 0893     		str	r3, [sp, #32]
 189:Src/main.c    ****     RCC_OscInitStruct.HSICalibrationValue = 16;
 471              		.loc 1 189 0
 472 003a 0123     		movs	r3, #1
 473 003c 0B93     		str	r3, [sp, #44]
 190:Src/main.c    ****     RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 474              		.loc 1 190 0
 475 003e 1023     		movs	r3, #16
 476 0040 0C93     		str	r3, [sp, #48]
 191:Src/main.c    ****     if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 477              		.loc 1 191 0
 478 0042 0E92     		str	r2, [sp, #56]
 192:Src/main.c    ****     {
 479              		.loc 1 192 0
 480 0044 08A8     		add	r0, sp, #32
 481 0046 FFF7FEFF 		bl	HAL_RCC_OscConfig
 482              	.LVL31:
 483 004a 18B1     		cbz	r0, .L30
 194:Src/main.c    ****     }
 484              		.loc 1 194 0
 485 004c 1548     		ldr	r0, .L33+8
 486 004e C221     		movs	r1, #194
 487 0050 FFF7FEFF 		bl	_Error_Handler
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccecpAI2.s 			page 17


 488              	.LVL32:
 489              	.L30:
 199:Src/main.c    ****         |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 490              		.loc 1 199 0
 491 0054 0F23     		movs	r3, #15
 492 0056 0393     		str	r3, [sp, #12]
 201:Src/main.c    ****     RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 493              		.loc 1 201 0
 494 0058 0021     		movs	r1, #0
 495 005a 0491     		str	r1, [sp, #16]
 202:Src/main.c    ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 496              		.loc 1 202 0
 497 005c 0591     		str	r1, [sp, #20]
 203:Src/main.c    ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 498              		.loc 1 203 0
 499 005e 0691     		str	r1, [sp, #24]
 204:Src/main.c    **** 
 500              		.loc 1 204 0
 501 0060 0791     		str	r1, [sp, #28]
 206:Src/main.c    ****     {
 502              		.loc 1 206 0
 503 0062 03A8     		add	r0, sp, #12
 504 0064 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 505              	.LVL33:
 506 0068 18B1     		cbz	r0, .L31
 208:Src/main.c    ****     }
 507              		.loc 1 208 0
 508 006a 0E48     		ldr	r0, .L33+8
 509 006c D021     		movs	r1, #208
 510 006e FFF7FEFF 		bl	_Error_Handler
 511              	.LVL34:
 512              	.L31:
 213:Src/main.c    **** 
 513              		.loc 1 213 0
 514 0072 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 515              	.LVL35:
 516 0076 0C4B     		ldr	r3, .L33+12
 517 0078 A3FB0030 		umull	r3, r0, r3, r0
 518 007c 8009     		lsrs	r0, r0, #6
 519 007e FFF7FEFF 		bl	HAL_SYSTICK_Config
 520              	.LVL36:
 217:Src/main.c    **** 
 521              		.loc 1 217 0
 522 0082 0420     		movs	r0, #4
 523 0084 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 524              	.LVL37:
 220:Src/main.c    **** }
 525              		.loc 1 220 0
 526 0088 4FF0FF30 		mov	r0, #-1
 527 008c 0021     		movs	r1, #0
 528 008e 0A46     		mov	r2, r1
 529 0090 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 530              	.LVL38:
 221:Src/main.c    **** 
 531              		.loc 1 221 0
 532 0094 15B0     		add	sp, sp, #84
 533              	.LCFI10:
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccecpAI2.s 			page 18


 534              		.cfi_def_cfa_offset 4
 535              		@ sp needed
 536 0096 5DF804FB 		ldr	pc, [sp], #4
 537              	.L34:
 538 009a 00BF     		.align	2
 539              	.L33:
 540 009c 00380240 		.word	1073887232
 541 00a0 00700040 		.word	1073770496
 542 00a4 00000000 		.word	.LC0
 543 00a8 D34D6210 		.word	274877907
 544              		.cfi_endproc
 545              	.LFE124:
 547              		.section	.text.main,"ax",%progbits
 548              		.align	2
 549              		.global	main
 550              		.thumb
 551              		.thumb_func
 553              	main:
 554              	.LFB123:
  87:Src/main.c    ****     /* USER CODE BEGIN 1 */
 555              		.loc 1 87 0
 556              		.cfi_startproc
 557              		@ args = 0, pretend = 0, frame = 0
 558              		@ frame_needed = 0, uses_anonymous_args = 0
 559 0000 70B5     		push	{r4, r5, r6, lr}
 560              	.LCFI11:
 561              		.cfi_def_cfa_offset 16
 562              		.cfi_offset 4, -16
 563              		.cfi_offset 5, -12
 564              		.cfi_offset 6, -8
 565              		.cfi_offset 14, -4
  95:Src/main.c    **** 
 566              		.loc 1 95 0
 567 0002 FFF7FEFF 		bl	HAL_Init
 568              	.LVL39:
 102:Src/main.c    **** 
 569              		.loc 1 102 0
 570 0006 FFF7FEFF 		bl	SystemClock_Config
 571              	.LVL40:
 109:Src/main.c    ****     MX_I2C1_Init();
 572              		.loc 1 109 0
 573 000a FFF7FEFF 		bl	MX_GPIO_Init
 574              	.LVL41:
 110:Src/main.c    ****     MX_TIM1_Init();
 575              		.loc 1 110 0
 576 000e FFF7FEFF 		bl	MX_I2C1_Init
 577              	.LVL42:
 111:Src/main.c    ****     ssd1306_Init();
 578              		.loc 1 111 0
 579 0012 FFF7FEFF 		bl	MX_TIM1_Init
 580              	.LVL43:
 112:Src/main.c    ****     /* USER CODE BEGIN 2 */
 581              		.loc 1 112 0
 582 0016 FFF7FEFF 		bl	ssd1306_Init
 583              	.LVL44:
 114:Src/main.c    ****     HAL_TIM_PWM_Start(&htim1, MOTOR_RIGHT_FORWARD);
 584              		.loc 1 114 0
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccecpAI2.s 			page 19


 585 001a 2A48     		ldr	r0, .L39
 586 001c FFF7FEFF 		bl	print
 587              	.LVL45:
 115:Src/main.c    ****     HAL_TIM_PWM_Start(&htim1, MOTOR_RIGHT_BACKWARD);
 588              		.loc 1 115 0
 589 0020 294D     		ldr	r5, .L39+4
 590 0022 2846     		mov	r0, r5
 591 0024 0821     		movs	r1, #8
 592 0026 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 593              	.LVL46:
 116:Src/main.c    ****     HAL_TIM_PWM_Start(&htim1, MOTOR_LEFT_FORWARD);
 594              		.loc 1 116 0
 595 002a 2846     		mov	r0, r5
 596 002c 0C21     		movs	r1, #12
 597 002e FFF7FEFF 		bl	HAL_TIM_PWM_Start
 598              	.LVL47:
 117:Src/main.c    ****     HAL_TIM_PWM_Start(&htim1, MOTOR_LEFT_BACKWARD);
 599              		.loc 1 117 0
 600 0032 2846     		mov	r0, r5
 601 0034 0021     		movs	r1, #0
 602 0036 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 603              	.LVL48:
 118:Src/main.c    ****     //forward
 604              		.loc 1 118 0
 605 003a 2846     		mov	r0, r5
 606 003c 0421     		movs	r1, #4
 607 003e FFF7FEFF 		bl	HAL_TIM_PWM_Start
 608              	.LVL49:
 120:Src/main.c    ****     __HAL_TIM_SetCompare(&htim1, MOTOR_LEFT_FORWARD, 0.7*MOTOR_SPEED);
 609              		.loc 1 120 0
 610 0042 2248     		ldr	r0, .L39+8
 611 0044 FFF7FEFF 		bl	print
 612              	.LVL50:
 121:Src/main.c    ****     __HAL_TIM_SetCompare(&htim1, MOTOR_RIGHT_FORWARD, 0.7*MOTOR_SPEED);
 613              		.loc 1 121 0
 614 0048 2B68     		ldr	r3, [r5]
 615 004a 4626     		movs	r6, #70
 616 004c 5E63     		str	r6, [r3, #52]
 122:Src/main.c    ****     HAL_Delay(5000);
 617              		.loc 1 122 0
 618 004e DE63     		str	r6, [r3, #60]
 123:Src/main.c    ****     //backward
 619              		.loc 1 123 0
 620 0050 41F28830 		movw	r0, #5000
 621 0054 FFF7FEFF 		bl	HAL_Delay
 622              	.LVL51:
 125:Src/main.c    ****     __HAL_TIM_SetCompare(&htim1, MOTOR_LEFT_FORWARD, 0*MOTOR_SPEED);
 623              		.loc 1 125 0
 624 0058 1D48     		ldr	r0, .L39+12
 625 005a FFF7FEFF 		bl	print
 626              	.LVL52:
 126:Src/main.c    ****     __HAL_TIM_SetCompare(&htim1, MOTOR_RIGHT_FORWARD, 0*MOTOR_SPEED);
 627              		.loc 1 126 0
 628 005e 2B68     		ldr	r3, [r5]
 629 0060 0024     		movs	r4, #0
 630 0062 5C63     		str	r4, [r3, #52]
 127:Src/main.c    ****     __HAL_TIM_SetCompare(&htim1, MOTOR_RIGHT_BACKWARD, 0.7*MOTOR_SPEED);
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccecpAI2.s 			page 20


 631              		.loc 1 127 0
 632 0064 DC63     		str	r4, [r3, #60]
 128:Src/main.c    ****     __HAL_TIM_SetCompare(&htim1, MOTOR_LEFT_BACKWARD, 0.7*MOTOR_SPEED);
 633              		.loc 1 128 0
 634 0066 1E64     		str	r6, [r3, #64]
 129:Src/main.c    ****     HAL_Delay(5000);
 635              		.loc 1 129 0
 636 0068 9E63     		str	r6, [r3, #56]
 130:Src/main.c    ****     //turn
 637              		.loc 1 130 0
 638 006a 41F28830 		movw	r0, #5000
 639 006e FFF7FEFF 		bl	HAL_Delay
 640              	.LVL53:
 132:Src/main.c    ****     __HAL_TIM_SetCompare(&htim1, MOTOR_LEFT_BACKWARD, 0*MOTOR_SPEED);
 641              		.loc 1 132 0
 642 0072 1848     		ldr	r0, .L39+16
 643 0074 FFF7FEFF 		bl	print
 644              	.LVL54:
 133:Src/main.c    ****     __HAL_TIM_SetCompare(&htim1, MOTOR_RIGHT_FORWARD, 0*MOTOR_SPEED);
 645              		.loc 1 133 0
 646 0078 2B68     		ldr	r3, [r5]
 647 007a 9C63     		str	r4, [r3, #56]
 134:Src/main.c    ****     __HAL_TIM_SetCompare(&htim1, MOTOR_RIGHT_BACKWARD, 0.7*MOTOR_SPEED);
 648              		.loc 1 134 0
 649 007c DC63     		str	r4, [r3, #60]
 135:Src/main.c    ****     __HAL_TIM_SetCompare(&htim1, MOTOR_LEFT_FORWARD, 0.9*MOTOR_SPEED);
 650              		.loc 1 135 0
 651 007e 1E64     		str	r6, [r3, #64]
 136:Src/main.c    ****     HAL_Delay(5000);
 652              		.loc 1 136 0
 653 0080 5A26     		movs	r6, #90
 654 0082 5E63     		str	r6, [r3, #52]
 137:Src/main.c    ****     //spin
 655              		.loc 1 137 0
 656 0084 41F28830 		movw	r0, #5000
 657 0088 FFF7FEFF 		bl	HAL_Delay
 658              	.LVL55:
 139:Src/main.c    ****     __HAL_TIM_SetCompare(&htim1, MOTOR_RIGHT_FORWARD, 0*MOTOR_SPEED);
 659              		.loc 1 139 0
 660 008c 2B68     		ldr	r3, [r5]
 661 008e 5E63     		str	r6, [r3, #52]
 140:Src/main.c    ****     __HAL_TIM_SetCompare(&htim1, MOTOR_RIGHT_BACKWARD, 0.9*MOTOR_SPEED);
 662              		.loc 1 140 0
 663 0090 DC63     		str	r4, [r3, #60]
 141:Src/main.c    ****     __HAL_TIM_SetCompare(&htim1, MOTOR_LEFT_BACKWARD, 0*MOTOR_SPEED);
 664              		.loc 1 141 0
 665 0092 1E64     		str	r6, [r3, #64]
 142:Src/main.c    ****     HAL_Delay(5000);
 666              		.loc 1 142 0
 667 0094 9C63     		str	r4, [r3, #56]
 143:Src/main.c    **** 
 668              		.loc 1 143 0
 669 0096 41F28830 		movw	r0, #5000
 670 009a FFF7FEFF 		bl	HAL_Delay
 671              	.LVL56:
 146:Src/main.c    ****     __HAL_TIM_SetCompare(&htim1, MOTOR_RIGHT_BACKWARD, 0*MOTOR_SPEED);
 672              		.loc 1 146 0
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccecpAI2.s 			page 21


 673 009e 2B68     		ldr	r3, [r5]
 674 00a0 9C63     		str	r4, [r3, #56]
 147:Src/main.c    ****     print("Go boy");
 675              		.loc 1 147 0
 676 00a2 1C64     		str	r4, [r3, #64]
 148:Src/main.c    ****     /* USER CODE END 2 */
 677              		.loc 1 148 0
 678 00a4 0C48     		ldr	r0, .L39+20
 679 00a6 FFF7FEFF 		bl	print
 680              	.LVL57:
 681              	.L36:
 155:Src/main.c    ****             __HAL_TIM_SetCompare(&htim1, MOTOR_RIGHT_FORWARD, i);
 682              		.loc 1 155 0
 683 00aa 642C     		cmp	r4, #100
 684 00ac FDDC     		bgt	.L36
 156:Src/main.c    ****             __HAL_TIM_SetCompare(&htim1, MOTOR_LEFT_FORWARD, i);
 685              		.loc 1 156 0
 686 00ae 064B     		ldr	r3, .L39+4
 687 00b0 1B68     		ldr	r3, [r3]
 688 00b2 DC63     		str	r4, [r3, #60]
 157:Src/main.c    ****             HAL_Delay(500);
 689              		.loc 1 157 0
 690 00b4 5C63     		str	r4, [r3, #52]
 158:Src/main.c    ****             i++;
 691              		.loc 1 158 0
 692 00b6 4FF4FA70 		mov	r0, #500
 693 00ba FFF7FEFF 		bl	HAL_Delay
 694              	.LVL58:
 159:Src/main.c    ****         }
 695              		.loc 1 159 0
 696 00be 0134     		adds	r4, r4, #1
 697              	.LVL59:
 698 00c0 F3E7     		b	.L36
 699              	.L40:
 700 00c2 00BF     		.align	2
 701              	.L39:
 702 00c4 0C000000 		.word	.LC1
 703 00c8 00000000 		.word	htim1
 704 00cc 18000000 		.word	.LC2
 705 00d0 24000000 		.word	.LC3
 706 00d4 34000000 		.word	.LC4
 707 00d8 44000000 		.word	.LC5
 708              		.cfi_endproc
 709              	.LFE123:
 711              		.comm	htim1,60,4
 712              		.comm	hi2c1,84,4
 713              		.section	.rodata.str1.4,"aMS",%progbits,1
 714              		.align	2
 715              	.LC0:
 716 0000 5372632F 		.ascii	"Src/main.c\000"
 716      6D61696E 
 716      2E6300
 717 000b 00       		.space	1
 718              	.LC1:
 719 000c 53746172 		.ascii	"Starting...\000"
 719      74696E67 
 719      2E2E2E00 
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccecpAI2.s 			page 22


 720              	.LC2:
 721 0018 4C20302E 		.ascii	"L 0.7 R 0.7\000"
 721      37205220 
 721      302E3700 
 722              	.LC3:
 723 0024 4C202D30 		.ascii	"L -0.7 R -0.7\000"
 723      2E372052 
 723      202D302E 
 723      3700
 724 0032 0000     		.space	2
 725              	.LC4:
 726 0034 4C20302E 		.ascii	"L 0.9 R -0.7\000"
 726      39205220 
 726      2D302E37 
 726      00
 727 0041 000000   		.space	3
 728              	.LC5:
 729 0044 476F2062 		.ascii	"Go boy\000"
 729      6F7900
 730              		.text
 731              	.Letext0:
 732              		.file 2 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 733              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/machine/_default_types
 734              		.file 4 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/sys/_stdint.h"
 735              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 736              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 737              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 738              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 739              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 740              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 741              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 742              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 743              		.file 13 "Inc/fonts.h"
 744              		.file 14 "Inc/ssd1306.h"
 745              		.file 15 "Drivers/CMSIS/Include/core_cm4.h"
 746              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 747              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccecpAI2.s 			page 23


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccecpAI2.s:21     .text.MX_GPIO_Init:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccecpAI2.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccecpAI2.s:85     .text.MX_GPIO_Init:0000000000000048 $d
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccecpAI2.s:91     .text.print:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccecpAI2.s:96     .text.print:0000000000000000 print
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccecpAI2.s:137    .text.print:000000000000002c $d
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccecpAI2.s:142    .text._Error_Handler:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccecpAI2.s:147    .text._Error_Handler:0000000000000000 _Error_Handler
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccecpAI2.s:163    .text.MX_I2C1_Init:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccecpAI2.s:167    .text.MX_I2C1_Init:0000000000000000 MX_I2C1_Init
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccecpAI2.s:215    .text.MX_I2C1_Init:0000000000000030 $d
                            *COM*:0000000000000054 hi2c1
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccecpAI2.s:223    .text.MX_TIM1_Init:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccecpAI2.s:227    .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccecpAI2.s:417    .text.MX_TIM1_Init:000000000000010c $d
                            *COM*:000000000000003c htim1
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccecpAI2.s:424    .text.SystemClock_Config:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccecpAI2.s:429    .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccecpAI2.s:540    .text.SystemClock_Config:000000000000009c $d
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccecpAI2.s:548    .text.main:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccecpAI2.s:553    .text.main:0000000000000000 main
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccecpAI2.s:702    .text.main:00000000000000c4 $d
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccecpAI2.s:714    .rodata.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_Init
ssd1306_Fill
ssd1306_UpdateScreen
ssd1306_SetCursor
ssd1306_WriteString
Font_11x18
HAL_I2C_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
ssd1306_Init
HAL_TIM_PWM_Start
HAL_Delay
