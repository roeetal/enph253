ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//cce7NCdi.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"stm32f4xx_it.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.NMI_Handler,"ax",%progbits
  21              		.align	2
  22              		.global	NMI_Handler
  23              		.thumb
  24              		.thumb_func
  26              	NMI_Handler:
  27              	.LFB123:
  28              		.file 1 "Src/stm32f4xx_it.c"
   1:Src/stm32f4xx_it.c **** /**
   2:Src/stm32f4xx_it.c ****  ******************************************************************************
   3:Src/stm32f4xx_it.c ****  * @file    stm32f4xx_it.c
   4:Src/stm32f4xx_it.c ****  * @brief   Interrupt Service Routines.
   5:Src/stm32f4xx_it.c ****  ******************************************************************************
   6:Src/stm32f4xx_it.c ****  *
   7:Src/stm32f4xx_it.c ****  * COPYRIGHT(c) 2018 STMicroelectronics
   8:Src/stm32f4xx_it.c ****  *
   9:Src/stm32f4xx_it.c ****  * Redistribution and use in source and binary forms, with or without modification,
  10:Src/stm32f4xx_it.c ****  * are permitted provided that the following conditions are met:
  11:Src/stm32f4xx_it.c ****  *   1. Redistributions of source code must retain the above copyright notice,
  12:Src/stm32f4xx_it.c ****  *      this list of conditions and the following disclaimer.
  13:Src/stm32f4xx_it.c ****  *   2. Redistributions in binary form must reproduce the above copyright notice,
  14:Src/stm32f4xx_it.c ****  *      this list of conditions and the following disclaimer in the documentation
  15:Src/stm32f4xx_it.c ****  *      and/or other materials provided with the distribution.
  16:Src/stm32f4xx_it.c ****  *   3. Neither the name of STMicroelectronics nor the names of its contributors
  17:Src/stm32f4xx_it.c ****  *      may be used to endorse or promote products derived from this software
  18:Src/stm32f4xx_it.c ****  *      without specific prior written permission.
  19:Src/stm32f4xx_it.c ****  *
  20:Src/stm32f4xx_it.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:Src/stm32f4xx_it.c ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:Src/stm32f4xx_it.c ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  23:Src/stm32f4xx_it.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  24:Src/stm32f4xx_it.c ****  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  25:Src/stm32f4xx_it.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  26:Src/stm32f4xx_it.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  27:Src/stm32f4xx_it.c ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  28:Src/stm32f4xx_it.c ****  * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  29:Src/stm32f4xx_it.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:Src/stm32f4xx_it.c ****  *
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//cce7NCdi.s 			page 2


  31:Src/stm32f4xx_it.c ****  ******************************************************************************
  32:Src/stm32f4xx_it.c ****  */
  33:Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  34:Src/stm32f4xx_it.c **** #include "stm32f4xx_hal.h"
  35:Src/stm32f4xx_it.c **** #include "stm32f4xx.h"
  36:Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  37:Src/stm32f4xx_it.c **** 
  38:Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  39:Src/stm32f4xx_it.c **** 
  40:Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  41:Src/stm32f4xx_it.c **** 
  42:Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  43:Src/stm32f4xx_it.c **** 
  44:Src/stm32f4xx_it.c **** /******************************************************************************/
  45:Src/stm32f4xx_it.c **** /*            Cortex-M4 Processor Interruption and Exception Handlers         */ 
  46:Src/stm32f4xx_it.c **** /******************************************************************************/
  47:Src/stm32f4xx_it.c **** 
  48:Src/stm32f4xx_it.c **** /**
  49:Src/stm32f4xx_it.c ****  * @brief This function handles Non maskable interrupt.
  50:Src/stm32f4xx_it.c ****  */
  51:Src/stm32f4xx_it.c **** void NMI_Handler(void)
  52:Src/stm32f4xx_it.c **** {
  29              		.loc 1 52 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE123:
  38 0002 00BF     		.section	.text.HardFault_Handler,"ax",%progbits
  39              		.align	2
  40              		.global	HardFault_Handler
  41              		.thumb
  42              		.thumb_func
  44              	HardFault_Handler:
  45              	.LFB124:
  53:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  54:Src/stm32f4xx_it.c **** 
  55:Src/stm32f4xx_it.c ****     /* USER CODE END NonMaskableInt_IRQn 0 */
  56:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  57:Src/stm32f4xx_it.c **** 
  58:Src/stm32f4xx_it.c ****     /* USER CODE END NonMaskableInt_IRQn 1 */
  59:Src/stm32f4xx_it.c **** }
  60:Src/stm32f4xx_it.c **** 
  61:Src/stm32f4xx_it.c **** /**
  62:Src/stm32f4xx_it.c ****  * @brief This function handles Hard fault interrupt.
  63:Src/stm32f4xx_it.c ****  */
  64:Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  65:Src/stm32f4xx_it.c **** {
  46              		.loc 1 65 0
  47              		.cfi_startproc
  48              		@ Volatile: function does not return.
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
  52              	.L3:
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//cce7NCdi.s 			page 3


  66:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN HardFault_IRQn 0 */
  67:Src/stm32f4xx_it.c **** 
  68:Src/stm32f4xx_it.c ****     /* USER CODE END HardFault_IRQn 0 */
  69:Src/stm32f4xx_it.c ****     while (1)
  70:Src/stm32f4xx_it.c ****     {
  71:Src/stm32f4xx_it.c ****         /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  72:Src/stm32f4xx_it.c ****         /* USER CODE END W1_HardFault_IRQn 0 */
  73:Src/stm32f4xx_it.c ****     }
  53              		.loc 1 73 0 discriminator 1
  54 0000 FEE7     		b	.L3
  55              		.cfi_endproc
  56              	.LFE124:
  58 0002 00BF     		.section	.text.MemManage_Handler,"ax",%progbits
  59              		.align	2
  60              		.global	MemManage_Handler
  61              		.thumb
  62              		.thumb_func
  64              	MemManage_Handler:
  65              	.LFB125:
  74:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN HardFault_IRQn 1 */
  75:Src/stm32f4xx_it.c **** 
  76:Src/stm32f4xx_it.c ****     /* USER CODE END HardFault_IRQn 1 */
  77:Src/stm32f4xx_it.c **** }
  78:Src/stm32f4xx_it.c **** 
  79:Src/stm32f4xx_it.c **** /**
  80:Src/stm32f4xx_it.c ****  * @brief This function handles Memory management fault.
  81:Src/stm32f4xx_it.c ****  */
  82:Src/stm32f4xx_it.c **** void MemManage_Handler(void)
  83:Src/stm32f4xx_it.c **** {
  66              		.loc 1 83 0
  67              		.cfi_startproc
  68              		@ Volatile: function does not return.
  69              		@ args = 0, pretend = 0, frame = 0
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71              		@ link register save eliminated.
  72              	.L5:
  84:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN MemoryManagement_IRQn 0 */
  85:Src/stm32f4xx_it.c **** 
  86:Src/stm32f4xx_it.c ****     /* USER CODE END MemoryManagement_IRQn 0 */
  87:Src/stm32f4xx_it.c ****     while (1)
  88:Src/stm32f4xx_it.c ****     {
  89:Src/stm32f4xx_it.c ****         /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
  90:Src/stm32f4xx_it.c ****         /* USER CODE END W1_MemoryManagement_IRQn 0 */
  91:Src/stm32f4xx_it.c ****     }
  73              		.loc 1 91 0 discriminator 1
  74 0000 FEE7     		b	.L5
  75              		.cfi_endproc
  76              	.LFE125:
  78 0002 00BF     		.section	.text.BusFault_Handler,"ax",%progbits
  79              		.align	2
  80              		.global	BusFault_Handler
  81              		.thumb
  82              		.thumb_func
  84              	BusFault_Handler:
  85              	.LFB126:
  92:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN MemoryManagement_IRQn 1 */
  93:Src/stm32f4xx_it.c **** 
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//cce7NCdi.s 			page 4


  94:Src/stm32f4xx_it.c ****     /* USER CODE END MemoryManagement_IRQn 1 */
  95:Src/stm32f4xx_it.c **** }
  96:Src/stm32f4xx_it.c **** 
  97:Src/stm32f4xx_it.c **** /**
  98:Src/stm32f4xx_it.c ****  * @brief This function handles Pre-fetch fault, memory access fault.
  99:Src/stm32f4xx_it.c ****  */
 100:Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 101:Src/stm32f4xx_it.c **** {
  86              		.loc 1 101 0
  87              		.cfi_startproc
  88              		@ Volatile: function does not return.
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              		@ link register save eliminated.
  92              	.L7:
 102:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN BusFault_IRQn 0 */
 103:Src/stm32f4xx_it.c **** 
 104:Src/stm32f4xx_it.c ****     /* USER CODE END BusFault_IRQn 0 */
 105:Src/stm32f4xx_it.c ****     while (1)
 106:Src/stm32f4xx_it.c ****     {
 107:Src/stm32f4xx_it.c ****         /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 108:Src/stm32f4xx_it.c ****         /* USER CODE END W1_BusFault_IRQn 0 */
 109:Src/stm32f4xx_it.c ****     }
  93              		.loc 1 109 0 discriminator 1
  94 0000 FEE7     		b	.L7
  95              		.cfi_endproc
  96              	.LFE126:
  98 0002 00BF     		.section	.text.UsageFault_Handler,"ax",%progbits
  99              		.align	2
 100              		.global	UsageFault_Handler
 101              		.thumb
 102              		.thumb_func
 104              	UsageFault_Handler:
 105              	.LFB127:
 110:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN BusFault_IRQn 1 */
 111:Src/stm32f4xx_it.c **** 
 112:Src/stm32f4xx_it.c ****     /* USER CODE END BusFault_IRQn 1 */
 113:Src/stm32f4xx_it.c **** }
 114:Src/stm32f4xx_it.c **** 
 115:Src/stm32f4xx_it.c **** /**
 116:Src/stm32f4xx_it.c ****  * @brief This function handles Undefined instruction or illegal state.
 117:Src/stm32f4xx_it.c ****  */
 118:Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 119:Src/stm32f4xx_it.c **** {
 106              		.loc 1 119 0
 107              		.cfi_startproc
 108              		@ Volatile: function does not return.
 109              		@ args = 0, pretend = 0, frame = 0
 110              		@ frame_needed = 0, uses_anonymous_args = 0
 111              		@ link register save eliminated.
 112              	.L9:
 120:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN UsageFault_IRQn 0 */
 121:Src/stm32f4xx_it.c **** 
 122:Src/stm32f4xx_it.c ****     /* USER CODE END UsageFault_IRQn 0 */
 123:Src/stm32f4xx_it.c ****     while (1)
 124:Src/stm32f4xx_it.c ****     {
 125:Src/stm32f4xx_it.c ****         /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//cce7NCdi.s 			page 5


 126:Src/stm32f4xx_it.c ****         /* USER CODE END W1_UsageFault_IRQn 0 */
 127:Src/stm32f4xx_it.c ****     }
 113              		.loc 1 127 0 discriminator 1
 114 0000 FEE7     		b	.L9
 115              		.cfi_endproc
 116              	.LFE127:
 118 0002 00BF     		.section	.text.SVC_Handler,"ax",%progbits
 119              		.align	2
 120              		.global	SVC_Handler
 121              		.thumb
 122              		.thumb_func
 124              	SVC_Handler:
 125              	.LFB128:
 128:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN UsageFault_IRQn 1 */
 129:Src/stm32f4xx_it.c **** 
 130:Src/stm32f4xx_it.c ****     /* USER CODE END UsageFault_IRQn 1 */
 131:Src/stm32f4xx_it.c **** }
 132:Src/stm32f4xx_it.c **** 
 133:Src/stm32f4xx_it.c **** /**
 134:Src/stm32f4xx_it.c ****  * @brief This function handles System service call via SWI instruction.
 135:Src/stm32f4xx_it.c ****  */
 136:Src/stm32f4xx_it.c **** void SVC_Handler(void)
 137:Src/stm32f4xx_it.c **** {
 126              		.loc 1 137 0
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130              		@ link register save eliminated.
 131 0000 7047     		bx	lr
 132              		.cfi_endproc
 133              	.LFE128:
 135 0002 00BF     		.section	.text.DebugMon_Handler,"ax",%progbits
 136              		.align	2
 137              		.global	DebugMon_Handler
 138              		.thumb
 139              		.thumb_func
 141              	DebugMon_Handler:
 142              	.LFB129:
 138:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN SVCall_IRQn 0 */
 139:Src/stm32f4xx_it.c **** 
 140:Src/stm32f4xx_it.c ****     /* USER CODE END SVCall_IRQn 0 */
 141:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN SVCall_IRQn 1 */
 142:Src/stm32f4xx_it.c **** 
 143:Src/stm32f4xx_it.c ****     /* USER CODE END SVCall_IRQn 1 */
 144:Src/stm32f4xx_it.c **** }
 145:Src/stm32f4xx_it.c **** 
 146:Src/stm32f4xx_it.c **** /**
 147:Src/stm32f4xx_it.c ****  * @brief This function handles Debug monitor.
 148:Src/stm32f4xx_it.c ****  */
 149:Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 150:Src/stm32f4xx_it.c **** {
 143              		.loc 1 150 0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147              		@ link register save eliminated.
 148 0000 7047     		bx	lr
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//cce7NCdi.s 			page 6


 149              		.cfi_endproc
 150              	.LFE129:
 152 0002 00BF     		.section	.text.PendSV_Handler,"ax",%progbits
 153              		.align	2
 154              		.global	PendSV_Handler
 155              		.thumb
 156              		.thumb_func
 158              	PendSV_Handler:
 159              	.LFB130:
 151:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 152:Src/stm32f4xx_it.c **** 
 153:Src/stm32f4xx_it.c ****     /* USER CODE END DebugMonitor_IRQn 0 */
 154:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 155:Src/stm32f4xx_it.c **** 
 156:Src/stm32f4xx_it.c ****     /* USER CODE END DebugMonitor_IRQn 1 */
 157:Src/stm32f4xx_it.c **** }
 158:Src/stm32f4xx_it.c **** 
 159:Src/stm32f4xx_it.c **** /**
 160:Src/stm32f4xx_it.c ****  * @brief This function handles Pendable request for system service.
 161:Src/stm32f4xx_it.c ****  */
 162:Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 163:Src/stm32f4xx_it.c **** {
 160              		.loc 1 163 0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 0, uses_anonymous_args = 0
 164              		@ link register save eliminated.
 165 0000 7047     		bx	lr
 166              		.cfi_endproc
 167              	.LFE130:
 169 0002 00BF     		.section	.text.SysTick_Handler,"ax",%progbits
 170              		.align	2
 171              		.global	SysTick_Handler
 172              		.thumb
 173              		.thumb_func
 175              	SysTick_Handler:
 176              	.LFB131:
 164:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN PendSV_IRQn 0 */
 165:Src/stm32f4xx_it.c **** 
 166:Src/stm32f4xx_it.c ****     /* USER CODE END PendSV_IRQn 0 */
 167:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN PendSV_IRQn 1 */
 168:Src/stm32f4xx_it.c **** 
 169:Src/stm32f4xx_it.c ****     /* USER CODE END PendSV_IRQn 1 */
 170:Src/stm32f4xx_it.c **** }
 171:Src/stm32f4xx_it.c **** 
 172:Src/stm32f4xx_it.c **** /**
 173:Src/stm32f4xx_it.c ****  * @brief This function handles System tick timer.
 174:Src/stm32f4xx_it.c ****  */
 175:Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 176:Src/stm32f4xx_it.c **** {
 177              		.loc 1 176 0
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 0
 180              		@ frame_needed = 0, uses_anonymous_args = 0
 181              		.loc 1 176 0
 182 0000 08B5     		push	{r3, lr}
 183              	.LCFI0:
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//cce7NCdi.s 			page 7


 184              		.cfi_def_cfa_offset 8
 185              		.cfi_offset 3, -8
 186              		.cfi_offset 14, -4
 177:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN SysTick_IRQn 0 */
 178:Src/stm32f4xx_it.c **** 
 179:Src/stm32f4xx_it.c ****     /* USER CODE END SysTick_IRQn 0 */
 180:Src/stm32f4xx_it.c ****     HAL_IncTick();
 187              		.loc 1 180 0
 188 0002 FFF7FEFF 		bl	HAL_IncTick
 189              	.LVL0:
 181:Src/stm32f4xx_it.c ****     HAL_SYSTICK_IRQHandler();
 190              		.loc 1 181 0
 191 0006 FFF7FEFF 		bl	HAL_SYSTICK_IRQHandler
 192              	.LVL1:
 193 000a 08BD     		pop	{r3, pc}
 194              		.cfi_endproc
 195              	.LFE131:
 197              		.section	.text.EXTI0_IRQHandler,"ax",%progbits
 198              		.align	2
 199              		.global	EXTI0_IRQHandler
 200              		.thumb
 201              		.thumb_func
 203              	EXTI0_IRQHandler:
 204              	.LFB132:
 182:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN SysTick_IRQn 1 */
 183:Src/stm32f4xx_it.c **** 
 184:Src/stm32f4xx_it.c ****     /* USER CODE END SysTick_IRQn 1 */
 185:Src/stm32f4xx_it.c **** }
 186:Src/stm32f4xx_it.c **** 
 187:Src/stm32f4xx_it.c **** /******************************************************************************/
 188:Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 189:Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 190:Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 191:Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 192:Src/stm32f4xx_it.c **** /******************************************************************************/
 193:Src/stm32f4xx_it.c **** 
 194:Src/stm32f4xx_it.c **** /**
 195:Src/stm32f4xx_it.c ****  * @brief This function handles EXTI line0 interrupt.
 196:Src/stm32f4xx_it.c ****  */
 197:Src/stm32f4xx_it.c **** void EXTI0_IRQHandler(void)
 198:Src/stm32f4xx_it.c **** {
 205              		.loc 1 198 0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209 0000 08B5     		push	{r3, lr}
 210              	.LCFI1:
 211              		.cfi_def_cfa_offset 8
 212              		.cfi_offset 3, -8
 213              		.cfi_offset 14, -4
 199:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN EXTI0_IRQn 0 */
 200:Src/stm32f4xx_it.c **** 
 201:Src/stm32f4xx_it.c ****     /* USER CODE END EXTI0_IRQn 0 */
 202:Src/stm32f4xx_it.c ****     HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_0);
 214              		.loc 1 202 0
 215 0002 0120     		movs	r0, #1
 216 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//cce7NCdi.s 			page 8


 217              	.LVL2:
 218 0008 08BD     		pop	{r3, pc}
 219              		.cfi_endproc
 220              	.LFE132:
 222 000a 00BF     		.section	.text.EXTI1_IRQHandler,"ax",%progbits
 223              		.align	2
 224              		.global	EXTI1_IRQHandler
 225              		.thumb
 226              		.thumb_func
 228              	EXTI1_IRQHandler:
 229              	.LFB133:
 203:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN EXTI0_IRQn 1 */
 204:Src/stm32f4xx_it.c **** 
 205:Src/stm32f4xx_it.c ****     /* USER CODE END EXTI0_IRQn 1 */
 206:Src/stm32f4xx_it.c **** }
 207:Src/stm32f4xx_it.c **** 
 208:Src/stm32f4xx_it.c **** /**
 209:Src/stm32f4xx_it.c ****  * @brief This function handles EXTI line1 interrupt.
 210:Src/stm32f4xx_it.c ****  */
 211:Src/stm32f4xx_it.c **** void EXTI1_IRQHandler(void)
 212:Src/stm32f4xx_it.c **** {
 230              		.loc 1 212 0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 0
 233              		@ frame_needed = 0, uses_anonymous_args = 0
 234 0000 08B5     		push	{r3, lr}
 235              	.LCFI2:
 236              		.cfi_def_cfa_offset 8
 237              		.cfi_offset 3, -8
 238              		.cfi_offset 14, -4
 213:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN EXTI1_IRQn 0 */
 214:Src/stm32f4xx_it.c **** 
 215:Src/stm32f4xx_it.c ****     /* USER CODE END EXTI1_IRQn 0 */
 216:Src/stm32f4xx_it.c ****     HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_1);
 239              		.loc 1 216 0
 240 0002 0220     		movs	r0, #2
 241 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 242              	.LVL3:
 243 0008 08BD     		pop	{r3, pc}
 244              		.cfi_endproc
 245              	.LFE133:
 247 000a 00BF     		.section	.text.EXTI2_IRQHandler,"ax",%progbits
 248              		.align	2
 249              		.global	EXTI2_IRQHandler
 250              		.thumb
 251              		.thumb_func
 253              	EXTI2_IRQHandler:
 254              	.LFB134:
 217:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN EXTI1_IRQn 1 */
 218:Src/stm32f4xx_it.c **** 
 219:Src/stm32f4xx_it.c ****     /* USER CODE END EXTI1_IRQn 1 */
 220:Src/stm32f4xx_it.c **** }
 221:Src/stm32f4xx_it.c **** 
 222:Src/stm32f4xx_it.c **** /**
 223:Src/stm32f4xx_it.c ****  * @brief This function handles EXTI line2 interrupt.
 224:Src/stm32f4xx_it.c ****  */
 225:Src/stm32f4xx_it.c **** void EXTI2_IRQHandler(void)
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//cce7NCdi.s 			page 9


 226:Src/stm32f4xx_it.c **** {
 255              		.loc 1 226 0
 256              		.cfi_startproc
 257              		@ args = 0, pretend = 0, frame = 0
 258              		@ frame_needed = 0, uses_anonymous_args = 0
 259 0000 08B5     		push	{r3, lr}
 260              	.LCFI3:
 261              		.cfi_def_cfa_offset 8
 262              		.cfi_offset 3, -8
 263              		.cfi_offset 14, -4
 227:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN EXTI2_IRQn 0 */
 228:Src/stm32f4xx_it.c **** 
 229:Src/stm32f4xx_it.c ****     /* USER CODE END EXTI2_IRQn 0 */
 230:Src/stm32f4xx_it.c ****     HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_2);
 264              		.loc 1 230 0
 265 0002 0420     		movs	r0, #4
 266 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 267              	.LVL4:
 268 0008 08BD     		pop	{r3, pc}
 269              		.cfi_endproc
 270              	.LFE134:
 272 000a 00BF     		.section	.text.EXTI3_IRQHandler,"ax",%progbits
 273              		.align	2
 274              		.global	EXTI3_IRQHandler
 275              		.thumb
 276              		.thumb_func
 278              	EXTI3_IRQHandler:
 279              	.LFB135:
 231:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN EXTI2_IRQn 1 */
 232:Src/stm32f4xx_it.c **** 
 233:Src/stm32f4xx_it.c ****     /* USER CODE END EXTI2_IRQn 1 */
 234:Src/stm32f4xx_it.c **** }
 235:Src/stm32f4xx_it.c **** 
 236:Src/stm32f4xx_it.c **** /**
 237:Src/stm32f4xx_it.c ****  * @brief This function handles EXTI line3 interrupt.
 238:Src/stm32f4xx_it.c ****  */
 239:Src/stm32f4xx_it.c **** void EXTI3_IRQHandler(void)
 240:Src/stm32f4xx_it.c **** {
 280              		.loc 1 240 0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 0
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284 0000 08B5     		push	{r3, lr}
 285              	.LCFI4:
 286              		.cfi_def_cfa_offset 8
 287              		.cfi_offset 3, -8
 288              		.cfi_offset 14, -4
 241:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN EXTI3_IRQn 0 */
 242:Src/stm32f4xx_it.c **** 
 243:Src/stm32f4xx_it.c ****     /* USER CODE END EXTI3_IRQn 0 */
 244:Src/stm32f4xx_it.c ****     HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_3);
 289              		.loc 1 244 0
 290 0002 0820     		movs	r0, #8
 291 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 292              	.LVL5:
 293 0008 08BD     		pop	{r3, pc}
 294              		.cfi_endproc
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//cce7NCdi.s 			page 10


 295              	.LFE135:
 297 000a 00BF     		.section	.text.EXTI15_10_IRQHandler,"ax",%progbits
 298              		.align	2
 299              		.global	EXTI15_10_IRQHandler
 300              		.thumb
 301              		.thumb_func
 303              	EXTI15_10_IRQHandler:
 304              	.LFB136:
 245:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN EXTI3_IRQn 1 */
 246:Src/stm32f4xx_it.c **** 
 247:Src/stm32f4xx_it.c ****     /* USER CODE END EXTI3_IRQn 1 */
 248:Src/stm32f4xx_it.c **** }
 249:Src/stm32f4xx_it.c **** 
 250:Src/stm32f4xx_it.c **** /**
 251:Src/stm32f4xx_it.c ****  * @brief This function handles EXTI line[15:10] interrupts.
 252:Src/stm32f4xx_it.c ****  */
 253:Src/stm32f4xx_it.c **** void EXTI15_10_IRQHandler(void)
 254:Src/stm32f4xx_it.c **** {
 305              		.loc 1 254 0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 0
 308              		@ frame_needed = 0, uses_anonymous_args = 0
 309 0000 08B5     		push	{r3, lr}
 310              	.LCFI5:
 311              		.cfi_def_cfa_offset 8
 312              		.cfi_offset 3, -8
 313              		.cfi_offset 14, -4
 255:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN EXTI15_10_IRQn 0 */
 256:Src/stm32f4xx_it.c ****     PUSH_BUTTON_STATE = 1;
 314              		.loc 1 256 0
 315 0002 0122     		movs	r2, #1
 316 0004 034B     		ldr	r3, .L25
 317 0006 1A70     		strb	r2, [r3]
 257:Src/stm32f4xx_it.c ****     /* USER CODE END EXTI15_10_IRQn 0 */
 258:Src/stm32f4xx_it.c ****     HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_13);
 318              		.loc 1 258 0
 319 0008 4FF40050 		mov	r0, #8192
 320 000c FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 321              	.LVL6:
 322 0010 08BD     		pop	{r3, pc}
 323              	.L26:
 324 0012 00BF     		.align	2
 325              	.L25:
 326 0014 00000000 		.word	PUSH_BUTTON_STATE
 327              		.cfi_endproc
 328              	.LFE136:
 330              		.text
 331              	.Letext0:
 332              		.file 2 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/machine/_default_types
 333              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/sys/_stdint.h"
 334              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 335              		.file 5 "Inc/stm32f4xx_it.h"
 336              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 337              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 338              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//cce7NCdi.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//cce7NCdi.s:21     .text.NMI_Handler:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//cce7NCdi.s:26     .text.NMI_Handler:0000000000000000 NMI_Handler
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//cce7NCdi.s:39     .text.HardFault_Handler:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//cce7NCdi.s:44     .text.HardFault_Handler:0000000000000000 HardFault_Handler
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//cce7NCdi.s:59     .text.MemManage_Handler:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//cce7NCdi.s:64     .text.MemManage_Handler:0000000000000000 MemManage_Handler
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//cce7NCdi.s:79     .text.BusFault_Handler:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//cce7NCdi.s:84     .text.BusFault_Handler:0000000000000000 BusFault_Handler
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//cce7NCdi.s:99     .text.UsageFault_Handler:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//cce7NCdi.s:104    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//cce7NCdi.s:119    .text.SVC_Handler:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//cce7NCdi.s:124    .text.SVC_Handler:0000000000000000 SVC_Handler
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//cce7NCdi.s:136    .text.DebugMon_Handler:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//cce7NCdi.s:141    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//cce7NCdi.s:153    .text.PendSV_Handler:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//cce7NCdi.s:158    .text.PendSV_Handler:0000000000000000 PendSV_Handler
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//cce7NCdi.s:170    .text.SysTick_Handler:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//cce7NCdi.s:175    .text.SysTick_Handler:0000000000000000 SysTick_Handler
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//cce7NCdi.s:198    .text.EXTI0_IRQHandler:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//cce7NCdi.s:203    .text.EXTI0_IRQHandler:0000000000000000 EXTI0_IRQHandler
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//cce7NCdi.s:223    .text.EXTI1_IRQHandler:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//cce7NCdi.s:228    .text.EXTI1_IRQHandler:0000000000000000 EXTI1_IRQHandler
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//cce7NCdi.s:248    .text.EXTI2_IRQHandler:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//cce7NCdi.s:253    .text.EXTI2_IRQHandler:0000000000000000 EXTI2_IRQHandler
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//cce7NCdi.s:273    .text.EXTI3_IRQHandler:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//cce7NCdi.s:278    .text.EXTI3_IRQHandler:0000000000000000 EXTI3_IRQHandler
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//cce7NCdi.s:298    .text.EXTI15_10_IRQHandler:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//cce7NCdi.s:303    .text.EXTI15_10_IRQHandler:0000000000000000 EXTI15_10_IRQHandler
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//cce7NCdi.s:326    .text.EXTI15_10_IRQHandler:0000000000000014 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_SYSTICK_IRQHandler
HAL_GPIO_EXTI_IRQHandler
PUSH_BUTTON_STATE
