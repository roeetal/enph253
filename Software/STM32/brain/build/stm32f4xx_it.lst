ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"stm32f4xx_it.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.NMI_Handler,"ax",%progbits
  21              		.align	2
  22              		.global	NMI_Handler
  23              		.thumb
  24              		.thumb_func
  26              	NMI_Handler:
  27              	.LFB123:
  28              		.file 1 "Src/stm32f4xx_it.c"
   1:Src/stm32f4xx_it.c **** /**
   2:Src/stm32f4xx_it.c ****   ******************************************************************************
   3:Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   4:Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   5:Src/stm32f4xx_it.c ****   ******************************************************************************
   6:Src/stm32f4xx_it.c ****   *
   7:Src/stm32f4xx_it.c ****   * COPYRIGHT(c) 2018 STMicroelectronics
   8:Src/stm32f4xx_it.c ****   *
   9:Src/stm32f4xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  10:Src/stm32f4xx_it.c ****   * are permitted provided that the following conditions are met:
  11:Src/stm32f4xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  12:Src/stm32f4xx_it.c ****   *      this list of conditions and the following disclaimer.
  13:Src/stm32f4xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  14:Src/stm32f4xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  15:Src/stm32f4xx_it.c ****   *      and/or other materials provided with the distribution.
  16:Src/stm32f4xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  17:Src/stm32f4xx_it.c ****   *      may be used to endorse or promote products derived from this software
  18:Src/stm32f4xx_it.c ****   *      without specific prior written permission.
  19:Src/stm32f4xx_it.c ****   *
  20:Src/stm32f4xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:Src/stm32f4xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:Src/stm32f4xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  23:Src/stm32f4xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  24:Src/stm32f4xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  25:Src/stm32f4xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  26:Src/stm32f4xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  27:Src/stm32f4xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  28:Src/stm32f4xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  29:Src/stm32f4xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:Src/stm32f4xx_it.c ****   *
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s 			page 2


  31:Src/stm32f4xx_it.c ****   ******************************************************************************
  32:Src/stm32f4xx_it.c ****   */
  33:Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  34:Src/stm32f4xx_it.c **** #include "stm32f4xx_hal.h"
  35:Src/stm32f4xx_it.c **** #include "stm32f4xx.h"
  36:Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  37:Src/stm32f4xx_it.c **** 
  38:Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  39:Src/stm32f4xx_it.c **** #include "extern_vars.h"
  40:Src/stm32f4xx_it.c **** 
  41:Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  42:Src/stm32f4xx_it.c **** 
  43:Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  44:Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_adc1;
  45:Src/stm32f4xx_it.c **** extern ADC_HandleTypeDef hadc1;
  46:Src/stm32f4xx_it.c **** 
  47:Src/stm32f4xx_it.c **** /******************************************************************************/
  48:Src/stm32f4xx_it.c **** /*            Cortex-M4 Processor Interruption and Exception Handlers         */ 
  49:Src/stm32f4xx_it.c **** /******************************************************************************/
  50:Src/stm32f4xx_it.c **** 
  51:Src/stm32f4xx_it.c **** /**
  52:Src/stm32f4xx_it.c **** * @brief This function handles Non maskable interrupt.
  53:Src/stm32f4xx_it.c **** */
  54:Src/stm32f4xx_it.c **** void NMI_Handler(void)
  55:Src/stm32f4xx_it.c **** {
  29              		.loc 1 55 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE123:
  38 0002 00BF     		.section	.text.HardFault_Handler,"ax",%progbits
  39              		.align	2
  40              		.global	HardFault_Handler
  41              		.thumb
  42              		.thumb_func
  44              	HardFault_Handler:
  45              	.LFB124:
  56:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  57:Src/stm32f4xx_it.c **** 
  58:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  59:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  60:Src/stm32f4xx_it.c **** 
  61:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  62:Src/stm32f4xx_it.c **** }
  63:Src/stm32f4xx_it.c **** 
  64:Src/stm32f4xx_it.c **** /**
  65:Src/stm32f4xx_it.c **** * @brief This function handles Hard fault interrupt.
  66:Src/stm32f4xx_it.c **** */
  67:Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  68:Src/stm32f4xx_it.c **** {
  46              		.loc 1 68 0
  47              		.cfi_startproc
  48              		@ Volatile: function does not return.
  49              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s 			page 3


  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
  52              	.L3:
  69:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  70:Src/stm32f4xx_it.c **** 
  71:Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  72:Src/stm32f4xx_it.c ****   while (1)
  73:Src/stm32f4xx_it.c ****   {
  74:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  75:Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  76:Src/stm32f4xx_it.c ****   }
  53              		.loc 1 76 0 discriminator 1
  54 0000 FEE7     		b	.L3
  55              		.cfi_endproc
  56              	.LFE124:
  58 0002 00BF     		.section	.text.MemManage_Handler,"ax",%progbits
  59              		.align	2
  60              		.global	MemManage_Handler
  61              		.thumb
  62              		.thumb_func
  64              	MemManage_Handler:
  65              	.LFB125:
  77:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 1 */
  78:Src/stm32f4xx_it.c **** 
  79:Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 1 */
  80:Src/stm32f4xx_it.c **** }
  81:Src/stm32f4xx_it.c **** 
  82:Src/stm32f4xx_it.c **** /**
  83:Src/stm32f4xx_it.c **** * @brief This function handles Memory management fault.
  84:Src/stm32f4xx_it.c **** */
  85:Src/stm32f4xx_it.c **** void MemManage_Handler(void)
  86:Src/stm32f4xx_it.c **** {
  66              		.loc 1 86 0
  67              		.cfi_startproc
  68              		@ Volatile: function does not return.
  69              		@ args = 0, pretend = 0, frame = 0
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71              		@ link register save eliminated.
  72              	.L5:
  87:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
  88:Src/stm32f4xx_it.c **** 
  89:Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
  90:Src/stm32f4xx_it.c ****   while (1)
  91:Src/stm32f4xx_it.c ****   {
  92:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
  93:Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
  94:Src/stm32f4xx_it.c ****   }
  73              		.loc 1 94 0 discriminator 1
  74 0000 FEE7     		b	.L5
  75              		.cfi_endproc
  76              	.LFE125:
  78 0002 00BF     		.section	.text.BusFault_Handler,"ax",%progbits
  79              		.align	2
  80              		.global	BusFault_Handler
  81              		.thumb
  82              		.thumb_func
  84              	BusFault_Handler:
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s 			page 4


  85              	.LFB126:
  95:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 1 */
  96:Src/stm32f4xx_it.c **** 
  97:Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 1 */
  98:Src/stm32f4xx_it.c **** }
  99:Src/stm32f4xx_it.c **** 
 100:Src/stm32f4xx_it.c **** /**
 101:Src/stm32f4xx_it.c **** * @brief This function handles Pre-fetch fault, memory access fault.
 102:Src/stm32f4xx_it.c **** */
 103:Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 104:Src/stm32f4xx_it.c **** {
  86              		.loc 1 104 0
  87              		.cfi_startproc
  88              		@ Volatile: function does not return.
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              		@ link register save eliminated.
  92              	.L7:
 105:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 106:Src/stm32f4xx_it.c **** 
 107:Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 108:Src/stm32f4xx_it.c ****   while (1)
 109:Src/stm32f4xx_it.c ****   {
 110:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 111:Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 112:Src/stm32f4xx_it.c ****   }
  93              		.loc 1 112 0 discriminator 1
  94 0000 FEE7     		b	.L7
  95              		.cfi_endproc
  96              	.LFE126:
  98 0002 00BF     		.section	.text.UsageFault_Handler,"ax",%progbits
  99              		.align	2
 100              		.global	UsageFault_Handler
 101              		.thumb
 102              		.thumb_func
 104              	UsageFault_Handler:
 105              	.LFB127:
 113:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 1 */
 114:Src/stm32f4xx_it.c **** 
 115:Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 1 */
 116:Src/stm32f4xx_it.c **** }
 117:Src/stm32f4xx_it.c **** 
 118:Src/stm32f4xx_it.c **** /**
 119:Src/stm32f4xx_it.c **** * @brief This function handles Undefined instruction or illegal state.
 120:Src/stm32f4xx_it.c **** */
 121:Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 122:Src/stm32f4xx_it.c **** {
 106              		.loc 1 122 0
 107              		.cfi_startproc
 108              		@ Volatile: function does not return.
 109              		@ args = 0, pretend = 0, frame = 0
 110              		@ frame_needed = 0, uses_anonymous_args = 0
 111              		@ link register save eliminated.
 112              	.L9:
 123:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 124:Src/stm32f4xx_it.c **** 
 125:Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s 			page 5


 126:Src/stm32f4xx_it.c ****   while (1)
 127:Src/stm32f4xx_it.c ****   {
 128:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 129:Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 130:Src/stm32f4xx_it.c ****   }
 113              		.loc 1 130 0 discriminator 1
 114 0000 FEE7     		b	.L9
 115              		.cfi_endproc
 116              	.LFE127:
 118 0002 00BF     		.section	.text.SVC_Handler,"ax",%progbits
 119              		.align	2
 120              		.global	SVC_Handler
 121              		.thumb
 122              		.thumb_func
 124              	SVC_Handler:
 125              	.LFB128:
 131:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 1 */
 132:Src/stm32f4xx_it.c **** 
 133:Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 1 */
 134:Src/stm32f4xx_it.c **** }
 135:Src/stm32f4xx_it.c **** 
 136:Src/stm32f4xx_it.c **** /**
 137:Src/stm32f4xx_it.c **** * @brief This function handles System service call via SWI instruction.
 138:Src/stm32f4xx_it.c **** */
 139:Src/stm32f4xx_it.c **** void SVC_Handler(void)
 140:Src/stm32f4xx_it.c **** {
 126              		.loc 1 140 0
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130              		@ link register save eliminated.
 131 0000 7047     		bx	lr
 132              		.cfi_endproc
 133              	.LFE128:
 135 0002 00BF     		.section	.text.DebugMon_Handler,"ax",%progbits
 136              		.align	2
 137              		.global	DebugMon_Handler
 138              		.thumb
 139              		.thumb_func
 141              	DebugMon_Handler:
 142              	.LFB129:
 141:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 142:Src/stm32f4xx_it.c **** 
 143:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 144:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 145:Src/stm32f4xx_it.c **** 
 146:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 147:Src/stm32f4xx_it.c **** }
 148:Src/stm32f4xx_it.c **** 
 149:Src/stm32f4xx_it.c **** /**
 150:Src/stm32f4xx_it.c **** * @brief This function handles Debug monitor.
 151:Src/stm32f4xx_it.c **** */
 152:Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 153:Src/stm32f4xx_it.c **** {
 143              		.loc 1 153 0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s 			page 6


 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147              		@ link register save eliminated.
 148 0000 7047     		bx	lr
 149              		.cfi_endproc
 150              	.LFE129:
 152 0002 00BF     		.section	.text.PendSV_Handler,"ax",%progbits
 153              		.align	2
 154              		.global	PendSV_Handler
 155              		.thumb
 156              		.thumb_func
 158              	PendSV_Handler:
 159              	.LFB130:
 154:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 155:Src/stm32f4xx_it.c **** 
 156:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 157:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 158:Src/stm32f4xx_it.c **** 
 159:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 160:Src/stm32f4xx_it.c **** }
 161:Src/stm32f4xx_it.c **** 
 162:Src/stm32f4xx_it.c **** /**
 163:Src/stm32f4xx_it.c **** * @brief This function handles Pendable request for system service.
 164:Src/stm32f4xx_it.c **** */
 165:Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 166:Src/stm32f4xx_it.c **** {
 160              		.loc 1 166 0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 0, uses_anonymous_args = 0
 164              		@ link register save eliminated.
 165 0000 7047     		bx	lr
 166              		.cfi_endproc
 167              	.LFE130:
 169 0002 00BF     		.section	.text.SysTick_Handler,"ax",%progbits
 170              		.align	2
 171              		.global	SysTick_Handler
 172              		.thumb
 173              		.thumb_func
 175              	SysTick_Handler:
 176              	.LFB131:
 167:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 168:Src/stm32f4xx_it.c **** 
 169:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 170:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 171:Src/stm32f4xx_it.c **** 
 172:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 173:Src/stm32f4xx_it.c **** }
 174:Src/stm32f4xx_it.c **** 
 175:Src/stm32f4xx_it.c **** /**
 176:Src/stm32f4xx_it.c **** * @brief This function handles System tick timer.
 177:Src/stm32f4xx_it.c **** */
 178:Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 179:Src/stm32f4xx_it.c **** {
 177              		.loc 1 179 0
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 0
 180              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s 			page 7


 181              		.loc 1 179 0
 182 0000 08B5     		push	{r3, lr}
 183              	.LCFI0:
 184              		.cfi_def_cfa_offset 8
 185              		.cfi_offset 3, -8
 186              		.cfi_offset 14, -4
 180:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 181:Src/stm32f4xx_it.c **** 
 182:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 183:Src/stm32f4xx_it.c ****   HAL_IncTick();
 187              		.loc 1 183 0
 188 0002 FFF7FEFF 		bl	HAL_IncTick
 189              	.LVL0:
 184:Src/stm32f4xx_it.c ****   HAL_SYSTICK_IRQHandler();
 190              		.loc 1 184 0
 191 0006 FFF7FEFF 		bl	HAL_SYSTICK_IRQHandler
 192              	.LVL1:
 193 000a 08BD     		pop	{r3, pc}
 194              		.cfi_endproc
 195              	.LFE131:
 197              		.section	.text.EXTI0_IRQHandler,"ax",%progbits
 198              		.align	2
 199              		.global	EXTI0_IRQHandler
 200              		.thumb
 201              		.thumb_func
 203              	EXTI0_IRQHandler:
 204              	.LFB132:
 185:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 186:Src/stm32f4xx_it.c **** 
 187:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 188:Src/stm32f4xx_it.c **** }
 189:Src/stm32f4xx_it.c **** 
 190:Src/stm32f4xx_it.c **** /******************************************************************************/
 191:Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 192:Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 193:Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 194:Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 195:Src/stm32f4xx_it.c **** /******************************************************************************/
 196:Src/stm32f4xx_it.c **** 
 197:Src/stm32f4xx_it.c **** /**
 198:Src/stm32f4xx_it.c **** * @brief This function handles EXTI line0 interrupt.
 199:Src/stm32f4xx_it.c **** */
 200:Src/stm32f4xx_it.c **** void EXTI0_IRQHandler(void)
 201:Src/stm32f4xx_it.c **** {
 205              		.loc 1 201 0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209 0000 08B5     		push	{r3, lr}
 210              	.LCFI1:
 211              		.cfi_def_cfa_offset 8
 212              		.cfi_offset 3, -8
 213              		.cfi_offset 14, -4
 202:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI0_IRQn 0 */
 203:Src/stm32f4xx_it.c ****     PI_INT_STATE = FLAGGED;
 214              		.loc 1 203 0
 215 0002 0120     		movs	r0, #1
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s 			page 8


 216 0004 024B     		ldr	r3, .L17
 217 0006 1870     		strb	r0, [r3]
 204:Src/stm32f4xx_it.c **** 
 205:Src/stm32f4xx_it.c ****   /* USER CODE END EXTI0_IRQn 0 */
 206:Src/stm32f4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_0);
 218              		.loc 1 206 0
 219 0008 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 220              	.LVL2:
 221 000c 08BD     		pop	{r3, pc}
 222              	.L18:
 223 000e 00BF     		.align	2
 224              	.L17:
 225 0010 00000000 		.word	PI_INT_STATE
 226              		.cfi_endproc
 227              	.LFE132:
 229              		.section	.text.EXTI1_IRQHandler,"ax",%progbits
 230              		.align	2
 231              		.global	EXTI1_IRQHandler
 232              		.thumb
 233              		.thumb_func
 235              	EXTI1_IRQHandler:
 236              	.LFB133:
 207:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI0_IRQn 1 */
 208:Src/stm32f4xx_it.c **** 
 209:Src/stm32f4xx_it.c ****   /* USER CODE END EXTI0_IRQn 1 */
 210:Src/stm32f4xx_it.c **** }
 211:Src/stm32f4xx_it.c **** 
 212:Src/stm32f4xx_it.c **** /**
 213:Src/stm32f4xx_it.c **** * @brief This function handles EXTI line1 interrupt.
 214:Src/stm32f4xx_it.c **** */
 215:Src/stm32f4xx_it.c **** void EXTI1_IRQHandler(void)
 216:Src/stm32f4xx_it.c **** {
 237              		.loc 1 216 0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241 0000 08B5     		push	{r3, lr}
 242              	.LCFI2:
 243              		.cfi_def_cfa_offset 8
 244              		.cfi_offset 3, -8
 245              		.cfi_offset 14, -4
 217:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI1_IRQn 0 */
 218:Src/stm32f4xx_it.c ****     IR_INT_STATE = FLAGGED;
 246              		.loc 1 218 0
 247 0002 0122     		movs	r2, #1
 248 0004 024B     		ldr	r3, .L21
 249 0006 1A70     		strb	r2, [r3]
 219:Src/stm32f4xx_it.c **** 
 220:Src/stm32f4xx_it.c ****   /* USER CODE END EXTI1_IRQn 0 */
 221:Src/stm32f4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_1);
 250              		.loc 1 221 0
 251 0008 0220     		movs	r0, #2
 252 000a FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 253              	.LVL3:
 254 000e 08BD     		pop	{r3, pc}
 255              	.L22:
 256              		.align	2
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s 			page 9


 257              	.L21:
 258 0010 00000000 		.word	IR_INT_STATE
 259              		.cfi_endproc
 260              	.LFE133:
 262              		.section	.text.EXTI2_IRQHandler,"ax",%progbits
 263              		.align	2
 264              		.global	EXTI2_IRQHandler
 265              		.thumb
 266              		.thumb_func
 268              	EXTI2_IRQHandler:
 269              	.LFB134:
 222:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI1_IRQn 1 */
 223:Src/stm32f4xx_it.c **** 
 224:Src/stm32f4xx_it.c ****   /* USER CODE END EXTI1_IRQn 1 */
 225:Src/stm32f4xx_it.c **** }
 226:Src/stm32f4xx_it.c **** 
 227:Src/stm32f4xx_it.c **** /**
 228:Src/stm32f4xx_it.c **** * @brief This function handles EXTI line2 interrupt.
 229:Src/stm32f4xx_it.c **** */
 230:Src/stm32f4xx_it.c **** void EXTI2_IRQHandler(void)
 231:Src/stm32f4xx_it.c **** {
 270              		.loc 1 231 0
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 0
 273              		@ frame_needed = 0, uses_anonymous_args = 0
 274 0000 08B5     		push	{r3, lr}
 275              	.LCFI3:
 276              		.cfi_def_cfa_offset 8
 277              		.cfi_offset 3, -8
 278              		.cfi_offset 14, -4
 232:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI2_IRQn 0 */
 233:Src/stm32f4xx_it.c ****     EDGE_LEFT_STATE = FLAGGED;
 279              		.loc 1 233 0
 280 0002 0122     		movs	r2, #1
 281 0004 024B     		ldr	r3, .L25
 282 0006 1A70     		strb	r2, [r3]
 234:Src/stm32f4xx_it.c ****   /* USER CODE END EXTI2_IRQn 0 */
 235:Src/stm32f4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_2);
 283              		.loc 1 235 0
 284 0008 0420     		movs	r0, #4
 285 000a FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 286              	.LVL4:
 287 000e 08BD     		pop	{r3, pc}
 288              	.L26:
 289              		.align	2
 290              	.L25:
 291 0010 00000000 		.word	EDGE_LEFT_STATE
 292              		.cfi_endproc
 293              	.LFE134:
 295              		.section	.text.EXTI3_IRQHandler,"ax",%progbits
 296              		.align	2
 297              		.global	EXTI3_IRQHandler
 298              		.thumb
 299              		.thumb_func
 301              	EXTI3_IRQHandler:
 302              	.LFB135:
 236:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI2_IRQn 1 */
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s 			page 10


 237:Src/stm32f4xx_it.c **** 
 238:Src/stm32f4xx_it.c ****   /* USER CODE END EXTI2_IRQn 1 */
 239:Src/stm32f4xx_it.c **** }
 240:Src/stm32f4xx_it.c **** 
 241:Src/stm32f4xx_it.c **** /**
 242:Src/stm32f4xx_it.c **** * @brief This function handles EXTI line3 interrupt.
 243:Src/stm32f4xx_it.c **** */
 244:Src/stm32f4xx_it.c **** void EXTI3_IRQHandler(void)
 245:Src/stm32f4xx_it.c **** {
 303              		.loc 1 245 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 0, uses_anonymous_args = 0
 307 0000 08B5     		push	{r3, lr}
 308              	.LCFI4:
 309              		.cfi_def_cfa_offset 8
 310              		.cfi_offset 3, -8
 311              		.cfi_offset 14, -4
 246:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI3_IRQn 0 */
 247:Src/stm32f4xx_it.c ****     EDGE_RIGHT_STATE = FLAGGED;
 312              		.loc 1 247 0
 313 0002 0122     		movs	r2, #1
 314 0004 024B     		ldr	r3, .L29
 315 0006 1A70     		strb	r2, [r3]
 248:Src/stm32f4xx_it.c **** 
 249:Src/stm32f4xx_it.c ****   /* USER CODE END EXTI3_IRQn 0 */
 250:Src/stm32f4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_3);
 316              		.loc 1 250 0
 317 0008 0820     		movs	r0, #8
 318 000a FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 319              	.LVL5:
 320 000e 08BD     		pop	{r3, pc}
 321              	.L30:
 322              		.align	2
 323              	.L29:
 324 0010 00000000 		.word	EDGE_RIGHT_STATE
 325              		.cfi_endproc
 326              	.LFE135:
 328              		.section	.text.EXTI4_IRQHandler,"ax",%progbits
 329              		.align	2
 330              		.global	EXTI4_IRQHandler
 331              		.thumb
 332              		.thumb_func
 334              	EXTI4_IRQHandler:
 335              	.LFB136:
 251:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI3_IRQn 1 */
 252:Src/stm32f4xx_it.c **** 
 253:Src/stm32f4xx_it.c ****   /* USER CODE END EXTI3_IRQn 1 */
 254:Src/stm32f4xx_it.c **** }
 255:Src/stm32f4xx_it.c **** 
 256:Src/stm32f4xx_it.c **** /**
 257:Src/stm32f4xx_it.c **** * @brief This function handles EXTI line4 interrupt.
 258:Src/stm32f4xx_it.c **** */
 259:Src/stm32f4xx_it.c **** void EXTI4_IRQHandler(void)
 260:Src/stm32f4xx_it.c **** {
 336              		.loc 1 260 0
 337              		.cfi_startproc
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s 			page 11


 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 0, uses_anonymous_args = 0
 340 0000 08B5     		push	{r3, lr}
 341              	.LCFI5:
 342              		.cfi_def_cfa_offset 8
 343              		.cfi_offset 3, -8
 344              		.cfi_offset 14, -4
 261:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI4_IRQn 0 */
 262:Src/stm32f4xx_it.c ****     CLAW_INT_STATE = FLAGGED;
 345              		.loc 1 262 0
 346 0002 0122     		movs	r2, #1
 347 0004 024B     		ldr	r3, .L33
 348 0006 1A70     		strb	r2, [r3]
 263:Src/stm32f4xx_it.c ****     
 264:Src/stm32f4xx_it.c ****   /* USER CODE END EXTI4_IRQn 0 */
 265:Src/stm32f4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_4);
 349              		.loc 1 265 0
 350 0008 1020     		movs	r0, #16
 351 000a FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 352              	.LVL6:
 353 000e 08BD     		pop	{r3, pc}
 354              	.L34:
 355              		.align	2
 356              	.L33:
 357 0010 00000000 		.word	CLAW_INT_STATE
 358              		.cfi_endproc
 359              	.LFE136:
 361              		.section	.text.ADC_IRQHandler,"ax",%progbits
 362              		.align	2
 363              		.global	ADC_IRQHandler
 364              		.thumb
 365              		.thumb_func
 367              	ADC_IRQHandler:
 368              	.LFB137:
 266:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI4_IRQn 1 */
 267:Src/stm32f4xx_it.c **** 
 268:Src/stm32f4xx_it.c ****   /* USER CODE END EXTI4_IRQn 1 */
 269:Src/stm32f4xx_it.c **** }
 270:Src/stm32f4xx_it.c **** 
 271:Src/stm32f4xx_it.c **** /**
 272:Src/stm32f4xx_it.c **** * @brief This function handles ADC1 global interrupt.
 273:Src/stm32f4xx_it.c **** */
 274:Src/stm32f4xx_it.c **** void ADC_IRQHandler(void)
 275:Src/stm32f4xx_it.c **** {
 369              		.loc 1 275 0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 0
 372              		@ frame_needed = 0, uses_anonymous_args = 0
 373 0000 08B5     		push	{r3, lr}
 374              	.LCFI6:
 375              		.cfi_def_cfa_offset 8
 376              		.cfi_offset 3, -8
 377              		.cfi_offset 14, -4
 276:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN ADC_IRQn 0 */
 277:Src/stm32f4xx_it.c **** 
 278:Src/stm32f4xx_it.c ****   /* USER CODE END ADC_IRQn 0 */
 279:Src/stm32f4xx_it.c ****   HAL_ADC_IRQHandler(&hadc1);
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s 			page 12


 378              		.loc 1 279 0
 379 0002 0248     		ldr	r0, .L37
 380 0004 FFF7FEFF 		bl	HAL_ADC_IRQHandler
 381              	.LVL7:
 382 0008 08BD     		pop	{r3, pc}
 383              	.L38:
 384 000a 00BF     		.align	2
 385              	.L37:
 386 000c 00000000 		.word	hadc1
 387              		.cfi_endproc
 388              	.LFE137:
 390              		.section	.text.EXTI15_10_IRQHandler,"ax",%progbits
 391              		.align	2
 392              		.global	EXTI15_10_IRQHandler
 393              		.thumb
 394              		.thumb_func
 396              	EXTI15_10_IRQHandler:
 397              	.LFB138:
 280:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN ADC_IRQn 1 */
 281:Src/stm32f4xx_it.c **** 
 282:Src/stm32f4xx_it.c ****   /* USER CODE END ADC_IRQn 1 */
 283:Src/stm32f4xx_it.c **** }
 284:Src/stm32f4xx_it.c **** 
 285:Src/stm32f4xx_it.c **** /**
 286:Src/stm32f4xx_it.c **** * @brief This function handles EXTI line[15:10] interrupts.
 287:Src/stm32f4xx_it.c **** */
 288:Src/stm32f4xx_it.c **** void EXTI15_10_IRQHandler(void)
 289:Src/stm32f4xx_it.c **** {
 398              		.loc 1 289 0
 399              		.cfi_startproc
 400              		@ args = 0, pretend = 0, frame = 0
 401              		@ frame_needed = 0, uses_anonymous_args = 0
 402 0000 08B5     		push	{r3, lr}
 403              	.LCFI7:
 404              		.cfi_def_cfa_offset 8
 405              		.cfi_offset 3, -8
 406              		.cfi_offset 14, -4
 290:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI15_10_IRQn 0 */
 291:Src/stm32f4xx_it.c ****     if(HAL_GPIO_ReadPin(TAPE_LEFT_GPIO_Port, TAPE_LEFT_Pin)){
 407              		.loc 1 291 0
 408 0002 0E48     		ldr	r0, .L43
 409 0004 4FF48041 		mov	r1, #16384
 410 0008 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 411              	.LVL8:
 412 000c 18B1     		cbz	r0, .L40
 292:Src/stm32f4xx_it.c ****         TAPE_LEFT_STATE = FLAGGED;
 413              		.loc 1 292 0
 414 000e 0122     		movs	r2, #1
 415 0010 0B4B     		ldr	r3, .L43+4
 416 0012 1A70     		strb	r2, [r3]
 417 0014 08E0     		b	.L41
 418              	.L40:
 293:Src/stm32f4xx_it.c ****     }else if(HAL_GPIO_ReadPin(TAPE_RIGHT_GPIO_Port, TAPE_RIGHT_Pin)){
 419              		.loc 1 293 0
 420 0016 0948     		ldr	r0, .L43
 421 0018 4FF40041 		mov	r1, #32768
 422 001c FFF7FEFF 		bl	HAL_GPIO_ReadPin
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s 			page 13


 423              	.LVL9:
 424 0020 10B1     		cbz	r0, .L41
 294:Src/stm32f4xx_it.c ****         TAPE_RIGHT_STATE = FLAGGED;
 425              		.loc 1 294 0
 426 0022 0122     		movs	r2, #1
 427 0024 074B     		ldr	r3, .L43+8
 428 0026 1A70     		strb	r2, [r3]
 429              	.L41:
 295:Src/stm32f4xx_it.c ****     }
 296:Src/stm32f4xx_it.c **** 
 297:Src/stm32f4xx_it.c ****   /* USER CODE END EXTI15_10_IRQn 0 */
 298:Src/stm32f4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_14);
 430              		.loc 1 298 0
 431 0028 4FF48040 		mov	r0, #16384
 432 002c FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 433              	.LVL10:
 299:Src/stm32f4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_15);
 434              		.loc 1 299 0
 435 0030 4FF40040 		mov	r0, #32768
 436 0034 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 437              	.LVL11:
 438 0038 08BD     		pop	{r3, pc}
 439              	.L44:
 440 003a 00BF     		.align	2
 441              	.L43:
 442 003c 00040240 		.word	1073873920
 443 0040 00000000 		.word	TAPE_LEFT_STATE
 444 0044 00000000 		.word	TAPE_RIGHT_STATE
 445              		.cfi_endproc
 446              	.LFE138:
 448              		.section	.text.DMA2_Stream0_IRQHandler,"ax",%progbits
 449              		.align	2
 450              		.global	DMA2_Stream0_IRQHandler
 451              		.thumb
 452              		.thumb_func
 454              	DMA2_Stream0_IRQHandler:
 455              	.LFB139:
 300:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI15_10_IRQn 1 */
 301:Src/stm32f4xx_it.c **** 
 302:Src/stm32f4xx_it.c ****   /* USER CODE END EXTI15_10_IRQn 1 */
 303:Src/stm32f4xx_it.c **** }
 304:Src/stm32f4xx_it.c **** 
 305:Src/stm32f4xx_it.c **** /**
 306:Src/stm32f4xx_it.c **** * @brief This function handles DMA2 stream0 global interrupt.
 307:Src/stm32f4xx_it.c **** */
 308:Src/stm32f4xx_it.c **** void DMA2_Stream0_IRQHandler(void)
 309:Src/stm32f4xx_it.c **** {
 456              		.loc 1 309 0
 457              		.cfi_startproc
 458              		@ args = 0, pretend = 0, frame = 0
 459              		@ frame_needed = 0, uses_anonymous_args = 0
 460 0000 08B5     		push	{r3, lr}
 461              	.LCFI8:
 462              		.cfi_def_cfa_offset 8
 463              		.cfi_offset 3, -8
 464              		.cfi_offset 14, -4
 310:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream0_IRQn 0 */
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s 			page 14


 311:Src/stm32f4xx_it.c **** 
 312:Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream0_IRQn 0 */
 313:Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_adc1);
 465              		.loc 1 313 0
 466 0002 0248     		ldr	r0, .L47
 467 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 468              	.LVL12:
 469 0008 08BD     		pop	{r3, pc}
 470              	.L48:
 471 000a 00BF     		.align	2
 472              	.L47:
 473 000c 00000000 		.word	hdma_adc1
 474              		.cfi_endproc
 475              	.LFE139:
 477              		.text
 478              	.Letext0:
 479              		.file 2 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/machine/_default_types
 480              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/sys/_stdint.h"
 481              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 482              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 483              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 484              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 485              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 486              		.file 9 "Drivers/CMSIS/Include/core_cm4.h"
 487              		.file 10 "Inc/extern_vars.h"
 488              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 489              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s:21     .text.NMI_Handler:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s:26     .text.NMI_Handler:0000000000000000 NMI_Handler
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s:39     .text.HardFault_Handler:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s:44     .text.HardFault_Handler:0000000000000000 HardFault_Handler
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s:59     .text.MemManage_Handler:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s:64     .text.MemManage_Handler:0000000000000000 MemManage_Handler
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s:79     .text.BusFault_Handler:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s:84     .text.BusFault_Handler:0000000000000000 BusFault_Handler
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s:99     .text.UsageFault_Handler:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s:104    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s:119    .text.SVC_Handler:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s:124    .text.SVC_Handler:0000000000000000 SVC_Handler
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s:136    .text.DebugMon_Handler:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s:141    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s:153    .text.PendSV_Handler:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s:158    .text.PendSV_Handler:0000000000000000 PendSV_Handler
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s:170    .text.SysTick_Handler:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s:175    .text.SysTick_Handler:0000000000000000 SysTick_Handler
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s:198    .text.EXTI0_IRQHandler:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s:203    .text.EXTI0_IRQHandler:0000000000000000 EXTI0_IRQHandler
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s:225    .text.EXTI0_IRQHandler:0000000000000010 $d
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s:230    .text.EXTI1_IRQHandler:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s:235    .text.EXTI1_IRQHandler:0000000000000000 EXTI1_IRQHandler
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s:258    .text.EXTI1_IRQHandler:0000000000000010 $d
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s:263    .text.EXTI2_IRQHandler:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s:268    .text.EXTI2_IRQHandler:0000000000000000 EXTI2_IRQHandler
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s:291    .text.EXTI2_IRQHandler:0000000000000010 $d
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s:296    .text.EXTI3_IRQHandler:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s:301    .text.EXTI3_IRQHandler:0000000000000000 EXTI3_IRQHandler
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s:324    .text.EXTI3_IRQHandler:0000000000000010 $d
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s:329    .text.EXTI4_IRQHandler:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s:334    .text.EXTI4_IRQHandler:0000000000000000 EXTI4_IRQHandler
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s:357    .text.EXTI4_IRQHandler:0000000000000010 $d
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s:362    .text.ADC_IRQHandler:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s:367    .text.ADC_IRQHandler:0000000000000000 ADC_IRQHandler
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s:386    .text.ADC_IRQHandler:000000000000000c $d
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s:391    .text.EXTI15_10_IRQHandler:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s:396    .text.EXTI15_10_IRQHandler:0000000000000000 EXTI15_10_IRQHandler
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s:442    .text.EXTI15_10_IRQHandler:000000000000003c $d
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s:449    .text.DMA2_Stream0_IRQHandler:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s:454    .text.DMA2_Stream0_IRQHandler:0000000000000000 DMA2_Stream0_IRQHandler
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s:473    .text.DMA2_Stream0_IRQHandler:000000000000000c $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_SYSTICK_IRQHandler
HAL_GPIO_EXTI_IRQHandler
PI_INT_STATE
IR_INT_STATE
EDGE_LEFT_STATE
EDGE_RIGHT_STATE
CLAW_INT_STATE
HAL_ADC_IRQHandler
hadc1
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccei5HSD.s 			page 16


HAL_GPIO_ReadPin
TAPE_LEFT_STATE
TAPE_RIGHT_STATE
HAL_DMA_IRQHandler
hdma_adc1
