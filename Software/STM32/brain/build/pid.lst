ARM GAS  /var/folders/1t/b_pdlv_14gngm6ztkcy5zjlw0000gn/T//ccrOowxy.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"pid.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.pid_Init,"ax",%progbits
  21              		.align	2
  22              		.global	pid_Init
  23              		.thumb
  24              		.thumb_func
  26              	pid_Init:
  27              	.LFB123:
  28              		.file 1 "Src/pid.c"
   1:Src/pid.c     **** #include"pid.h"
   2:Src/pid.c     **** 
   3:Src/pid.c     **** PID_t pid_Init(uint16_t kp, uint16_t kd, uint16_t ki, int16_t i_max, uint16_t g){
  29              		.loc 1 3 0
  30              		.cfi_startproc
  31              		@ args = 8, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
  35 0000 10B4     		push	{r4}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 4
  38              		.cfi_offset 4, -4
   4:Src/pid.c     ****     PID_t PID;
   5:Src/pid.c     ****     PID.kp = kp;
  39              		.loc 1 5 0
  40 0002 0180     		strh	r1, [r0]	@ movhi
   6:Src/pid.c     ****     PID.kd = kd;
  41              		.loc 1 6 0
  42 0004 4280     		strh	r2, [r0, #2]	@ movhi
   7:Src/pid.c     ****     PID.ki = ki;
  43              		.loc 1 7 0
  44 0006 8380     		strh	r3, [r0, #4]	@ movhi
   8:Src/pid.c     ****     PID.i = 0;
  45              		.loc 1 8 0
  46 0008 0023     		movs	r3, #0
  47              	.LVL1:
  48 000a 8360     		str	r3, [r0, #8]
   9:Src/pid.c     ****     PID.i_max = i_max;
  49              		.loc 1 9 0
ARM GAS  /var/folders/1t/b_pdlv_14gngm6ztkcy5zjlw0000gn/T//ccrOowxy.s 			page 2


  50 000c BDF90420 		ldrsh	r2, [sp, #4]
  51              	.LVL2:
  52 0010 8281     		strh	r2, [r0, #12]	@ movhi
  10:Src/pid.c     ****     PID.gain = g;
  53              		.loc 1 10 0
  54 0012 BDF80820 		ldrh	r2, [sp, #8]
  55 0016 C281     		strh	r2, [r0, #14]	@ movhi
  11:Src/pid.c     ****     PID.err = 0;
  56              		.loc 1 11 0
  57 0018 0361     		str	r3, [r0, #16]
  12:Src/pid.c     ****     PID.count = 0;
  58              		.loc 1 12 0
  59 001a 4361     		str	r3, [r0, #20]
  13:Src/pid.c     **** 
  14:Src/pid.c     ****     return PID;
  15:Src/pid.c     **** }
  60              		.loc 1 15 0
  61 001c 5DF8044B 		ldr	r4, [sp], #4
  62              	.LCFI1:
  63              		.cfi_restore 4
  64              		.cfi_def_cfa_offset 0
  65              	.LVL3:
  66 0020 7047     		bx	lr
  67              		.cfi_endproc
  68              	.LFE123:
  70 0022 00BF     		.section	.text.pid_GetGain,"ax",%progbits
  71              		.align	2
  72              		.global	pid_GetGain
  73              		.thumb
  74              		.thumb_func
  76              	pid_GetGain:
  77              	.LFB124:
  16:Src/pid.c     **** 
  17:Src/pid.c     **** int32_t pid_GetGain(PID_t *PID){
  78              		.loc 1 17 0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              		@ link register save eliminated.
  83              	.LVL4:
  84 0000 70B4     		push	{r4, r5, r6}
  85              	.LCFI2:
  86              		.cfi_def_cfa_offset 12
  87              		.cfi_offset 4, -12
  88              		.cfi_offset 5, -8
  89              		.cfi_offset 6, -4
  18:Src/pid.c     ****     /* Get current values for P, I, and D */
  19:Src/pid.c     ****     PID->count += 10;
  90              		.loc 1 19 0
  91 0002 4369     		ldr	r3, [r0, #20]
  92 0004 0A33     		adds	r3, r3, #10
  93 0006 4361     		str	r3, [r0, #20]
  20:Src/pid.c     ****     int32_t p = (int) PID->kp * PID->err;
  94              		.loc 1 20 0
  95 0008 0588     		ldrh	r5, [r0]
  96 000a 0169     		ldr	r1, [r0, #16]
  97 000c 01FB05F5 		mul	r5, r1, r5
ARM GAS  /var/folders/1t/b_pdlv_14gngm6ztkcy5zjlw0000gn/T//ccrOowxy.s 			page 3


  98              	.LVL5:
  21:Src/pid.c     ****     int32_t d = (int) PID->kd * PID->err / (PID->count);  // / 1000 to get seconds
  99              		.loc 1 21 0
 100 0010 4288     		ldrh	r2, [r0, #2]
 101 0012 02FB01F2 		mul	r2, r2, r1
 102 0016 B2FBF3F2 		udiv	r2, r2, r3
 103              	.LVL6:
  22:Src/pid.c     ****     PID->i = PID->i + PID->ki * PID->err;
 104              		.loc 1 22 0
 105 001a 8368     		ldr	r3, [r0, #8]
 106 001c 8488     		ldrh	r4, [r0, #4]
 107 001e 04FB0134 		mla	r4, r4, r1, r3
 108 0022 8460     		str	r4, [r0, #8]
  23:Src/pid.c     ****     
  24:Src/pid.c     ****     /* Cap absolute value of integral control to keep it stable */
  25:Src/pid.c     ****     if(PID->i < -1 * PID->i_max){ PID->i = -1 * PID->i_max; }
 109              		.loc 1 25 0
 110 0024 B0F90C30 		ldrsh	r3, [r0, #12]
 111 0028 5E42     		negs	r6, r3
 112 002a B442     		cmp	r4, r6
 113 002c 00DA     		bge	.L4
 114              		.loc 1 25 0 is_stmt 0 discriminator 1
 115 002e 8660     		str	r6, [r0, #8]
 116              	.L4:
  26:Src/pid.c     ****     if(PID->i > PID->i_max){ PID->i = PID->i_max; }
 117              		.loc 1 26 0 is_stmt 1
 118 0030 8468     		ldr	r4, [r0, #8]
 119 0032 A342     		cmp	r3, r4
 120 0034 00DA     		bge	.L5
 121              		.loc 1 26 0 is_stmt 0 discriminator 1
 122 0036 8360     		str	r3, [r0, #8]
 123              	.L5:
  27:Src/pid.c     **** 
  28:Src/pid.c     ****     /* Reset derivative term if err returns to 0 */
  29:Src/pid.c     ****     if(PID->err == 0){ PID->count = 0; }
 124              		.loc 1 29 0 is_stmt 1
 125 0038 09B9     		cbnz	r1, .L6
 126              		.loc 1 29 0 is_stmt 0 discriminator 1
 127 003a 0023     		movs	r3, #0
 128 003c 4361     		str	r3, [r0, #20]
 129              	.L6:
  30:Src/pid.c     ****     
  31:Src/pid.c     ****     return (PID->i + p + d) * PID->gain;
 130              		.loc 1 31 0 is_stmt 1
 131 003e 8368     		ldr	r3, [r0, #8]
 132 0040 2B44     		add	r3, r3, r5
 133 0042 1344     		add	r3, r3, r2
 134 0044 C089     		ldrh	r0, [r0, #14]
 135              	.LVL7:
  32:Src/pid.c     **** }
 136              		.loc 1 32 0
 137 0046 00FB03F0 		mul	r0, r0, r3
 138 004a 70BC     		pop	{r4, r5, r6}
 139              	.LCFI3:
 140              		.cfi_restore 6
 141              		.cfi_restore 5
 142              		.cfi_restore 4
ARM GAS  /var/folders/1t/b_pdlv_14gngm6ztkcy5zjlw0000gn/T//ccrOowxy.s 			page 4


 143              		.cfi_def_cfa_offset 0
 144              	.LVL8:
 145 004c 7047     		bx	lr
 146              		.cfi_endproc
 147              	.LFE124:
 149 004e 00BF     		.text
 150              	.Letext0:
 151              		.file 2 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/machine/_default_types
 152              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/sys/_stdint.h"
 153              		.file 4 "Inc/pid.h"
 154              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
ARM GAS  /var/folders/1t/b_pdlv_14gngm6ztkcy5zjlw0000gn/T//ccrOowxy.s 			page 5


DEFINED SYMBOLS
                            *ABS*:0000000000000000 pid.c
/var/folders/1t/b_pdlv_14gngm6ztkcy5zjlw0000gn/T//ccrOowxy.s:21     .text.pid_Init:0000000000000000 $t
/var/folders/1t/b_pdlv_14gngm6ztkcy5zjlw0000gn/T//ccrOowxy.s:26     .text.pid_Init:0000000000000000 pid_Init
/var/folders/1t/b_pdlv_14gngm6ztkcy5zjlw0000gn/T//ccrOowxy.s:71     .text.pid_GetGain:0000000000000000 $t
/var/folders/1t/b_pdlv_14gngm6ztkcy5zjlw0000gn/T//ccrOowxy.s:76     .text.pid_GetGain:0000000000000000 pid_GetGain
                     .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
