ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"tim.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.MX_TIM2_Init,"ax",%progbits
  21              		.align	2
  22              		.global	MX_TIM2_Init
  23              		.thumb
  24              		.thumb_func
  26              	MX_TIM2_Init:
  27              	.LFB124:
  28              		.file 1 "Src/tim.c"
   1:Src/tim.c     **** /**
   2:Src/tim.c     ****   ******************************************************************************
   3:Src/tim.c     ****   * File Name          : TIM.c
   4:Src/tim.c     ****   * Description        : This file provides code for the configuration
   5:Src/tim.c     ****   *                      of the TIM instances.
   6:Src/tim.c     ****   ******************************************************************************
   7:Src/tim.c     ****   ** This notice applies to any and all portions of this file
   8:Src/tim.c     ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/tim.c     ****   * USER CODE END. Other portions of this file, whether 
  10:Src/tim.c     ****   * inserted by the user or by software development tools
  11:Src/tim.c     ****   * are owned by their respective copyright owners.
  12:Src/tim.c     ****   *
  13:Src/tim.c     ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/tim.c     ****   *
  15:Src/tim.c     ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/tim.c     ****   * are permitted provided that the following conditions are met:
  17:Src/tim.c     ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/tim.c     ****   *      this list of conditions and the following disclaimer.
  19:Src/tim.c     ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/tim.c     ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/tim.c     ****   *      and/or other materials provided with the distribution.
  22:Src/tim.c     ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/tim.c     ****   *      may be used to endorse or promote products derived from this software
  24:Src/tim.c     ****   *      without specific prior written permission.
  25:Src/tim.c     ****   *
  26:Src/tim.c     ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/tim.c     ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/tim.c     ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/tim.c     ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/tim.c     ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s 			page 2


  31:Src/tim.c     ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/tim.c     ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/tim.c     ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/tim.c     ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/tim.c     ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/tim.c     ****   *
  37:Src/tim.c     ****   ******************************************************************************
  38:Src/tim.c     ****   */
  39:Src/tim.c     **** 
  40:Src/tim.c     **** /* Includes ------------------------------------------------------------------*/
  41:Src/tim.c     **** #include "tim.h"
  42:Src/tim.c     **** 
  43:Src/tim.c     **** #include "gpio.h"
  44:Src/tim.c     **** 
  45:Src/tim.c     **** /* USER CODE BEGIN 0 */
  46:Src/tim.c     **** 
  47:Src/tim.c     **** /* USER CODE END 0 */
  48:Src/tim.c     **** 
  49:Src/tim.c     **** TIM_HandleTypeDef htim1;
  50:Src/tim.c     **** TIM_HandleTypeDef htim2;
  51:Src/tim.c     **** TIM_HandleTypeDef htim3;
  52:Src/tim.c     **** TIM_HandleTypeDef htim4;
  53:Src/tim.c     **** TIM_HandleTypeDef htim5;
  54:Src/tim.c     **** TIM_HandleTypeDef htim9;
  55:Src/tim.c     **** 
  56:Src/tim.c     **** /* TIM1 init function */
  57:Src/tim.c     **** void MX_TIM1_Init(void)
  58:Src/tim.c     **** {
  59:Src/tim.c     ****   TIM_ClockConfigTypeDef sClockSourceConfig;
  60:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
  61:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC;
  62:Src/tim.c     ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig;
  63:Src/tim.c     **** 
  64:Src/tim.c     ****   htim1.Instance = TIM1;
  65:Src/tim.c     ****   htim1.Init.Prescaler = 49;
  66:Src/tim.c     ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
  67:Src/tim.c     ****   htim1.Init.Period = 999;
  68:Src/tim.c     ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  69:Src/tim.c     ****   htim1.Init.RepetitionCounter = 0;
  70:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
  71:Src/tim.c     ****   {
  72:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
  73:Src/tim.c     ****   }
  74:Src/tim.c     **** 
  75:Src/tim.c     ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
  76:Src/tim.c     ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
  77:Src/tim.c     ****   {
  78:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
  79:Src/tim.c     ****   }
  80:Src/tim.c     **** 
  81:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
  82:Src/tim.c     ****   {
  83:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
  84:Src/tim.c     ****   }
  85:Src/tim.c     **** 
  86:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
  87:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s 			page 3


  88:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
  89:Src/tim.c     ****   {
  90:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
  91:Src/tim.c     ****   }
  92:Src/tim.c     **** 
  93:Src/tim.c     ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
  94:Src/tim.c     ****   sConfigOC.Pulse = 0;
  95:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
  96:Src/tim.c     ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
  97:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
  98:Src/tim.c     ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
  99:Src/tim.c     ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 100:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 101:Src/tim.c     ****   {
 102:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 103:Src/tim.c     ****   }
 104:Src/tim.c     **** 
 105:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 106:Src/tim.c     ****   {
 107:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 108:Src/tim.c     ****   }
 109:Src/tim.c     **** 
 110:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 111:Src/tim.c     ****   {
 112:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 113:Src/tim.c     ****   }
 114:Src/tim.c     **** 
 115:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 116:Src/tim.c     ****   {
 117:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 118:Src/tim.c     ****   }
 119:Src/tim.c     **** 
 120:Src/tim.c     ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 121:Src/tim.c     ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 122:Src/tim.c     ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 123:Src/tim.c     ****   sBreakDeadTimeConfig.DeadTime = 0;
 124:Src/tim.c     ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 125:Src/tim.c     ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 126:Src/tim.c     ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 127:Src/tim.c     ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 128:Src/tim.c     ****   {
 129:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 130:Src/tim.c     ****   }
 131:Src/tim.c     **** 
 132:Src/tim.c     ****   HAL_TIM_MspPostInit(&htim1);
 133:Src/tim.c     **** 
 134:Src/tim.c     **** }
 135:Src/tim.c     **** /* TIM2 init function */
 136:Src/tim.c     **** void MX_TIM2_Init(void)
 137:Src/tim.c     **** {
  29              		.loc 1 137 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 24
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 00B5     		push	{lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s 			page 4


  36              		.cfi_offset 14, -4
  37 0002 87B0     		sub	sp, sp, #28
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 32
 138:Src/tim.c     ****   TIM_ClockConfigTypeDef sClockSourceConfig;
 139:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
 140:Src/tim.c     **** 
 141:Src/tim.c     ****   htim2.Instance = TIM2;
  40              		.loc 1 141 0
  41 0004 1548     		ldr	r0, .L6
  42 0006 4FF08043 		mov	r3, #1073741824
  43 000a 0360     		str	r3, [r0]
 142:Src/tim.c     ****   htim2.Init.Prescaler = 0;
  44              		.loc 1 142 0
  45 000c 0023     		movs	r3, #0
  46 000e 4360     		str	r3, [r0, #4]
 143:Src/tim.c     ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
  47              		.loc 1 143 0
  48 0010 8360     		str	r3, [r0, #8]
 144:Src/tim.c     ****   htim2.Init.Period = 0;
  49              		.loc 1 144 0
  50 0012 C360     		str	r3, [r0, #12]
 145:Src/tim.c     ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  51              		.loc 1 145 0
  52 0014 0361     		str	r3, [r0, #16]
 146:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
  53              		.loc 1 146 0
  54 0016 FFF7FEFF 		bl	HAL_TIM_Base_Init
  55              	.LVL0:
  56 001a 18B1     		cbz	r0, .L2
 147:Src/tim.c     ****   {
 148:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
  57              		.loc 1 148 0
  58 001c 1048     		ldr	r0, .L6+4
  59 001e 9421     		movs	r1, #148
  60 0020 FFF7FEFF 		bl	_Error_Handler
  61              	.LVL1:
  62              	.L2:
 149:Src/tim.c     ****   }
 150:Src/tim.c     **** 
 151:Src/tim.c     ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
  63              		.loc 1 151 0
  64 0024 06A9     		add	r1, sp, #24
  65 0026 4FF48053 		mov	r3, #4096
  66 002a 41F8103D 		str	r3, [r1, #-16]!
 152:Src/tim.c     ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
  67              		.loc 1 152 0
  68 002e 0B48     		ldr	r0, .L6
  69 0030 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
  70              	.LVL2:
  71 0034 18B1     		cbz	r0, .L3
 153:Src/tim.c     ****   {
 154:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
  72              		.loc 1 154 0
  73 0036 0A48     		ldr	r0, .L6+4
  74 0038 9A21     		movs	r1, #154
  75 003a FFF7FEFF 		bl	_Error_Handler
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s 			page 5


  76              	.LVL3:
  77              	.L3:
 155:Src/tim.c     ****   }
 156:Src/tim.c     **** 
 157:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
  78              		.loc 1 157 0
  79 003e 0023     		movs	r3, #0
  80 0040 0093     		str	r3, [sp]
 158:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
  81              		.loc 1 158 0
  82 0042 0193     		str	r3, [sp, #4]
 159:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
  83              		.loc 1 159 0
  84 0044 0548     		ldr	r0, .L6
  85 0046 6946     		mov	r1, sp
  86 0048 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
  87              	.LVL4:
  88 004c 18B1     		cbz	r0, .L1
 160:Src/tim.c     ****   {
 161:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
  89              		.loc 1 161 0
  90 004e 0448     		ldr	r0, .L6+4
  91 0050 A121     		movs	r1, #161
  92 0052 FFF7FEFF 		bl	_Error_Handler
  93              	.LVL5:
  94              	.L1:
 162:Src/tim.c     ****   }
 163:Src/tim.c     **** 
 164:Src/tim.c     **** }
  95              		.loc 1 164 0
  96 0056 07B0     		add	sp, sp, #28
  97              	.LCFI2:
  98              		.cfi_def_cfa_offset 4
  99              		@ sp needed
 100 0058 5DF804FB 		ldr	pc, [sp], #4
 101              	.L7:
 102              		.align	2
 103              	.L6:
 104 005c 00000000 		.word	htim2
 105 0060 00000000 		.word	.LC0
 106              		.cfi_endproc
 107              	.LFE124:
 109              		.section	.text.MX_TIM4_Init,"ax",%progbits
 110              		.align	2
 111              		.global	MX_TIM4_Init
 112              		.thumb
 113              		.thumb_func
 115              	MX_TIM4_Init:
 116              	.LFB126:
 165:Src/tim.c     **** /* TIM3 init function */
 166:Src/tim.c     **** void MX_TIM3_Init(void)
 167:Src/tim.c     **** {
 168:Src/tim.c     ****   TIM_ClockConfigTypeDef sClockSourceConfig;
 169:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
 170:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC;
 171:Src/tim.c     **** 
 172:Src/tim.c     ****   htim3.Instance = TIM3;
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s 			page 6


 173:Src/tim.c     ****   htim3.Init.Prescaler = 71;
 174:Src/tim.c     ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 175:Src/tim.c     ****   htim3.Init.Period = 19999;
 176:Src/tim.c     ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 177:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 178:Src/tim.c     ****   {
 179:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 180:Src/tim.c     ****   }
 181:Src/tim.c     **** 
 182:Src/tim.c     ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 183:Src/tim.c     ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 184:Src/tim.c     ****   {
 185:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 186:Src/tim.c     ****   }
 187:Src/tim.c     **** 
 188:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 189:Src/tim.c     ****   {
 190:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 191:Src/tim.c     ****   }
 192:Src/tim.c     **** 
 193:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 194:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 195:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 196:Src/tim.c     ****   {
 197:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 198:Src/tim.c     ****   }
 199:Src/tim.c     **** 
 200:Src/tim.c     ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 201:Src/tim.c     ****   sConfigOC.Pulse = 0;
 202:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 203:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 204:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 205:Src/tim.c     ****   {
 206:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 207:Src/tim.c     ****   }
 208:Src/tim.c     **** 
 209:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 210:Src/tim.c     ****   {
 211:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 212:Src/tim.c     ****   }
 213:Src/tim.c     **** 
 214:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 215:Src/tim.c     ****   {
 216:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 217:Src/tim.c     ****   }
 218:Src/tim.c     **** 
 219:Src/tim.c     ****   HAL_TIM_MspPostInit(&htim3);
 220:Src/tim.c     **** 
 221:Src/tim.c     **** }
 222:Src/tim.c     **** /* TIM4 init function */
 223:Src/tim.c     **** void MX_TIM4_Init(void)
 224:Src/tim.c     **** {
 117              		.loc 1 224 0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 48
 120              		@ frame_needed = 0, uses_anonymous_args = 0
 121 0000 00B5     		push	{lr}
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s 			page 7


 122              	.LCFI3:
 123              		.cfi_def_cfa_offset 4
 124              		.cfi_offset 14, -4
 125 0002 8DB0     		sub	sp, sp, #52
 126              	.LCFI4:
 127              		.cfi_def_cfa_offset 56
 225:Src/tim.c     ****   TIM_Encoder_InitTypeDef sConfig;
 226:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
 227:Src/tim.c     **** 
 228:Src/tim.c     ****   htim4.Instance = TIM4;
 128              		.loc 1 228 0
 129 0004 1648     		ldr	r0, .L12
 130 0006 174B     		ldr	r3, .L12+4
 131 0008 0360     		str	r3, [r0]
 229:Src/tim.c     ****   htim4.Init.Prescaler = 0;
 132              		.loc 1 229 0
 133 000a 0023     		movs	r3, #0
 134 000c 4360     		str	r3, [r0, #4]
 230:Src/tim.c     ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 135              		.loc 1 230 0
 136 000e 8360     		str	r3, [r0, #8]
 231:Src/tim.c     ****   htim4.Init.Period = 65535;
 137              		.loc 1 231 0
 138 0010 4FF6FF72 		movw	r2, #65535
 139 0014 C260     		str	r2, [r0, #12]
 232:Src/tim.c     ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 140              		.loc 1 232 0
 141 0016 0361     		str	r3, [r0, #16]
 233:Src/tim.c     ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 142              		.loc 1 233 0
 143 0018 0322     		movs	r2, #3
 144 001a 0392     		str	r2, [sp, #12]
 234:Src/tim.c     ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 145              		.loc 1 234 0
 146 001c 0493     		str	r3, [sp, #16]
 235:Src/tim.c     ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 147              		.loc 1 235 0
 148 001e 0121     		movs	r1, #1
 149 0020 0591     		str	r1, [sp, #20]
 236:Src/tim.c     ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 150              		.loc 1 236 0
 151 0022 0693     		str	r3, [sp, #24]
 237:Src/tim.c     ****   sConfig.IC1Filter = 15;
 152              		.loc 1 237 0
 153 0024 0F22     		movs	r2, #15
 154 0026 0792     		str	r2, [sp, #28]
 238:Src/tim.c     ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 155              		.loc 1 238 0
 156 0028 0893     		str	r3, [sp, #32]
 239:Src/tim.c     ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 157              		.loc 1 239 0
 158 002a 0991     		str	r1, [sp, #36]
 240:Src/tim.c     ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 159              		.loc 1 240 0
 160 002c 0A93     		str	r3, [sp, #40]
 241:Src/tim.c     ****   sConfig.IC2Filter = 15;
 161              		.loc 1 241 0
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s 			page 8


 162 002e 0B92     		str	r2, [sp, #44]
 242:Src/tim.c     ****   if (HAL_TIM_Encoder_Init(&htim4, &sConfig) != HAL_OK)
 163              		.loc 1 242 0
 164 0030 03A9     		add	r1, sp, #12
 165 0032 FFF7FEFF 		bl	HAL_TIM_Encoder_Init
 166              	.LVL6:
 167 0036 18B1     		cbz	r0, .L9
 243:Src/tim.c     ****   {
 244:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 168              		.loc 1 244 0
 169 0038 0B48     		ldr	r0, .L12+8
 170 003a F421     		movs	r1, #244
 171 003c FFF7FEFF 		bl	_Error_Handler
 172              	.LVL7:
 173              	.L9:
 245:Src/tim.c     ****   }
 246:Src/tim.c     **** 
 247:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 174              		.loc 1 247 0
 175 0040 0023     		movs	r3, #0
 176 0042 0193     		str	r3, [sp, #4]
 248:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 177              		.loc 1 248 0
 178 0044 0293     		str	r3, [sp, #8]
 249:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 179              		.loc 1 249 0
 180 0046 0648     		ldr	r0, .L12
 181 0048 01A9     		add	r1, sp, #4
 182 004a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 183              	.LVL8:
 184 004e 18B1     		cbz	r0, .L8
 250:Src/tim.c     ****   {
 251:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 185              		.loc 1 251 0
 186 0050 0548     		ldr	r0, .L12+8
 187 0052 FB21     		movs	r1, #251
 188 0054 FFF7FEFF 		bl	_Error_Handler
 189              	.LVL9:
 190              	.L8:
 252:Src/tim.c     ****   }
 253:Src/tim.c     **** 
 254:Src/tim.c     **** }
 191              		.loc 1 254 0
 192 0058 0DB0     		add	sp, sp, #52
 193              	.LCFI5:
 194              		.cfi_def_cfa_offset 4
 195              		@ sp needed
 196 005a 5DF804FB 		ldr	pc, [sp], #4
 197              	.L13:
 198 005e 00BF     		.align	2
 199              	.L12:
 200 0060 00000000 		.word	htim4
 201 0064 00080040 		.word	1073743872
 202 0068 00000000 		.word	.LC0
 203              		.cfi_endproc
 204              	.LFE126:
 206              		.section	.text.MX_TIM5_Init,"ax",%progbits
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s 			page 9


 207              		.align	2
 208              		.global	MX_TIM5_Init
 209              		.thumb
 210              		.thumb_func
 212              	MX_TIM5_Init:
 213              	.LFB127:
 255:Src/tim.c     **** /* TIM5 init function */
 256:Src/tim.c     **** void MX_TIM5_Init(void)
 257:Src/tim.c     **** {
 214              		.loc 1 257 0
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 48
 217              		@ frame_needed = 0, uses_anonymous_args = 0
 218 0000 00B5     		push	{lr}
 219              	.LCFI6:
 220              		.cfi_def_cfa_offset 4
 221              		.cfi_offset 14, -4
 222 0002 8DB0     		sub	sp, sp, #52
 223              	.LCFI7:
 224              		.cfi_def_cfa_offset 56
 258:Src/tim.c     ****   TIM_Encoder_InitTypeDef sConfig;
 259:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
 260:Src/tim.c     **** 
 261:Src/tim.c     ****   htim5.Instance = TIM5;
 225              		.loc 1 261 0
 226 0004 1748     		ldr	r0, .L18
 227 0006 184B     		ldr	r3, .L18+4
 228 0008 0360     		str	r3, [r0]
 262:Src/tim.c     ****   htim5.Init.Prescaler = 0;
 229              		.loc 1 262 0
 230 000a 0023     		movs	r3, #0
 231 000c 4360     		str	r3, [r0, #4]
 263:Src/tim.c     ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 232              		.loc 1 263 0
 233 000e 8360     		str	r3, [r0, #8]
 264:Src/tim.c     ****   htim5.Init.Period = 65535;
 234              		.loc 1 264 0
 235 0010 4FF6FF72 		movw	r2, #65535
 236 0014 C260     		str	r2, [r0, #12]
 265:Src/tim.c     ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 237              		.loc 1 265 0
 238 0016 0361     		str	r3, [r0, #16]
 266:Src/tim.c     ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 239              		.loc 1 266 0
 240 0018 0322     		movs	r2, #3
 241 001a 0392     		str	r2, [sp, #12]
 267:Src/tim.c     ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 242              		.loc 1 267 0
 243 001c 0493     		str	r3, [sp, #16]
 268:Src/tim.c     ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 244              		.loc 1 268 0
 245 001e 0121     		movs	r1, #1
 246 0020 0591     		str	r1, [sp, #20]
 269:Src/tim.c     ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 247              		.loc 1 269 0
 248 0022 0693     		str	r3, [sp, #24]
 270:Src/tim.c     ****   sConfig.IC1Filter = 15;
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s 			page 10


 249              		.loc 1 270 0
 250 0024 0F22     		movs	r2, #15
 251 0026 0792     		str	r2, [sp, #28]
 271:Src/tim.c     ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 252              		.loc 1 271 0
 253 0028 0893     		str	r3, [sp, #32]
 272:Src/tim.c     ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 254              		.loc 1 272 0
 255 002a 0991     		str	r1, [sp, #36]
 273:Src/tim.c     ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 256              		.loc 1 273 0
 257 002c 0A93     		str	r3, [sp, #40]
 274:Src/tim.c     ****   sConfig.IC2Filter = 15;
 258              		.loc 1 274 0
 259 002e 0B92     		str	r2, [sp, #44]
 275:Src/tim.c     ****   if (HAL_TIM_Encoder_Init(&htim5, &sConfig) != HAL_OK)
 260              		.loc 1 275 0
 261 0030 03A9     		add	r1, sp, #12
 262 0032 FFF7FEFF 		bl	HAL_TIM_Encoder_Init
 263              	.LVL10:
 264 0036 20B1     		cbz	r0, .L15
 276:Src/tim.c     ****   {
 277:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 265              		.loc 1 277 0
 266 0038 0C48     		ldr	r0, .L18+8
 267 003a 40F21511 		movw	r1, #277
 268 003e FFF7FEFF 		bl	_Error_Handler
 269              	.LVL11:
 270              	.L15:
 278:Src/tim.c     ****   }
 279:Src/tim.c     **** 
 280:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 271              		.loc 1 280 0
 272 0042 0023     		movs	r3, #0
 273 0044 0193     		str	r3, [sp, #4]
 281:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 274              		.loc 1 281 0
 275 0046 0293     		str	r3, [sp, #8]
 282:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 276              		.loc 1 282 0
 277 0048 0648     		ldr	r0, .L18
 278 004a 01A9     		add	r1, sp, #4
 279 004c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 280              	.LVL12:
 281 0050 20B1     		cbz	r0, .L14
 283:Src/tim.c     ****   {
 284:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 282              		.loc 1 284 0
 283 0052 0648     		ldr	r0, .L18+8
 284 0054 4FF48E71 		mov	r1, #284
 285 0058 FFF7FEFF 		bl	_Error_Handler
 286              	.LVL13:
 287              	.L14:
 285:Src/tim.c     ****   }
 286:Src/tim.c     **** 
 287:Src/tim.c     **** }
 288              		.loc 1 287 0
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s 			page 11


 289 005c 0DB0     		add	sp, sp, #52
 290              	.LCFI8:
 291              		.cfi_def_cfa_offset 4
 292              		@ sp needed
 293 005e 5DF804FB 		ldr	pc, [sp], #4
 294              	.L19:
 295 0062 00BF     		.align	2
 296              	.L18:
 297 0064 00000000 		.word	htim5
 298 0068 000C0040 		.word	1073744896
 299 006c 00000000 		.word	.LC0
 300              		.cfi_endproc
 301              	.LFE127:
 303              		.section	.text.MX_TIM9_Init,"ax",%progbits
 304              		.align	2
 305              		.global	MX_TIM9_Init
 306              		.thumb
 307              		.thumb_func
 309              	MX_TIM9_Init:
 310              	.LFB128:
 288:Src/tim.c     **** /* TIM9 init function */
 289:Src/tim.c     **** void MX_TIM9_Init(void)
 290:Src/tim.c     **** {
 311              		.loc 1 290 0
 312              		.cfi_startproc
 313              		@ args = 0, pretend = 0, frame = 16
 314              		@ frame_needed = 0, uses_anonymous_args = 0
 315 0000 00B5     		push	{lr}
 316              	.LCFI9:
 317              		.cfi_def_cfa_offset 4
 318              		.cfi_offset 14, -4
 319 0002 85B0     		sub	sp, sp, #20
 320              	.LCFI10:
 321              		.cfi_def_cfa_offset 24
 291:Src/tim.c     ****   TIM_ClockConfigTypeDef sClockSourceConfig;
 292:Src/tim.c     **** 
 293:Src/tim.c     ****   htim9.Instance = TIM9;
 322              		.loc 1 293 0
 323 0004 1248     		ldr	r0, .L24
 324 0006 134B     		ldr	r3, .L24+4
 325 0008 0360     		str	r3, [r0]
 294:Src/tim.c     ****   htim9.Init.Prescaler = 65535;
 326              		.loc 1 294 0
 327 000a 4FF6FF73 		movw	r3, #65535
 328 000e 4360     		str	r3, [r0, #4]
 295:Src/tim.c     ****   htim9.Init.CounterMode = TIM_COUNTERMODE_UP;
 329              		.loc 1 295 0
 330 0010 0022     		movs	r2, #0
 331 0012 8260     		str	r2, [r0, #8]
 296:Src/tim.c     ****   htim9.Init.Period = 65535;
 332              		.loc 1 296 0
 333 0014 C360     		str	r3, [r0, #12]
 297:Src/tim.c     ****   htim9.Init.ClockDivision = TIM_CLOCKDIVISION_DIV4;
 334              		.loc 1 297 0
 335 0016 4FF40073 		mov	r3, #512
 336 001a 0361     		str	r3, [r0, #16]
 298:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim9) != HAL_OK)
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s 			page 12


 337              		.loc 1 298 0
 338 001c FFF7FEFF 		bl	HAL_TIM_Base_Init
 339              	.LVL14:
 340 0020 20B1     		cbz	r0, .L21
 299:Src/tim.c     ****   {
 300:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 341              		.loc 1 300 0
 342 0022 0D48     		ldr	r0, .L24+8
 343 0024 4FF49671 		mov	r1, #300
 344 0028 FFF7FEFF 		bl	_Error_Handler
 345              	.LVL15:
 346              	.L21:
 301:Src/tim.c     ****   }
 302:Src/tim.c     **** 
 303:Src/tim.c     ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 347              		.loc 1 303 0
 348 002c 04A9     		add	r1, sp, #16
 349 002e 4FF48053 		mov	r3, #4096
 350 0032 41F8103D 		str	r3, [r1, #-16]!
 304:Src/tim.c     ****   if (HAL_TIM_ConfigClockSource(&htim9, &sClockSourceConfig) != HAL_OK)
 351              		.loc 1 304 0
 352 0036 0648     		ldr	r0, .L24
 353 0038 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 354              	.LVL16:
 355 003c 20B1     		cbz	r0, .L20
 305:Src/tim.c     ****   {
 306:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 356              		.loc 1 306 0
 357 003e 0648     		ldr	r0, .L24+8
 358 0040 4FF49971 		mov	r1, #306
 359 0044 FFF7FEFF 		bl	_Error_Handler
 360              	.LVL17:
 361              	.L20:
 307:Src/tim.c     ****   }
 308:Src/tim.c     **** 
 309:Src/tim.c     **** }
 362              		.loc 1 309 0
 363 0048 05B0     		add	sp, sp, #20
 364              	.LCFI11:
 365              		.cfi_def_cfa_offset 4
 366              		@ sp needed
 367 004a 5DF804FB 		ldr	pc, [sp], #4
 368              	.L25:
 369 004e 00BF     		.align	2
 370              	.L24:
 371 0050 00000000 		.word	htim9
 372 0054 00400140 		.word	1073823744
 373 0058 00000000 		.word	.LC0
 374              		.cfi_endproc
 375              	.LFE128:
 377              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
 378              		.align	2
 379              		.global	HAL_TIM_Base_MspInit
 380              		.thumb
 381              		.thumb_func
 383              	HAL_TIM_Base_MspInit:
 384              	.LFB129:
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s 			page 13


 310:Src/tim.c     **** 
 311:Src/tim.c     **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
 312:Src/tim.c     **** {
 385              		.loc 1 312 0
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 16
 388              		@ frame_needed = 0, uses_anonymous_args = 0
 389              		@ link register save eliminated.
 390              	.LVL18:
 391 0000 84B0     		sub	sp, sp, #16
 392              	.LCFI12:
 393              		.cfi_def_cfa_offset 16
 313:Src/tim.c     **** 
 314:Src/tim.c     ****   if(tim_baseHandle->Instance==TIM1)
 394              		.loc 1 314 0
 395 0002 0368     		ldr	r3, [r0]
 396 0004 204A     		ldr	r2, .L32
 397 0006 9342     		cmp	r3, r2
 398 0008 0CD1     		bne	.L27
 399              	.LBB2:
 315:Src/tim.c     ****   {
 316:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspInit 0 */
 317:Src/tim.c     **** 
 318:Src/tim.c     ****   /* USER CODE END TIM1_MspInit 0 */
 319:Src/tim.c     ****     /* TIM1 clock enable */
 320:Src/tim.c     ****     __HAL_RCC_TIM1_CLK_ENABLE();
 400              		.loc 1 320 0
 401 000a 0023     		movs	r3, #0
 402 000c 0093     		str	r3, [sp]
 403 000e 1F4B     		ldr	r3, .L32+4
 404 0010 5A6C     		ldr	r2, [r3, #68]
 405 0012 42F00102 		orr	r2, r2, #1
 406 0016 5A64     		str	r2, [r3, #68]
 407 0018 5B6C     		ldr	r3, [r3, #68]
 408 001a 03F00103 		and	r3, r3, #1
 409 001e 0093     		str	r3, [sp]
 410 0020 009B     		ldr	r3, [sp]
 411              	.LBE2:
 412 0022 2EE0     		b	.L26
 413              	.L27:
 321:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 322:Src/tim.c     **** 
 323:Src/tim.c     ****   /* USER CODE END TIM1_MspInit 1 */
 324:Src/tim.c     ****   }
 325:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM2)
 414              		.loc 1 325 0
 415 0024 B3F1804F 		cmp	r3, #1073741824
 416 0028 0CD1     		bne	.L29
 417              	.LBB3:
 326:Src/tim.c     ****   {
 327:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 0 */
 328:Src/tim.c     **** 
 329:Src/tim.c     ****   /* USER CODE END TIM2_MspInit 0 */
 330:Src/tim.c     ****     /* TIM2 clock enable */
 331:Src/tim.c     ****     __HAL_RCC_TIM2_CLK_ENABLE();
 418              		.loc 1 331 0
 419 002a 0023     		movs	r3, #0
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s 			page 14


 420 002c 0193     		str	r3, [sp, #4]
 421 002e 174B     		ldr	r3, .L32+4
 422 0030 1A6C     		ldr	r2, [r3, #64]
 423 0032 42F00102 		orr	r2, r2, #1
 424 0036 1A64     		str	r2, [r3, #64]
 425 0038 1B6C     		ldr	r3, [r3, #64]
 426 003a 03F00103 		and	r3, r3, #1
 427 003e 0193     		str	r3, [sp, #4]
 428 0040 019B     		ldr	r3, [sp, #4]
 429              	.LBE3:
 430 0042 1EE0     		b	.L26
 431              	.L29:
 332:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 333:Src/tim.c     **** 
 334:Src/tim.c     ****   /* USER CODE END TIM2_MspInit 1 */
 335:Src/tim.c     ****   }
 336:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM3)
 432              		.loc 1 336 0
 433 0044 124A     		ldr	r2, .L32+8
 434 0046 9342     		cmp	r3, r2
 435 0048 0CD1     		bne	.L30
 436              	.LBB4:
 337:Src/tim.c     ****   {
 338:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspInit 0 */
 339:Src/tim.c     **** 
 340:Src/tim.c     ****   /* USER CODE END TIM3_MspInit 0 */
 341:Src/tim.c     ****     /* TIM3 clock enable */
 342:Src/tim.c     ****     __HAL_RCC_TIM3_CLK_ENABLE();
 437              		.loc 1 342 0
 438 004a 0023     		movs	r3, #0
 439 004c 0293     		str	r3, [sp, #8]
 440 004e 0F4B     		ldr	r3, .L32+4
 441 0050 1A6C     		ldr	r2, [r3, #64]
 442 0052 42F00202 		orr	r2, r2, #2
 443 0056 1A64     		str	r2, [r3, #64]
 444 0058 1B6C     		ldr	r3, [r3, #64]
 445 005a 03F00203 		and	r3, r3, #2
 446 005e 0293     		str	r3, [sp, #8]
 447 0060 029B     		ldr	r3, [sp, #8]
 448              	.LBE4:
 449 0062 0EE0     		b	.L26
 450              	.L30:
 343:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspInit 1 */
 344:Src/tim.c     **** 
 345:Src/tim.c     ****   /* USER CODE END TIM3_MspInit 1 */
 346:Src/tim.c     ****   }
 347:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM9)
 451              		.loc 1 347 0
 452 0064 0B4A     		ldr	r2, .L32+12
 453 0066 9342     		cmp	r3, r2
 454 0068 0BD1     		bne	.L26
 455              	.LBB5:
 348:Src/tim.c     ****   {
 349:Src/tim.c     ****   /* USER CODE BEGIN TIM9_MspInit 0 */
 350:Src/tim.c     **** 
 351:Src/tim.c     ****   /* USER CODE END TIM9_MspInit 0 */
 352:Src/tim.c     ****     /* TIM9 clock enable */
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s 			page 15


 353:Src/tim.c     ****     __HAL_RCC_TIM9_CLK_ENABLE();
 456              		.loc 1 353 0
 457 006a 0023     		movs	r3, #0
 458 006c 0393     		str	r3, [sp, #12]
 459 006e 074B     		ldr	r3, .L32+4
 460 0070 5A6C     		ldr	r2, [r3, #68]
 461 0072 42F48032 		orr	r2, r2, #65536
 462 0076 5A64     		str	r2, [r3, #68]
 463 0078 5B6C     		ldr	r3, [r3, #68]
 464 007a 03F48033 		and	r3, r3, #65536
 465 007e 0393     		str	r3, [sp, #12]
 466 0080 039B     		ldr	r3, [sp, #12]
 467              	.L26:
 468              	.LBE5:
 354:Src/tim.c     ****   /* USER CODE BEGIN TIM9_MspInit 1 */
 355:Src/tim.c     **** 
 356:Src/tim.c     ****   /* USER CODE END TIM9_MspInit 1 */
 357:Src/tim.c     ****   }
 358:Src/tim.c     **** }
 469              		.loc 1 358 0
 470 0082 04B0     		add	sp, sp, #16
 471              	.LCFI13:
 472              		.cfi_def_cfa_offset 0
 473              		@ sp needed
 474 0084 7047     		bx	lr
 475              	.L33:
 476 0086 00BF     		.align	2
 477              	.L32:
 478 0088 00000140 		.word	1073807360
 479 008c 00380240 		.word	1073887232
 480 0090 00040040 		.word	1073742848
 481 0094 00400140 		.word	1073823744
 482              		.cfi_endproc
 483              	.LFE129:
 485              		.section	.text.HAL_TIM_Encoder_MspInit,"ax",%progbits
 486              		.align	2
 487              		.global	HAL_TIM_Encoder_MspInit
 488              		.thumb
 489              		.thumb_func
 491              	HAL_TIM_Encoder_MspInit:
 492              	.LFB130:
 359:Src/tim.c     **** 
 360:Src/tim.c     **** void HAL_TIM_Encoder_MspInit(TIM_HandleTypeDef* tim_encoderHandle)
 361:Src/tim.c     **** {
 493              		.loc 1 361 0
 494              		.cfi_startproc
 495              		@ args = 0, pretend = 0, frame = 32
 496              		@ frame_needed = 0, uses_anonymous_args = 0
 497              	.LVL19:
 498 0000 00B5     		push	{lr}
 499              	.LCFI14:
 500              		.cfi_def_cfa_offset 4
 501              		.cfi_offset 14, -4
 502 0002 89B0     		sub	sp, sp, #36
 503              	.LCFI15:
 504              		.cfi_def_cfa_offset 40
 362:Src/tim.c     **** 
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s 			page 16


 363:Src/tim.c     ****   GPIO_InitTypeDef GPIO_InitStruct;
 364:Src/tim.c     ****   if(tim_encoderHandle->Instance==TIM4)
 505              		.loc 1 364 0
 506 0004 0368     		ldr	r3, [r0]
 507 0006 1D4A     		ldr	r2, .L38
 508 0008 9342     		cmp	r3, r2
 509 000a 18D1     		bne	.L35
 510              	.LBB6:
 365:Src/tim.c     ****   {
 366:Src/tim.c     ****   /* USER CODE BEGIN TIM4_MspInit 0 */
 367:Src/tim.c     **** 
 368:Src/tim.c     ****   /* USER CODE END TIM4_MspInit 0 */
 369:Src/tim.c     ****     /* TIM4 clock enable */
 370:Src/tim.c     ****     __HAL_RCC_TIM4_CLK_ENABLE();
 511              		.loc 1 370 0
 512 000c 0023     		movs	r3, #0
 513 000e 0193     		str	r3, [sp, #4]
 514 0010 1B4B     		ldr	r3, .L38+4
 515 0012 1A6C     		ldr	r2, [r3, #64]
 516 0014 42F00402 		orr	r2, r2, #4
 517 0018 1A64     		str	r2, [r3, #64]
 518 001a 1B6C     		ldr	r3, [r3, #64]
 519 001c 03F00403 		and	r3, r3, #4
 520 0020 0193     		str	r3, [sp, #4]
 521 0022 019B     		ldr	r3, [sp, #4]
 522              	.LBE6:
 371:Src/tim.c     ****   
 372:Src/tim.c     ****     /**TIM4 GPIO Configuration    
 373:Src/tim.c     ****     PB6     ------> TIM4_CH1
 374:Src/tim.c     ****     PB7     ------> TIM4_CH2 
 375:Src/tim.c     ****     */
 376:Src/tim.c     ****     GPIO_InitStruct.Pin = ENCODER_LEFT_1_Pin|ENCODER_LEFT_2_Pin;
 523              		.loc 1 376 0
 524 0024 C023     		movs	r3, #192
 525 0026 0393     		str	r3, [sp, #12]
 377:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 526              		.loc 1 377 0
 527 0028 0223     		movs	r3, #2
 528 002a 0493     		str	r3, [sp, #16]
 378:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
 529              		.loc 1 378 0
 530 002c 0122     		movs	r2, #1
 531 002e 0592     		str	r2, [sp, #20]
 379:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 532              		.loc 1 379 0
 533 0030 0693     		str	r3, [sp, #24]
 380:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 534              		.loc 1 380 0
 535 0032 0793     		str	r3, [sp, #28]
 381:Src/tim.c     ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 536              		.loc 1 381 0
 537 0034 1348     		ldr	r0, .L38+8
 538              	.LVL20:
 539 0036 03A9     		add	r1, sp, #12
 540 0038 FFF7FEFF 		bl	HAL_GPIO_Init
 541              	.LVL21:
 542 003c 1AE0     		b	.L34
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s 			page 17


 543              	.LVL22:
 544              	.L35:
 382:Src/tim.c     **** 
 383:Src/tim.c     ****   /* USER CODE BEGIN TIM4_MspInit 1 */
 384:Src/tim.c     **** 
 385:Src/tim.c     ****   /* USER CODE END TIM4_MspInit 1 */
 386:Src/tim.c     ****   }
 387:Src/tim.c     ****   else if(tim_encoderHandle->Instance==TIM5)
 545              		.loc 1 387 0
 546 003e 124A     		ldr	r2, .L38+12
 547 0040 9342     		cmp	r3, r2
 548 0042 17D1     		bne	.L34
 549              	.LBB7:
 388:Src/tim.c     ****   {
 389:Src/tim.c     ****   /* USER CODE BEGIN TIM5_MspInit 0 */
 390:Src/tim.c     **** 
 391:Src/tim.c     ****   /* USER CODE END TIM5_MspInit 0 */
 392:Src/tim.c     ****     /* TIM5 clock enable */
 393:Src/tim.c     ****     __HAL_RCC_TIM5_CLK_ENABLE();
 550              		.loc 1 393 0
 551 0044 0023     		movs	r3, #0
 552 0046 0293     		str	r3, [sp, #8]
 553 0048 0D4B     		ldr	r3, .L38+4
 554 004a 1A6C     		ldr	r2, [r3, #64]
 555 004c 42F00802 		orr	r2, r2, #8
 556 0050 1A64     		str	r2, [r3, #64]
 557 0052 1B6C     		ldr	r3, [r3, #64]
 558 0054 03F00803 		and	r3, r3, #8
 559 0058 0293     		str	r3, [sp, #8]
 560 005a 029B     		ldr	r3, [sp, #8]
 561              	.LBE7:
 394:Src/tim.c     ****   
 395:Src/tim.c     ****     /**TIM5 GPIO Configuration    
 396:Src/tim.c     ****     PA0-WKUP     ------> TIM5_CH1
 397:Src/tim.c     ****     PA1     ------> TIM5_CH2 
 398:Src/tim.c     ****     */
 399:Src/tim.c     ****     GPIO_InitStruct.Pin = ENCODER_RIGHT_1_Pin|ENCODER_RIGHT_2_Pin;
 562              		.loc 1 399 0
 563 005c 0323     		movs	r3, #3
 564 005e 0393     		str	r3, [sp, #12]
 400:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 565              		.loc 1 400 0
 566 0060 0223     		movs	r3, #2
 567 0062 0493     		str	r3, [sp, #16]
 401:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
 568              		.loc 1 401 0
 569 0064 0122     		movs	r2, #1
 570 0066 0592     		str	r2, [sp, #20]
 402:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 571              		.loc 1 402 0
 572 0068 0693     		str	r3, [sp, #24]
 403:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM5;
 573              		.loc 1 403 0
 574 006a 0793     		str	r3, [sp, #28]
 404:Src/tim.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 575              		.loc 1 404 0
 576 006c 0748     		ldr	r0, .L38+16
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s 			page 18


 577              	.LVL23:
 578 006e 03A9     		add	r1, sp, #12
 579 0070 FFF7FEFF 		bl	HAL_GPIO_Init
 580              	.LVL24:
 581              	.L34:
 405:Src/tim.c     **** 
 406:Src/tim.c     ****   /* USER CODE BEGIN TIM5_MspInit 1 */
 407:Src/tim.c     **** 
 408:Src/tim.c     ****   /* USER CODE END TIM5_MspInit 1 */
 409:Src/tim.c     ****   }
 410:Src/tim.c     **** }
 582              		.loc 1 410 0
 583 0074 09B0     		add	sp, sp, #36
 584              	.LCFI16:
 585              		.cfi_def_cfa_offset 4
 586              		@ sp needed
 587 0076 5DF804FB 		ldr	pc, [sp], #4
 588              	.L39:
 589 007a 00BF     		.align	2
 590              	.L38:
 591 007c 00080040 		.word	1073743872
 592 0080 00380240 		.word	1073887232
 593 0084 00040240 		.word	1073873920
 594 0088 000C0040 		.word	1073744896
 595 008c 00000240 		.word	1073872896
 596              		.cfi_endproc
 597              	.LFE130:
 599              		.section	.text.HAL_TIM_MspPostInit,"ax",%progbits
 600              		.align	2
 601              		.global	HAL_TIM_MspPostInit
 602              		.thumb
 603              		.thumb_func
 605              	HAL_TIM_MspPostInit:
 606              	.LFB131:
 411:Src/tim.c     **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
 412:Src/tim.c     **** {
 607              		.loc 1 412 0
 608              		.cfi_startproc
 609              		@ args = 0, pretend = 0, frame = 24
 610              		@ frame_needed = 0, uses_anonymous_args = 0
 611              	.LVL25:
 612 0000 70B5     		push	{r4, r5, r6, lr}
 613              	.LCFI17:
 614              		.cfi_def_cfa_offset 16
 615              		.cfi_offset 4, -16
 616              		.cfi_offset 5, -12
 617              		.cfi_offset 6, -8
 618              		.cfi_offset 14, -4
 619 0002 86B0     		sub	sp, sp, #24
 620              	.LCFI18:
 621              		.cfi_def_cfa_offset 40
 413:Src/tim.c     **** 
 414:Src/tim.c     ****   GPIO_InitTypeDef GPIO_InitStruct;
 415:Src/tim.c     ****   if(timHandle->Instance==TIM1)
 622              		.loc 1 415 0
 623 0004 0368     		ldr	r3, [r0]
 624 0006 174A     		ldr	r2, .L44
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s 			page 19


 625 0008 9342     		cmp	r3, r2
 626 000a 0ED1     		bne	.L41
 416:Src/tim.c     ****   {
 417:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspPostInit 0 */
 418:Src/tim.c     **** 
 419:Src/tim.c     ****   /* USER CODE END TIM1_MspPostInit 0 */
 420:Src/tim.c     ****     /**TIM1 GPIO Configuration    
 421:Src/tim.c     ****     PA8     ------> TIM1_CH1
 422:Src/tim.c     ****     PA9     ------> TIM1_CH2
 423:Src/tim.c     ****     PA10     ------> TIM1_CH3
 424:Src/tim.c     ****     PA11     ------> TIM1_CH4 
 425:Src/tim.c     ****     */
 426:Src/tim.c     ****     GPIO_InitStruct.Pin = MOTOR_L_F_Pin|MOTOR_L_B_Pin|MOTOR_R_F_Pin|MOTOR_R_B_Pin;
 627              		.loc 1 426 0
 628 000c 4FF47063 		mov	r3, #3840
 629 0010 0193     		str	r3, [sp, #4]
 427:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 630              		.loc 1 427 0
 631 0012 0223     		movs	r3, #2
 632 0014 0293     		str	r3, [sp, #8]
 428:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 633              		.loc 1 428 0
 634 0016 0022     		movs	r2, #0
 635 0018 0392     		str	r2, [sp, #12]
 429:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 636              		.loc 1 429 0
 637 001a 0493     		str	r3, [sp, #16]
 430:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 638              		.loc 1 430 0
 639 001c 0123     		movs	r3, #1
 640 001e 0593     		str	r3, [sp, #20]
 431:Src/tim.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 641              		.loc 1 431 0
 642 0020 1148     		ldr	r0, .L44+4
 643              	.LVL26:
 644 0022 01A9     		add	r1, sp, #4
 645 0024 FFF7FEFF 		bl	HAL_GPIO_Init
 646              	.LVL27:
 647 0028 19E0     		b	.L40
 648              	.LVL28:
 649              	.L41:
 432:Src/tim.c     **** 
 433:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspPostInit 1 */
 434:Src/tim.c     **** 
 435:Src/tim.c     ****   /* USER CODE END TIM1_MspPostInit 1 */
 436:Src/tim.c     ****   }
 437:Src/tim.c     ****   else if(timHandle->Instance==TIM3)
 650              		.loc 1 437 0
 651 002a 104A     		ldr	r2, .L44+8
 652 002c 9342     		cmp	r3, r2
 653 002e 16D1     		bne	.L40
 438:Src/tim.c     ****   {
 439:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspPostInit 0 */
 440:Src/tim.c     **** 
 441:Src/tim.c     ****   /* USER CODE END TIM3_MspPostInit 0 */
 442:Src/tim.c     ****   
 443:Src/tim.c     ****     /**TIM3 GPIO Configuration    
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s 			page 20


 444:Src/tim.c     ****     PA6     ------> TIM3_CH1
 445:Src/tim.c     ****     PA7     ------> TIM3_CH2
 446:Src/tim.c     ****     PB0     ------> TIM3_CH3 
 447:Src/tim.c     ****     */
 448:Src/tim.c     ****     GPIO_InitStruct.Pin = SERVO_CLAW_JAW_Pin|SERVO_CLAW_ARM_Pin;
 654              		.loc 1 448 0
 655 0030 C023     		movs	r3, #192
 656 0032 0193     		str	r3, [sp, #4]
 449:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 657              		.loc 1 449 0
 658 0034 1226     		movs	r6, #18
 659 0036 0296     		str	r6, [sp, #8]
 450:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 660              		.loc 1 450 0
 661 0038 0025     		movs	r5, #0
 662 003a 0395     		str	r5, [sp, #12]
 451:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 663              		.loc 1 451 0
 664 003c 0224     		movs	r4, #2
 665 003e 0494     		str	r4, [sp, #16]
 452:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 666              		.loc 1 452 0
 667 0040 0594     		str	r4, [sp, #20]
 453:Src/tim.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 668              		.loc 1 453 0
 669 0042 0948     		ldr	r0, .L44+4
 670              	.LVL29:
 671 0044 01A9     		add	r1, sp, #4
 672 0046 FFF7FEFF 		bl	HAL_GPIO_Init
 673              	.LVL30:
 454:Src/tim.c     **** 
 455:Src/tim.c     ****     GPIO_InitStruct.Pin = SERVO_BASKET_Pin;
 674              		.loc 1 455 0
 675 004a 0123     		movs	r3, #1
 676 004c 0193     		str	r3, [sp, #4]
 456:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 677              		.loc 1 456 0
 678 004e 0296     		str	r6, [sp, #8]
 457:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 679              		.loc 1 457 0
 680 0050 0395     		str	r5, [sp, #12]
 458:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 681              		.loc 1 458 0
 682 0052 0494     		str	r4, [sp, #16]
 459:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 683              		.loc 1 459 0
 684 0054 0594     		str	r4, [sp, #20]
 460:Src/tim.c     ****     HAL_GPIO_Init(SERVO_BASKET_GPIO_Port, &GPIO_InitStruct);
 685              		.loc 1 460 0
 686 0056 0648     		ldr	r0, .L44+12
 687 0058 01A9     		add	r1, sp, #4
 688 005a FFF7FEFF 		bl	HAL_GPIO_Init
 689              	.LVL31:
 690              	.L40:
 461:Src/tim.c     **** 
 462:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspPostInit 1 */
 463:Src/tim.c     **** 
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s 			page 21


 464:Src/tim.c     ****   /* USER CODE END TIM3_MspPostInit 1 */
 465:Src/tim.c     ****   }
 466:Src/tim.c     **** 
 467:Src/tim.c     **** }
 691              		.loc 1 467 0
 692 005e 06B0     		add	sp, sp, #24
 693              	.LCFI19:
 694              		.cfi_def_cfa_offset 16
 695              		@ sp needed
 696 0060 70BD     		pop	{r4, r5, r6, pc}
 697              	.L45:
 698 0062 00BF     		.align	2
 699              	.L44:
 700 0064 00000140 		.word	1073807360
 701 0068 00000240 		.word	1073872896
 702 006c 00040040 		.word	1073742848
 703 0070 00040240 		.word	1073873920
 704              		.cfi_endproc
 705              	.LFE131:
 707              		.section	.text.MX_TIM1_Init,"ax",%progbits
 708              		.align	2
 709              		.global	MX_TIM1_Init
 710              		.thumb
 711              		.thumb_func
 713              	MX_TIM1_Init:
 714              	.LFB123:
  58:Src/tim.c     ****   TIM_ClockConfigTypeDef sClockSourceConfig;
 715              		.loc 1 58 0
 716              		.cfi_startproc
 717              		@ args = 0, pretend = 0, frame = 80
 718              		@ frame_needed = 0, uses_anonymous_args = 0
 719 0000 00B5     		push	{lr}
 720              	.LCFI20:
 721              		.cfi_def_cfa_offset 4
 722              		.cfi_offset 14, -4
 723 0002 95B0     		sub	sp, sp, #84
 724              	.LCFI21:
 725              		.cfi_def_cfa_offset 88
  64:Src/tim.c     ****   htim1.Init.Prescaler = 49;
 726              		.loc 1 64 0
 727 0004 3E48     		ldr	r0, .L57
 728 0006 3F4B     		ldr	r3, .L57+4
 729 0008 0360     		str	r3, [r0]
  65:Src/tim.c     ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 730              		.loc 1 65 0
 731 000a 3123     		movs	r3, #49
 732 000c 4360     		str	r3, [r0, #4]
  66:Src/tim.c     ****   htim1.Init.Period = 999;
 733              		.loc 1 66 0
 734 000e 0023     		movs	r3, #0
 735 0010 8360     		str	r3, [r0, #8]
  67:Src/tim.c     ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 736              		.loc 1 67 0
 737 0012 40F2E732 		movw	r2, #999
 738 0016 C260     		str	r2, [r0, #12]
  68:Src/tim.c     ****   htim1.Init.RepetitionCounter = 0;
 739              		.loc 1 68 0
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s 			page 22


 740 0018 0361     		str	r3, [r0, #16]
  69:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 741              		.loc 1 69 0
 742 001a 4361     		str	r3, [r0, #20]
  70:Src/tim.c     ****   {
 743              		.loc 1 70 0
 744 001c FFF7FEFF 		bl	HAL_TIM_Base_Init
 745              	.LVL32:
 746 0020 18B1     		cbz	r0, .L47
  72:Src/tim.c     ****   }
 747              		.loc 1 72 0
 748 0022 3948     		ldr	r0, .L57+8
 749 0024 4821     		movs	r1, #72
 750 0026 FFF7FEFF 		bl	_Error_Handler
 751              	.LVL33:
 752              	.L47:
  75:Src/tim.c     ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 753              		.loc 1 75 0
 754 002a 14A9     		add	r1, sp, #80
 755 002c 4FF48053 		mov	r3, #4096
 756 0030 41F8103D 		str	r3, [r1, #-16]!
  76:Src/tim.c     ****   {
 757              		.loc 1 76 0
 758 0034 3248     		ldr	r0, .L57
 759 0036 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 760              	.LVL34:
 761 003a 18B1     		cbz	r0, .L48
  78:Src/tim.c     ****   }
 762              		.loc 1 78 0
 763 003c 3248     		ldr	r0, .L57+8
 764 003e 4E21     		movs	r1, #78
 765 0040 FFF7FEFF 		bl	_Error_Handler
 766              	.LVL35:
 767              	.L48:
  81:Src/tim.c     ****   {
 768              		.loc 1 81 0
 769 0044 2E48     		ldr	r0, .L57
 770 0046 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 771              	.LVL36:
 772 004a 18B1     		cbz	r0, .L49
  83:Src/tim.c     ****   }
 773              		.loc 1 83 0
 774 004c 2E48     		ldr	r0, .L57+8
 775 004e 5321     		movs	r1, #83
 776 0050 FFF7FEFF 		bl	_Error_Handler
 777              	.LVL37:
 778              	.L49:
  86:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 779              		.loc 1 86 0
 780 0054 0023     		movs	r3, #0
 781 0056 0E93     		str	r3, [sp, #56]
  87:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 782              		.loc 1 87 0
 783 0058 0F93     		str	r3, [sp, #60]
  88:Src/tim.c     ****   {
 784              		.loc 1 88 0
 785 005a 2948     		ldr	r0, .L57
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s 			page 23


 786 005c 0EA9     		add	r1, sp, #56
 787 005e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 788              	.LVL38:
 789 0062 18B1     		cbz	r0, .L50
  90:Src/tim.c     ****   }
 790              		.loc 1 90 0
 791 0064 2848     		ldr	r0, .L57+8
 792 0066 5A21     		movs	r1, #90
 793 0068 FFF7FEFF 		bl	_Error_Handler
 794              	.LVL39:
 795              	.L50:
  93:Src/tim.c     ****   sConfigOC.Pulse = 0;
 796              		.loc 1 93 0
 797 006c 6023     		movs	r3, #96
 798 006e 0793     		str	r3, [sp, #28]
  94:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 799              		.loc 1 94 0
 800 0070 0022     		movs	r2, #0
 801 0072 0892     		str	r2, [sp, #32]
  95:Src/tim.c     ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 802              		.loc 1 95 0
 803 0074 0992     		str	r2, [sp, #36]
  96:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 804              		.loc 1 96 0
 805 0076 0A92     		str	r2, [sp, #40]
  97:Src/tim.c     ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 806              		.loc 1 97 0
 807 0078 0B92     		str	r2, [sp, #44]
  98:Src/tim.c     ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 808              		.loc 1 98 0
 809 007a 0C92     		str	r2, [sp, #48]
  99:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 810              		.loc 1 99 0
 811 007c 0D92     		str	r2, [sp, #52]
 100:Src/tim.c     ****   {
 812              		.loc 1 100 0
 813 007e 2048     		ldr	r0, .L57
 814 0080 07A9     		add	r1, sp, #28
 815 0082 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 816              	.LVL40:
 817 0086 18B1     		cbz	r0, .L51
 102:Src/tim.c     ****   }
 818              		.loc 1 102 0
 819 0088 1F48     		ldr	r0, .L57+8
 820 008a 6621     		movs	r1, #102
 821 008c FFF7FEFF 		bl	_Error_Handler
 822              	.LVL41:
 823              	.L51:
 105:Src/tim.c     ****   {
 824              		.loc 1 105 0
 825 0090 1B48     		ldr	r0, .L57
 826 0092 07A9     		add	r1, sp, #28
 827 0094 0422     		movs	r2, #4
 828 0096 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 829              	.LVL42:
 830 009a 18B1     		cbz	r0, .L52
 107:Src/tim.c     ****   }
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s 			page 24


 831              		.loc 1 107 0
 832 009c 1A48     		ldr	r0, .L57+8
 833 009e 6B21     		movs	r1, #107
 834 00a0 FFF7FEFF 		bl	_Error_Handler
 835              	.LVL43:
 836              	.L52:
 110:Src/tim.c     ****   {
 837              		.loc 1 110 0
 838 00a4 1648     		ldr	r0, .L57
 839 00a6 07A9     		add	r1, sp, #28
 840 00a8 0822     		movs	r2, #8
 841 00aa FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 842              	.LVL44:
 843 00ae 18B1     		cbz	r0, .L53
 112:Src/tim.c     ****   }
 844              		.loc 1 112 0
 845 00b0 1548     		ldr	r0, .L57+8
 846 00b2 7021     		movs	r1, #112
 847 00b4 FFF7FEFF 		bl	_Error_Handler
 848              	.LVL45:
 849              	.L53:
 115:Src/tim.c     ****   {
 850              		.loc 1 115 0
 851 00b8 1148     		ldr	r0, .L57
 852 00ba 07A9     		add	r1, sp, #28
 853 00bc 0C22     		movs	r2, #12
 854 00be FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 855              	.LVL46:
 856 00c2 18B1     		cbz	r0, .L54
 117:Src/tim.c     ****   }
 857              		.loc 1 117 0
 858 00c4 1048     		ldr	r0, .L57+8
 859 00c6 7521     		movs	r1, #117
 860 00c8 FFF7FEFF 		bl	_Error_Handler
 861              	.LVL47:
 862              	.L54:
 120:Src/tim.c     ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 863              		.loc 1 120 0
 864 00cc 0023     		movs	r3, #0
 865 00ce 0093     		str	r3, [sp]
 121:Src/tim.c     ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 866              		.loc 1 121 0
 867 00d0 0193     		str	r3, [sp, #4]
 122:Src/tim.c     ****   sBreakDeadTimeConfig.DeadTime = 0;
 868              		.loc 1 122 0
 869 00d2 0293     		str	r3, [sp, #8]
 123:Src/tim.c     ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 870              		.loc 1 123 0
 871 00d4 0393     		str	r3, [sp, #12]
 124:Src/tim.c     ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 872              		.loc 1 124 0
 873 00d6 0493     		str	r3, [sp, #16]
 125:Src/tim.c     ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 874              		.loc 1 125 0
 875 00d8 4FF40052 		mov	r2, #8192
 876 00dc 0592     		str	r2, [sp, #20]
 126:Src/tim.c     ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s 			page 25


 877              		.loc 1 126 0
 878 00de 0693     		str	r3, [sp, #24]
 127:Src/tim.c     ****   {
 879              		.loc 1 127 0
 880 00e0 0748     		ldr	r0, .L57
 881 00e2 6946     		mov	r1, sp
 882 00e4 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 883              	.LVL48:
 884 00e8 18B1     		cbz	r0, .L55
 129:Src/tim.c     ****   }
 885              		.loc 1 129 0
 886 00ea 0748     		ldr	r0, .L57+8
 887 00ec 8121     		movs	r1, #129
 888 00ee FFF7FEFF 		bl	_Error_Handler
 889              	.LVL49:
 890              	.L55:
 132:Src/tim.c     **** 
 891              		.loc 1 132 0
 892 00f2 0348     		ldr	r0, .L57
 893 00f4 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 894              	.LVL50:
 134:Src/tim.c     **** /* TIM2 init function */
 895              		.loc 1 134 0
 896 00f8 15B0     		add	sp, sp, #84
 897              	.LCFI22:
 898              		.cfi_def_cfa_offset 4
 899              		@ sp needed
 900 00fa 5DF804FB 		ldr	pc, [sp], #4
 901              	.L58:
 902 00fe 00BF     		.align	2
 903              	.L57:
 904 0100 00000000 		.word	htim1
 905 0104 00000140 		.word	1073807360
 906 0108 00000000 		.word	.LC0
 907              		.cfi_endproc
 908              	.LFE123:
 910              		.section	.text.MX_TIM3_Init,"ax",%progbits
 911              		.align	2
 912              		.global	MX_TIM3_Init
 913              		.thumb
 914              		.thumb_func
 916              	MX_TIM3_Init:
 917              	.LFB125:
 167:Src/tim.c     ****   TIM_ClockConfigTypeDef sClockSourceConfig;
 918              		.loc 1 167 0
 919              		.cfi_startproc
 920              		@ args = 0, pretend = 0, frame = 56
 921              		@ frame_needed = 0, uses_anonymous_args = 0
 922 0000 00B5     		push	{lr}
 923              	.LCFI23:
 924              		.cfi_def_cfa_offset 4
 925              		.cfi_offset 14, -4
 926 0002 8FB0     		sub	sp, sp, #60
 927              	.LCFI24:
 928              		.cfi_def_cfa_offset 64
 172:Src/tim.c     ****   htim3.Init.Prescaler = 71;
 929              		.loc 1 172 0
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s 			page 26


 930 0004 2D48     		ldr	r0, .L68
 931 0006 2E4B     		ldr	r3, .L68+4
 932 0008 0360     		str	r3, [r0]
 173:Src/tim.c     ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 933              		.loc 1 173 0
 934 000a 4723     		movs	r3, #71
 935 000c 4360     		str	r3, [r0, #4]
 174:Src/tim.c     ****   htim3.Init.Period = 19999;
 936              		.loc 1 174 0
 937 000e 0023     		movs	r3, #0
 938 0010 8360     		str	r3, [r0, #8]
 175:Src/tim.c     ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 939              		.loc 1 175 0
 940 0012 44F61F62 		movw	r2, #19999
 941 0016 C260     		str	r2, [r0, #12]
 176:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 942              		.loc 1 176 0
 943 0018 0361     		str	r3, [r0, #16]
 177:Src/tim.c     ****   {
 944              		.loc 1 177 0
 945 001a FFF7FEFF 		bl	HAL_TIM_Base_Init
 946              	.LVL51:
 947 001e 18B1     		cbz	r0, .L60
 179:Src/tim.c     ****   }
 948              		.loc 1 179 0
 949 0020 2848     		ldr	r0, .L68+8
 950 0022 B321     		movs	r1, #179
 951 0024 FFF7FEFF 		bl	_Error_Handler
 952              	.LVL52:
 953              	.L60:
 182:Src/tim.c     ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 954              		.loc 1 182 0
 955 0028 0EA9     		add	r1, sp, #56
 956 002a 4FF48053 		mov	r3, #4096
 957 002e 41F8103D 		str	r3, [r1, #-16]!
 183:Src/tim.c     ****   {
 958              		.loc 1 183 0
 959 0032 2248     		ldr	r0, .L68
 960 0034 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 961              	.LVL53:
 962 0038 18B1     		cbz	r0, .L61
 185:Src/tim.c     ****   }
 963              		.loc 1 185 0
 964 003a 2248     		ldr	r0, .L68+8
 965 003c B921     		movs	r1, #185
 966 003e FFF7FEFF 		bl	_Error_Handler
 967              	.LVL54:
 968              	.L61:
 188:Src/tim.c     ****   {
 969              		.loc 1 188 0
 970 0042 1E48     		ldr	r0, .L68
 971 0044 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 972              	.LVL55:
 973 0048 18B1     		cbz	r0, .L62
 190:Src/tim.c     ****   }
 974              		.loc 1 190 0
 975 004a 1E48     		ldr	r0, .L68+8
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s 			page 27


 976 004c BE21     		movs	r1, #190
 977 004e FFF7FEFF 		bl	_Error_Handler
 978              	.LVL56:
 979              	.L62:
 193:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 980              		.loc 1 193 0
 981 0052 0023     		movs	r3, #0
 982 0054 0893     		str	r3, [sp, #32]
 194:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 983              		.loc 1 194 0
 984 0056 0993     		str	r3, [sp, #36]
 195:Src/tim.c     ****   {
 985              		.loc 1 195 0
 986 0058 1848     		ldr	r0, .L68
 987 005a 08A9     		add	r1, sp, #32
 988 005c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 989              	.LVL57:
 990 0060 18B1     		cbz	r0, .L63
 197:Src/tim.c     ****   }
 991              		.loc 1 197 0
 992 0062 1848     		ldr	r0, .L68+8
 993 0064 C521     		movs	r1, #197
 994 0066 FFF7FEFF 		bl	_Error_Handler
 995              	.LVL58:
 996              	.L63:
 200:Src/tim.c     ****   sConfigOC.Pulse = 0;
 997              		.loc 1 200 0
 998 006a 6023     		movs	r3, #96
 999 006c 0193     		str	r3, [sp, #4]
 201:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1000              		.loc 1 201 0
 1001 006e 0022     		movs	r2, #0
 1002 0070 0292     		str	r2, [sp, #8]
 202:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1003              		.loc 1 202 0
 1004 0072 0392     		str	r2, [sp, #12]
 203:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1005              		.loc 1 203 0
 1006 0074 0592     		str	r2, [sp, #20]
 204:Src/tim.c     ****   {
 1007              		.loc 1 204 0
 1008 0076 1148     		ldr	r0, .L68
 1009 0078 01A9     		add	r1, sp, #4
 1010 007a FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1011              	.LVL59:
 1012 007e 18B1     		cbz	r0, .L64
 206:Src/tim.c     ****   }
 1013              		.loc 1 206 0
 1014 0080 1048     		ldr	r0, .L68+8
 1015 0082 CE21     		movs	r1, #206
 1016 0084 FFF7FEFF 		bl	_Error_Handler
 1017              	.LVL60:
 1018              	.L64:
 209:Src/tim.c     ****   {
 1019              		.loc 1 209 0
 1020 0088 0C48     		ldr	r0, .L68
 1021 008a 01A9     		add	r1, sp, #4
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s 			page 28


 1022 008c 0422     		movs	r2, #4
 1023 008e FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1024              	.LVL61:
 1025 0092 18B1     		cbz	r0, .L65
 211:Src/tim.c     ****   }
 1026              		.loc 1 211 0
 1027 0094 0B48     		ldr	r0, .L68+8
 1028 0096 D321     		movs	r1, #211
 1029 0098 FFF7FEFF 		bl	_Error_Handler
 1030              	.LVL62:
 1031              	.L65:
 214:Src/tim.c     ****   {
 1032              		.loc 1 214 0
 1033 009c 0748     		ldr	r0, .L68
 1034 009e 01A9     		add	r1, sp, #4
 1035 00a0 0822     		movs	r2, #8
 1036 00a2 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1037              	.LVL63:
 1038 00a6 18B1     		cbz	r0, .L66
 216:Src/tim.c     ****   }
 1039              		.loc 1 216 0
 1040 00a8 0648     		ldr	r0, .L68+8
 1041 00aa D821     		movs	r1, #216
 1042 00ac FFF7FEFF 		bl	_Error_Handler
 1043              	.LVL64:
 1044              	.L66:
 219:Src/tim.c     **** 
 1045              		.loc 1 219 0
 1046 00b0 0248     		ldr	r0, .L68
 1047 00b2 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 1048              	.LVL65:
 221:Src/tim.c     **** /* TIM4 init function */
 1049              		.loc 1 221 0
 1050 00b6 0FB0     		add	sp, sp, #60
 1051              	.LCFI25:
 1052              		.cfi_def_cfa_offset 4
 1053              		@ sp needed
 1054 00b8 5DF804FB 		ldr	pc, [sp], #4
 1055              	.L69:
 1056              		.align	2
 1057              	.L68:
 1058 00bc 00000000 		.word	htim3
 1059 00c0 00040040 		.word	1073742848
 1060 00c4 00000000 		.word	.LC0
 1061              		.cfi_endproc
 1062              	.LFE125:
 1064              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 1065              		.align	2
 1066              		.global	HAL_TIM_Base_MspDeInit
 1067              		.thumb
 1068              		.thumb_func
 1070              	HAL_TIM_Base_MspDeInit:
 1071              	.LFB132:
 468:Src/tim.c     **** 
 469:Src/tim.c     **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* tim_baseHandle)
 470:Src/tim.c     **** {
 1072              		.loc 1 470 0
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s 			page 29


 1073              		.cfi_startproc
 1074              		@ args = 0, pretend = 0, frame = 0
 1075              		@ frame_needed = 0, uses_anonymous_args = 0
 1076              		@ link register save eliminated.
 1077              	.LVL66:
 471:Src/tim.c     **** 
 472:Src/tim.c     ****   if(tim_baseHandle->Instance==TIM1)
 1078              		.loc 1 472 0
 1079 0000 0368     		ldr	r3, [r0]
 1080 0002 134A     		ldr	r2, .L75
 1081 0004 9342     		cmp	r3, r2
 1082 0006 06D1     		bne	.L71
 473:Src/tim.c     ****   {
 474:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspDeInit 0 */
 475:Src/tim.c     **** 
 476:Src/tim.c     ****   /* USER CODE END TIM1_MspDeInit 0 */
 477:Src/tim.c     ****     /* Peripheral clock disable */
 478:Src/tim.c     ****     __HAL_RCC_TIM1_CLK_DISABLE();
 1083              		.loc 1 478 0
 1084 0008 02F59C32 		add	r2, r2, #79872
 1085 000c 536C     		ldr	r3, [r2, #68]
 1086 000e 23F00103 		bic	r3, r3, #1
 1087 0012 5364     		str	r3, [r2, #68]
 1088 0014 7047     		bx	lr
 1089              	.L71:
 479:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 480:Src/tim.c     **** 
 481:Src/tim.c     ****   /* USER CODE END TIM1_MspDeInit 1 */
 482:Src/tim.c     ****   }
 483:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM2)
 1090              		.loc 1 483 0
 1091 0016 B3F1804F 		cmp	r3, #1073741824
 1092 001a 05D1     		bne	.L73
 484:Src/tim.c     ****   {
 485:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 0 */
 486:Src/tim.c     **** 
 487:Src/tim.c     ****   /* USER CODE END TIM2_MspDeInit 0 */
 488:Src/tim.c     ****     /* Peripheral clock disable */
 489:Src/tim.c     ****     __HAL_RCC_TIM2_CLK_DISABLE();
 1093              		.loc 1 489 0
 1094 001c 0D4A     		ldr	r2, .L75+4
 1095 001e 136C     		ldr	r3, [r2, #64]
 1096 0020 23F00103 		bic	r3, r3, #1
 1097 0024 1364     		str	r3, [r2, #64]
 1098 0026 7047     		bx	lr
 1099              	.L73:
 490:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 491:Src/tim.c     **** 
 492:Src/tim.c     ****   /* USER CODE END TIM2_MspDeInit 1 */
 493:Src/tim.c     ****   }
 494:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM3)
 1100              		.loc 1 494 0
 1101 0028 0B4A     		ldr	r2, .L75+8
 1102 002a 9342     		cmp	r3, r2
 1103 002c 06D1     		bne	.L74
 495:Src/tim.c     ****   {
 496:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspDeInit 0 */
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s 			page 30


 497:Src/tim.c     **** 
 498:Src/tim.c     ****   /* USER CODE END TIM3_MspDeInit 0 */
 499:Src/tim.c     ****     /* Peripheral clock disable */
 500:Src/tim.c     ****     __HAL_RCC_TIM3_CLK_DISABLE();
 1104              		.loc 1 500 0
 1105 002e 02F50D32 		add	r2, r2, #144384
 1106 0032 136C     		ldr	r3, [r2, #64]
 1107 0034 23F00203 		bic	r3, r3, #2
 1108 0038 1364     		str	r3, [r2, #64]
 1109 003a 7047     		bx	lr
 1110              	.L74:
 501:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspDeInit 1 */
 502:Src/tim.c     **** 
 503:Src/tim.c     ****   /* USER CODE END TIM3_MspDeInit 1 */
 504:Src/tim.c     ****   }
 505:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM9)
 1111              		.loc 1 505 0
 1112 003c 074A     		ldr	r2, .L75+12
 1113 003e 9342     		cmp	r3, r2
 1114 0040 05D1     		bne	.L70
 506:Src/tim.c     ****   {
 507:Src/tim.c     ****   /* USER CODE BEGIN TIM9_MspDeInit 0 */
 508:Src/tim.c     **** 
 509:Src/tim.c     ****   /* USER CODE END TIM9_MspDeInit 0 */
 510:Src/tim.c     ****     /* Peripheral clock disable */
 511:Src/tim.c     ****     __HAL_RCC_TIM9_CLK_DISABLE();
 1115              		.loc 1 511 0
 1116 0042 02F57842 		add	r2, r2, #63488
 1117 0046 536C     		ldr	r3, [r2, #68]
 1118 0048 23F48033 		bic	r3, r3, #65536
 1119 004c 5364     		str	r3, [r2, #68]
 1120              	.L70:
 1121 004e 7047     		bx	lr
 1122              	.L76:
 1123              		.align	2
 1124              	.L75:
 1125 0050 00000140 		.word	1073807360
 1126 0054 00380240 		.word	1073887232
 1127 0058 00040040 		.word	1073742848
 1128 005c 00400140 		.word	1073823744
 1129              		.cfi_endproc
 1130              	.LFE132:
 1132              		.section	.text.HAL_TIM_Encoder_MspDeInit,"ax",%progbits
 1133              		.align	2
 1134              		.global	HAL_TIM_Encoder_MspDeInit
 1135              		.thumb
 1136              		.thumb_func
 1138              	HAL_TIM_Encoder_MspDeInit:
 1139              	.LFB133:
 512:Src/tim.c     ****   /* USER CODE BEGIN TIM9_MspDeInit 1 */
 513:Src/tim.c     **** 
 514:Src/tim.c     ****   /* USER CODE END TIM9_MspDeInit 1 */
 515:Src/tim.c     ****   }
 516:Src/tim.c     **** }
 517:Src/tim.c     **** 
 518:Src/tim.c     **** void HAL_TIM_Encoder_MspDeInit(TIM_HandleTypeDef* tim_encoderHandle)
 519:Src/tim.c     **** {
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s 			page 31


 1140              		.loc 1 519 0
 1141              		.cfi_startproc
 1142              		@ args = 0, pretend = 0, frame = 0
 1143              		@ frame_needed = 0, uses_anonymous_args = 0
 1144              	.LVL67:
 1145 0000 08B5     		push	{r3, lr}
 1146              	.LCFI26:
 1147              		.cfi_def_cfa_offset 8
 1148              		.cfi_offset 3, -8
 1149              		.cfi_offset 14, -4
 520:Src/tim.c     **** 
 521:Src/tim.c     ****   if(tim_encoderHandle->Instance==TIM4)
 1150              		.loc 1 521 0
 1151 0002 0368     		ldr	r3, [r0]
 1152 0004 0D4A     		ldr	r2, .L81
 1153 0006 9342     		cmp	r3, r2
 1154 0008 0AD1     		bne	.L78
 522:Src/tim.c     ****   {
 523:Src/tim.c     ****   /* USER CODE BEGIN TIM4_MspDeInit 0 */
 524:Src/tim.c     **** 
 525:Src/tim.c     ****   /* USER CODE END TIM4_MspDeInit 0 */
 526:Src/tim.c     ****     /* Peripheral clock disable */
 527:Src/tim.c     ****     __HAL_RCC_TIM4_CLK_DISABLE();
 1155              		.loc 1 527 0
 1156 000a 02F50C32 		add	r2, r2, #143360
 1157 000e 136C     		ldr	r3, [r2, #64]
 1158 0010 23F00403 		bic	r3, r3, #4
 1159 0014 1364     		str	r3, [r2, #64]
 528:Src/tim.c     ****   
 529:Src/tim.c     ****     /**TIM4 GPIO Configuration    
 530:Src/tim.c     ****     PB6     ------> TIM4_CH1
 531:Src/tim.c     ****     PB7     ------> TIM4_CH2 
 532:Src/tim.c     ****     */
 533:Src/tim.c     ****     HAL_GPIO_DeInit(GPIOB, ENCODER_LEFT_1_Pin|ENCODER_LEFT_2_Pin);
 1160              		.loc 1 533 0
 1161 0016 0A48     		ldr	r0, .L81+4
 1162              	.LVL68:
 1163 0018 C021     		movs	r1, #192
 1164 001a FFF7FEFF 		bl	HAL_GPIO_DeInit
 1165              	.LVL69:
 1166 001e 08BD     		pop	{r3, pc}
 1167              	.LVL70:
 1168              	.L78:
 534:Src/tim.c     **** 
 535:Src/tim.c     ****   /* USER CODE BEGIN TIM4_MspDeInit 1 */
 536:Src/tim.c     **** 
 537:Src/tim.c     ****   /* USER CODE END TIM4_MspDeInit 1 */
 538:Src/tim.c     ****   }
 539:Src/tim.c     ****   else if(tim_encoderHandle->Instance==TIM5)
 1169              		.loc 1 539 0
 1170 0020 084A     		ldr	r2, .L81+8
 1171 0022 9342     		cmp	r3, r2
 1172 0024 09D1     		bne	.L77
 540:Src/tim.c     ****   {
 541:Src/tim.c     ****   /* USER CODE BEGIN TIM5_MspDeInit 0 */
 542:Src/tim.c     **** 
 543:Src/tim.c     ****   /* USER CODE END TIM5_MspDeInit 0 */
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s 			page 32


 544:Src/tim.c     ****     /* Peripheral clock disable */
 545:Src/tim.c     ****     __HAL_RCC_TIM5_CLK_DISABLE();
 1173              		.loc 1 545 0
 1174 0026 02F50B32 		add	r2, r2, #142336
 1175 002a 136C     		ldr	r3, [r2, #64]
 1176 002c 23F00803 		bic	r3, r3, #8
 1177 0030 1364     		str	r3, [r2, #64]
 546:Src/tim.c     ****   
 547:Src/tim.c     ****     /**TIM5 GPIO Configuration    
 548:Src/tim.c     ****     PA0-WKUP     ------> TIM5_CH1
 549:Src/tim.c     ****     PA1     ------> TIM5_CH2 
 550:Src/tim.c     ****     */
 551:Src/tim.c     ****     HAL_GPIO_DeInit(GPIOA, ENCODER_RIGHT_1_Pin|ENCODER_RIGHT_2_Pin);
 1178              		.loc 1 551 0
 1179 0032 0548     		ldr	r0, .L81+12
 1180              	.LVL71:
 1181 0034 0321     		movs	r1, #3
 1182 0036 FFF7FEFF 		bl	HAL_GPIO_DeInit
 1183              	.LVL72:
 1184              	.L77:
 1185 003a 08BD     		pop	{r3, pc}
 1186              	.L82:
 1187              		.align	2
 1188              	.L81:
 1189 003c 00080040 		.word	1073743872
 1190 0040 00040240 		.word	1073873920
 1191 0044 000C0040 		.word	1073744896
 1192 0048 00000240 		.word	1073872896
 1193              		.cfi_endproc
 1194              	.LFE133:
 1196              		.comm	htim9,60,4
 1197              		.comm	htim5,60,4
 1198              		.comm	htim4,60,4
 1199              		.comm	htim3,60,4
 1200              		.comm	htim2,60,4
 1201              		.comm	htim1,60,4
 1202              		.section	.rodata.str1.4,"aMS",%progbits,1
 1203              		.align	2
 1204              	.LC0:
 1205 0000 5372632F 		.ascii	"Src/tim.c\000"
 1205      74696D2E 
 1205      6300
 1206              		.text
 1207              	.Letext0:
 1208              		.file 2 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/machine/_default_types
 1209              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/sys/_stdint.h"
 1210              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 1211              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1212              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1213              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1214              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1215              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 1216              		.file 10 "Drivers/CMSIS/Include/core_cm4.h"
 1217              		.file 11 "Inc/tim.h"
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s 			page 33


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tim.c
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s:21     .text.MX_TIM2_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s:26     .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s:104    .text.MX_TIM2_Init:000000000000005c $d
                            *COM*:000000000000003c htim2
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s:110    .text.MX_TIM4_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s:115    .text.MX_TIM4_Init:0000000000000000 MX_TIM4_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s:200    .text.MX_TIM4_Init:0000000000000060 $d
                            *COM*:000000000000003c htim4
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s:207    .text.MX_TIM5_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s:212    .text.MX_TIM5_Init:0000000000000000 MX_TIM5_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s:297    .text.MX_TIM5_Init:0000000000000064 $d
                            *COM*:000000000000003c htim5
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s:304    .text.MX_TIM9_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s:309    .text.MX_TIM9_Init:0000000000000000 MX_TIM9_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s:371    .text.MX_TIM9_Init:0000000000000050 $d
                            *COM*:000000000000003c htim9
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s:378    .text.HAL_TIM_Base_MspInit:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s:383    .text.HAL_TIM_Base_MspInit:0000000000000000 HAL_TIM_Base_MspInit
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s:478    .text.HAL_TIM_Base_MspInit:0000000000000088 $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s:486    .text.HAL_TIM_Encoder_MspInit:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s:491    .text.HAL_TIM_Encoder_MspInit:0000000000000000 HAL_TIM_Encoder_MspInit
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s:591    .text.HAL_TIM_Encoder_MspInit:000000000000007c $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s:600    .text.HAL_TIM_MspPostInit:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s:605    .text.HAL_TIM_MspPostInit:0000000000000000 HAL_TIM_MspPostInit
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s:700    .text.HAL_TIM_MspPostInit:0000000000000064 $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s:708    .text.MX_TIM1_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s:713    .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s:904    .text.MX_TIM1_Init:0000000000000100 $d
                            *COM*:000000000000003c htim1
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s:911    .text.MX_TIM3_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s:916    .text.MX_TIM3_Init:0000000000000000 MX_TIM3_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s:1058   .text.MX_TIM3_Init:00000000000000bc $d
                            *COM*:000000000000003c htim3
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s:1065   .text.HAL_TIM_Base_MspDeInit:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s:1070   .text.HAL_TIM_Base_MspDeInit:0000000000000000 HAL_TIM_Base_MspDeInit
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s:1125   .text.HAL_TIM_Base_MspDeInit:0000000000000050 $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s:1133   .text.HAL_TIM_Encoder_MspDeInit:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s:1138   .text.HAL_TIM_Encoder_MspDeInit:0000000000000000 HAL_TIM_Encoder_MspDeInit
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s:1189   .text.HAL_TIM_Encoder_MspDeInit:000000000000003c $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccorZcBT.s:1203   .rodata.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_TIM_Base_Init
_Error_Handler
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_Encoder_Init
HAL_GPIO_Init
HAL_TIM_PWM_Init
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_GPIO_DeInit
