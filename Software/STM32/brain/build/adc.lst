ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccc7kXcZ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"adc.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.MX_ADC1_Init,"ax",%progbits
  21              		.align	2
  22              		.global	MX_ADC1_Init
  23              		.thumb
  24              		.thumb_func
  26              	MX_ADC1_Init:
  27              	.LFB123:
  28              		.file 1 "Src/adc.c"
   1:Src/adc.c     **** /**
   2:Src/adc.c     ****   ******************************************************************************
   3:Src/adc.c     ****   * File Name          : ADC.c
   4:Src/adc.c     ****   * Description        : This file provides code for the configuration
   5:Src/adc.c     ****   *                      of the ADC instances.
   6:Src/adc.c     ****   ******************************************************************************
   7:Src/adc.c     ****   ** This notice applies to any and all portions of this file
   8:Src/adc.c     ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/adc.c     ****   * USER CODE END. Other portions of this file, whether 
  10:Src/adc.c     ****   * inserted by the user or by software development tools
  11:Src/adc.c     ****   * are owned by their respective copyright owners.
  12:Src/adc.c     ****   *
  13:Src/adc.c     ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/adc.c     ****   *
  15:Src/adc.c     ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/adc.c     ****   * are permitted provided that the following conditions are met:
  17:Src/adc.c     ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/adc.c     ****   *      this list of conditions and the following disclaimer.
  19:Src/adc.c     ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/adc.c     ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/adc.c     ****   *      and/or other materials provided with the distribution.
  22:Src/adc.c     ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/adc.c     ****   *      may be used to endorse or promote products derived from this software
  24:Src/adc.c     ****   *      without specific prior written permission.
  25:Src/adc.c     ****   *
  26:Src/adc.c     ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/adc.c     ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/adc.c     ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/adc.c     ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/adc.c     ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccc7kXcZ.s 			page 2


  31:Src/adc.c     ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/adc.c     ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/adc.c     ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/adc.c     ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/adc.c     ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/adc.c     ****   *
  37:Src/adc.c     ****   ******************************************************************************
  38:Src/adc.c     ****   */
  39:Src/adc.c     **** 
  40:Src/adc.c     **** /* Includes ------------------------------------------------------------------*/
  41:Src/adc.c     **** #include "adc.h"
  42:Src/adc.c     **** 
  43:Src/adc.c     **** #include "gpio.h"
  44:Src/adc.c     **** #include "dma.h"
  45:Src/adc.c     **** 
  46:Src/adc.c     **** /* USER CODE BEGIN 0 */
  47:Src/adc.c     **** 
  48:Src/adc.c     **** /* USER CODE END 0 */
  49:Src/adc.c     **** 
  50:Src/adc.c     **** ADC_HandleTypeDef hadc1;
  51:Src/adc.c     **** DMA_HandleTypeDef hdma_adc1;
  52:Src/adc.c     **** 
  53:Src/adc.c     **** /* ADC1 init function */
  54:Src/adc.c     **** void MX_ADC1_Init(void)
  55:Src/adc.c     **** {
  29              		.loc 1 55 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 16
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 00B5     		push	{lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 14, -4
  37 0002 85B0     		sub	sp, sp, #20
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 24
  56:Src/adc.c     ****   ADC_ChannelConfTypeDef sConfig;
  57:Src/adc.c     **** 
  58:Src/adc.c     ****     /**Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of co
  59:Src/adc.c     ****     */
  60:Src/adc.c     ****   hadc1.Instance = ADC1;
  40              		.loc 1 60 0
  41 0004 1548     		ldr	r0, .L5
  42 0006 164B     		ldr	r3, .L5+4
  43 0008 0360     		str	r3, [r0]
  61:Src/adc.c     ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
  44              		.loc 1 61 0
  45 000a 4FF48033 		mov	r3, #65536
  46 000e 4360     		str	r3, [r0, #4]
  62:Src/adc.c     ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
  47              		.loc 1 62 0
  48 0010 0022     		movs	r2, #0
  49 0012 8260     		str	r2, [r0, #8]
  63:Src/adc.c     ****   hadc1.Init.ScanConvMode = ENABLE;
  50              		.loc 1 63 0
  51 0014 0123     		movs	r3, #1
  52 0016 0361     		str	r3, [r0, #16]
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccc7kXcZ.s 			page 3


  64:Src/adc.c     ****   hadc1.Init.ContinuousConvMode = ENABLE;
  53              		.loc 1 64 0
  54 0018 8361     		str	r3, [r0, #24]
  65:Src/adc.c     ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
  55              		.loc 1 65 0
  56 001a 0262     		str	r2, [r0, #32]
  66:Src/adc.c     ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
  57              		.loc 1 66 0
  58 001c C262     		str	r2, [r0, #44]
  67:Src/adc.c     ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
  59              		.loc 1 67 0
  60 001e 1149     		ldr	r1, .L5+8
  61 0020 8162     		str	r1, [r0, #40]
  68:Src/adc.c     ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
  62              		.loc 1 68 0
  63 0022 C260     		str	r2, [r0, #12]
  69:Src/adc.c     ****   hadc1.Init.NbrOfConversion = 1;
  64              		.loc 1 69 0
  65 0024 C361     		str	r3, [r0, #28]
  70:Src/adc.c     ****   hadc1.Init.DMAContinuousRequests = ENABLE;
  66              		.loc 1 70 0
  67 0026 0363     		str	r3, [r0, #48]
  71:Src/adc.c     ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
  68              		.loc 1 71 0
  69 0028 4361     		str	r3, [r0, #20]
  72:Src/adc.c     ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
  70              		.loc 1 72 0
  71 002a FFF7FEFF 		bl	HAL_ADC_Init
  72              	.LVL0:
  73 002e 18B1     		cbz	r0, .L2
  73:Src/adc.c     ****   {
  74:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
  74              		.loc 1 74 0
  75 0030 0D48     		ldr	r0, .L5+12
  76 0032 4A21     		movs	r1, #74
  77 0034 FFF7FEFF 		bl	_Error_Handler
  78              	.LVL1:
  79              	.L2:
  75:Src/adc.c     ****   }
  76:Src/adc.c     **** 
  77:Src/adc.c     ****     /**Configure for the selected ADC regular channel its corresponding rank in the sequencer and i
  78:Src/adc.c     ****     */
  79:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_3;
  80              		.loc 1 79 0
  81 0038 0323     		movs	r3, #3
  82 003a 0093     		str	r3, [sp]
  80:Src/adc.c     ****   sConfig.Rank = 1;
  83              		.loc 1 80 0
  84 003c 0123     		movs	r3, #1
  85 003e 0193     		str	r3, [sp, #4]
  81:Src/adc.c     ****   sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
  86              		.loc 1 81 0
  87 0040 0723     		movs	r3, #7
  88 0042 0293     		str	r3, [sp, #8]
  82:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
  89              		.loc 1 82 0
  90 0044 0548     		ldr	r0, .L5
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccc7kXcZ.s 			page 4


  91 0046 6946     		mov	r1, sp
  92 0048 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
  93              	.LVL2:
  94 004c 18B1     		cbz	r0, .L1
  83:Src/adc.c     ****   {
  84:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
  95              		.loc 1 84 0
  96 004e 0648     		ldr	r0, .L5+12
  97 0050 5421     		movs	r1, #84
  98 0052 FFF7FEFF 		bl	_Error_Handler
  99              	.LVL3:
 100              	.L1:
  85:Src/adc.c     ****   }
  86:Src/adc.c     **** 
  87:Src/adc.c     **** }
 101              		.loc 1 87 0
 102 0056 05B0     		add	sp, sp, #20
 103              	.LCFI2:
 104              		.cfi_def_cfa_offset 4
 105              		@ sp needed
 106 0058 5DF804FB 		ldr	pc, [sp], #4
 107              	.L6:
 108              		.align	2
 109              	.L5:
 110 005c 00000000 		.word	hadc1
 111 0060 00200140 		.word	1073815552
 112 0064 0100000F 		.word	251658241
 113 0068 00000000 		.word	.LC0
 114              		.cfi_endproc
 115              	.LFE123:
 117              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 118              		.align	2
 119              		.global	HAL_ADC_MspInit
 120              		.thumb
 121              		.thumb_func
 123              	HAL_ADC_MspInit:
 124              	.LFB124:
  88:Src/adc.c     **** 
  89:Src/adc.c     **** void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
  90:Src/adc.c     **** {
 125              		.loc 1 90 0
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 24
 128              		@ frame_needed = 0, uses_anonymous_args = 0
 129              	.LVL4:
  91:Src/adc.c     **** 
  92:Src/adc.c     ****   GPIO_InitTypeDef GPIO_InitStruct;
  93:Src/adc.c     ****   if(adcHandle->Instance==ADC1)
 130              		.loc 1 93 0
 131 0000 0268     		ldr	r2, [r0]
 132 0002 224B     		ldr	r3, .L12
 133 0004 9A42     		cmp	r2, r3
 134 0006 40D1     		bne	.L11
  90:Src/adc.c     **** 
 135              		.loc 1 90 0
 136 0008 30B5     		push	{r4, r5, lr}
 137              	.LCFI3:
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccc7kXcZ.s 			page 5


 138              		.cfi_def_cfa_offset 12
 139              		.cfi_offset 4, -12
 140              		.cfi_offset 5, -8
 141              		.cfi_offset 14, -4
 142 000a 87B0     		sub	sp, sp, #28
 143              	.LCFI4:
 144              		.cfi_def_cfa_offset 40
 145 000c 0446     		mov	r4, r0
 146              	.LBB2:
  94:Src/adc.c     ****   {
  95:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspInit 0 */
  96:Src/adc.c     **** 
  97:Src/adc.c     ****   /* USER CODE END ADC1_MspInit 0 */
  98:Src/adc.c     ****     /* ADC1 clock enable */
  99:Src/adc.c     ****     __HAL_RCC_ADC1_CLK_ENABLE();
 147              		.loc 1 99 0
 148 000e 0025     		movs	r5, #0
 149 0010 0095     		str	r5, [sp]
 150 0012 03F58C33 		add	r3, r3, #71680
 151 0016 5A6C     		ldr	r2, [r3, #68]
 152 0018 42F48072 		orr	r2, r2, #256
 153 001c 5A64     		str	r2, [r3, #68]
 154 001e 5B6C     		ldr	r3, [r3, #68]
 155 0020 03F48073 		and	r3, r3, #256
 156 0024 0093     		str	r3, [sp]
 157 0026 009B     		ldr	r3, [sp]
 158              	.LBE2:
 100:Src/adc.c     ****   
 101:Src/adc.c     ****     /**ADC1 GPIO Configuration    
 102:Src/adc.c     ****     PA3     ------> ADC1_IN3 
 103:Src/adc.c     ****     */
 104:Src/adc.c     ****     GPIO_InitStruct.Pin = IR_1_Pin;
 159              		.loc 1 104 0
 160 0028 0823     		movs	r3, #8
 161 002a 0193     		str	r3, [sp, #4]
 105:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 162              		.loc 1 105 0
 163 002c 0323     		movs	r3, #3
 164 002e 0293     		str	r3, [sp, #8]
 106:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 165              		.loc 1 106 0
 166 0030 0395     		str	r5, [sp, #12]
 107:Src/adc.c     ****     HAL_GPIO_Init(IR_1_GPIO_Port, &GPIO_InitStruct);
 167              		.loc 1 107 0
 168 0032 1748     		ldr	r0, .L12+4
 169              	.LVL5:
 170 0034 01A9     		add	r1, sp, #4
 171 0036 FFF7FEFF 		bl	HAL_GPIO_Init
 172              	.LVL6:
 108:Src/adc.c     **** 
 109:Src/adc.c     ****     /* ADC1 DMA Init */
 110:Src/adc.c     ****     /* ADC1 Init */
 111:Src/adc.c     ****     hdma_adc1.Instance = DMA2_Stream0;
 173              		.loc 1 111 0
 174 003a 1648     		ldr	r0, .L12+8
 175 003c 164B     		ldr	r3, .L12+12
 176 003e 0360     		str	r3, [r0]
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccc7kXcZ.s 			page 6


 112:Src/adc.c     ****     hdma_adc1.Init.Channel = DMA_CHANNEL_0;
 177              		.loc 1 112 0
 178 0040 4560     		str	r5, [r0, #4]
 113:Src/adc.c     ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 179              		.loc 1 113 0
 180 0042 8560     		str	r5, [r0, #8]
 114:Src/adc.c     ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 181              		.loc 1 114 0
 182 0044 C560     		str	r5, [r0, #12]
 115:Src/adc.c     ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 183              		.loc 1 115 0
 184 0046 4FF48063 		mov	r3, #1024
 185 004a 0361     		str	r3, [r0, #16]
 116:Src/adc.c     ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 186              		.loc 1 116 0
 187 004c 4FF48053 		mov	r3, #4096
 188 0050 4361     		str	r3, [r0, #20]
 117:Src/adc.c     ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 189              		.loc 1 117 0
 190 0052 4FF48043 		mov	r3, #16384
 191 0056 8361     		str	r3, [r0, #24]
 118:Src/adc.c     ****     hdma_adc1.Init.Mode = DMA_CIRCULAR;
 192              		.loc 1 118 0
 193 0058 4FF48073 		mov	r3, #256
 194 005c C361     		str	r3, [r0, #28]
 119:Src/adc.c     ****     hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 195              		.loc 1 119 0
 196 005e 0562     		str	r5, [r0, #32]
 120:Src/adc.c     ****     hdma_adc1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 197              		.loc 1 120 0
 198 0060 4562     		str	r5, [r0, #36]
 121:Src/adc.c     ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 199              		.loc 1 121 0
 200 0062 FFF7FEFF 		bl	HAL_DMA_Init
 201              	.LVL7:
 202 0066 18B1     		cbz	r0, .L9
 122:Src/adc.c     ****     {
 123:Src/adc.c     ****       _Error_Handler(__FILE__, __LINE__);
 203              		.loc 1 123 0
 204 0068 0C48     		ldr	r0, .L12+16
 205 006a 7B21     		movs	r1, #123
 206 006c FFF7FEFF 		bl	_Error_Handler
 207              	.LVL8:
 208              	.L9:
 124:Src/adc.c     ****     }
 125:Src/adc.c     **** 
 126:Src/adc.c     ****     __HAL_LINKDMA(adcHandle,DMA_Handle,hdma_adc1);
 209              		.loc 1 126 0
 210 0070 084B     		ldr	r3, .L12+8
 211 0072 A363     		str	r3, [r4, #56]
 212 0074 9C63     		str	r4, [r3, #56]
 127:Src/adc.c     **** 
 128:Src/adc.c     ****     /* ADC1 interrupt Init */
 129:Src/adc.c     ****     HAL_NVIC_SetPriority(ADC_IRQn, 0, 0);
 213              		.loc 1 129 0
 214 0076 1220     		movs	r0, #18
 215 0078 0021     		movs	r1, #0
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccc7kXcZ.s 			page 7


 216 007a 0A46     		mov	r2, r1
 217 007c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 218              	.LVL9:
 130:Src/adc.c     ****     HAL_NVIC_EnableIRQ(ADC_IRQn);
 219              		.loc 1 130 0
 220 0080 1220     		movs	r0, #18
 221 0082 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 222              	.LVL10:
 131:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 132:Src/adc.c     **** 
 133:Src/adc.c     ****   /* USER CODE END ADC1_MspInit 1 */
 134:Src/adc.c     ****   }
 135:Src/adc.c     **** }
 223              		.loc 1 135 0
 224 0086 07B0     		add	sp, sp, #28
 225              	.LCFI5:
 226              		.cfi_def_cfa_offset 12
 227              		@ sp needed
 228 0088 30BD     		pop	{r4, r5, pc}
 229              	.LVL11:
 230              	.L11:
 231              	.LCFI6:
 232              		.cfi_def_cfa_offset 0
 233              		.cfi_restore 4
 234              		.cfi_restore 5
 235              		.cfi_restore 14
 236 008a 7047     		bx	lr
 237              	.L13:
 238              		.align	2
 239              	.L12:
 240 008c 00200140 		.word	1073815552
 241 0090 00000240 		.word	1073872896
 242 0094 00000000 		.word	hdma_adc1
 243 0098 10640240 		.word	1073898512
 244 009c 00000000 		.word	.LC0
 245              		.cfi_endproc
 246              	.LFE124:
 248              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 249              		.align	2
 250              		.global	HAL_ADC_MspDeInit
 251              		.thumb
 252              		.thumb_func
 254              	HAL_ADC_MspDeInit:
 255              	.LFB125:
 136:Src/adc.c     **** 
 137:Src/adc.c     **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* adcHandle)
 138:Src/adc.c     **** {
 256              		.loc 1 138 0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260              	.LVL12:
 139:Src/adc.c     **** 
 140:Src/adc.c     ****   if(adcHandle->Instance==ADC1)
 261              		.loc 1 140 0
 262 0000 0268     		ldr	r2, [r0]
 263 0002 0B4B     		ldr	r3, .L18
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccc7kXcZ.s 			page 8


 264 0004 9A42     		cmp	r2, r3
 265 0006 11D1     		bne	.L17
 138:Src/adc.c     **** 
 266              		.loc 1 138 0
 267 0008 10B5     		push	{r4, lr}
 268              	.LCFI7:
 269              		.cfi_def_cfa_offset 8
 270              		.cfi_offset 4, -8
 271              		.cfi_offset 14, -4
 272 000a 0446     		mov	r4, r0
 141:Src/adc.c     ****   {
 142:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspDeInit 0 */
 143:Src/adc.c     **** 
 144:Src/adc.c     ****   /* USER CODE END ADC1_MspDeInit 0 */
 145:Src/adc.c     ****     /* Peripheral clock disable */
 146:Src/adc.c     ****     __HAL_RCC_ADC1_CLK_DISABLE();
 273              		.loc 1 146 0
 274 000c 094A     		ldr	r2, .L18+4
 275 000e 536C     		ldr	r3, [r2, #68]
 276 0010 23F48073 		bic	r3, r3, #256
 277 0014 5364     		str	r3, [r2, #68]
 147:Src/adc.c     ****   
 148:Src/adc.c     ****     /**ADC1 GPIO Configuration    
 149:Src/adc.c     ****     PA3     ------> ADC1_IN3 
 150:Src/adc.c     ****     */
 151:Src/adc.c     ****     HAL_GPIO_DeInit(IR_1_GPIO_Port, IR_1_Pin);
 278              		.loc 1 151 0
 279 0016 0848     		ldr	r0, .L18+8
 280              	.LVL13:
 281 0018 0821     		movs	r1, #8
 282 001a FFF7FEFF 		bl	HAL_GPIO_DeInit
 283              	.LVL14:
 152:Src/adc.c     **** 
 153:Src/adc.c     ****     /* ADC1 DMA DeInit */
 154:Src/adc.c     ****     HAL_DMA_DeInit(adcHandle->DMA_Handle);
 284              		.loc 1 154 0
 285 001e A06B     		ldr	r0, [r4, #56]
 286 0020 FFF7FEFF 		bl	HAL_DMA_DeInit
 287              	.LVL15:
 155:Src/adc.c     **** 
 156:Src/adc.c     ****     /* ADC1 interrupt Deinit */
 157:Src/adc.c     ****     HAL_NVIC_DisableIRQ(ADC_IRQn);
 288              		.loc 1 157 0
 289 0024 1220     		movs	r0, #18
 290 0026 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 291              	.LVL16:
 292 002a 10BD     		pop	{r4, pc}
 293              	.LVL17:
 294              	.L17:
 295              	.LCFI8:
 296              		.cfi_def_cfa_offset 0
 297              		.cfi_restore 4
 298              		.cfi_restore 14
 299 002c 7047     		bx	lr
 300              	.L19:
 301 002e 00BF     		.align	2
 302              	.L18:
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccc7kXcZ.s 			page 9


 303 0030 00200140 		.word	1073815552
 304 0034 00380240 		.word	1073887232
 305 0038 00000240 		.word	1073872896
 306              		.cfi_endproc
 307              	.LFE125:
 309              		.comm	hdma_adc1,96,4
 310              		.comm	hadc1,72,4
 311              		.section	.rodata.str1.4,"aMS",%progbits,1
 312              		.align	2
 313              	.LC0:
 314 0000 5372632F 		.ascii	"Src/adc.c\000"
 314      6164632E 
 314      6300
 315              		.text
 316              	.Letext0:
 317              		.file 2 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 318              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/machine/_default_types
 319              		.file 4 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/sys/_stdint.h"
 320              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 321              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 322              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 323              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 324              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 325              		.file 10 "Drivers/CMSIS/Include/core_cm4.h"
 326              		.file 11 "Inc/dma.h"
 327              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccc7kXcZ.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 adc.c
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccc7kXcZ.s:21     .text.MX_ADC1_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccc7kXcZ.s:26     .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccc7kXcZ.s:110    .text.MX_ADC1_Init:000000000000005c $d
                            *COM*:0000000000000048 hadc1
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccc7kXcZ.s:118    .text.HAL_ADC_MspInit:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccc7kXcZ.s:123    .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccc7kXcZ.s:240    .text.HAL_ADC_MspInit:000000000000008c $d
                            *COM*:0000000000000060 hdma_adc1
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccc7kXcZ.s:249    .text.HAL_ADC_MspDeInit:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccc7kXcZ.s:254    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccc7kXcZ.s:303    .text.HAL_ADC_MspDeInit:0000000000000030 $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccc7kXcZ.s:312    .rodata.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_ADC_Init
_Error_Handler
HAL_ADC_ConfigChannel
HAL_GPIO_Init
HAL_DMA_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_DMA_DeInit
HAL_NVIC_DisableIRQ
