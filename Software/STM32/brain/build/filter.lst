ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//cc195jUJ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"filter.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.global	__aeabi_ui2d
  21              		.global	__aeabi_ddiv
  22              		.global	__aeabi_i2d
  23              		.global	__aeabi_dmul
  24              		.global	__aeabi_dadd
  25              		.global	__aeabi_dsub
  26              		.section	.text.goertzel,"ax",%progbits
  27              		.align	2
  28              		.global	goertzel
  29              		.thumb
  30              		.thumb_func
  32              	goertzel:
  33              	.LFB123:
  34              		.file 1 "Src/filter.c"
   1:Src/filter.c  **** #include "filter.h"
   2:Src/filter.c  **** 
   3:Src/filter.c  **** double goertzel(uint32_t *x, uint32_t sample_rate, uint16_t freq, uint16_t window_size, uint8_t off
   4:Src/filter.c  **** {
  35              		.loc 1 4 0
  36              		.cfi_startproc
  37              		@ args = 4, pretend = 0, frame = 8
  38              		@ frame_needed = 0, uses_anonymous_args = 0
  39              	.LVL0:
  40 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 36
  43              		.cfi_offset 4, -36
  44              		.cfi_offset 5, -32
  45              		.cfi_offset 6, -28
  46              		.cfi_offset 7, -24
  47              		.cfi_offset 8, -20
  48              		.cfi_offset 9, -16
  49              		.cfi_offset 10, -12
  50              		.cfi_offset 11, -8
  51              		.cfi_offset 14, -4
  52 0004 2DED048B 		fstmfdd	sp!, {d8, d9}
  53              	.LCFI1:
  54              		.cfi_def_cfa_offset 52
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//cc195jUJ.s 			page 2


  55              		.cfi_offset 80, -52
  56              		.cfi_offset 81, -48
  57              		.cfi_offset 82, -44
  58              		.cfi_offset 83, -40
  59 0008 83B0     		sub	sp, sp, #12
  60              	.LCFI2:
  61              		.cfi_def_cfa_offset 64
  62 000a 0546     		mov	r5, r0
  63 000c 9246     		mov	r10, r2
  64 000e 1C46     		mov	r4, r3
   5:Src/filter.c  ****   // Set up initial parameters
   6:Src/filter.c  ****   double f_step = sample_rate / (double)window_size;
  65              		.loc 1 6 0
  66 0010 0846     		mov	r0, r1
  67              	.LVL1:
  68 0012 FFF7FEFF 		bl	__aeabi_ui2d
  69              	.LVL2:
  70 0016 8046     		mov	r8, r0
  71 0018 8946     		mov	r9, r1
  72 001a 2046     		mov	r0, r4
  73 001c FFF7FEFF 		bl	__aeabi_ui2d
  74              	.LVL3:
  75 0020 0646     		mov	r6, r0
  76 0022 0F46     		mov	r7, r1
  77 0024 4046     		mov	r0, r8
  78 0026 4946     		mov	r1, r9
  79 0028 3246     		mov	r2, r6
  80 002a 3B46     		mov	r3, r7
  81 002c FFF7FEFF 		bl	__aeabi_ddiv
  82              	.LVL4:
  83 0030 8046     		mov	r8, r0
  84 0032 8946     		mov	r9, r1
  85              	.LVL5:
   7:Src/filter.c  ****   double f_step_normalized = 1.0 / (double)window_size;
  86              		.loc 1 7 0
  87 0034 0020     		movs	r0, #0
  88 0036 4E49     		ldr	r1, .L5+16
  89 0038 3246     		mov	r2, r6
  90 003a 3B46     		mov	r3, r7
  91 003c FFF7FEFF 		bl	__aeabi_ddiv
  92              	.LVL6:
  93 0040 0646     		mov	r6, r0
  94 0042 0F46     		mov	r7, r1
  95              	.LVL7:
   8:Src/filter.c  ****   double k = freq / f_step;
  96              		.loc 1 8 0
  97 0044 5046     		mov	r0, r10
  98 0046 FFF7FEFF 		bl	__aeabi_i2d
  99              	.LVL8:
 100 004a 4246     		mov	r2, r8
 101 004c 4B46     		mov	r3, r9
 102 004e FFF7FEFF 		bl	__aeabi_ddiv
 103              	.LVL9:
   9:Src/filter.c  **** 
  10:Src/filter.c  ****   // number of frequencies is the same size as the number of
  11:Src/filter.c  ****   // upper and lower bin limits; loop through bin limits (i.e.
  12:Src/filter.c  ****   // k_start and k_end pairs, and evaluate goertzel from there)
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//cc195jUJ.s 			page 3


  13:Src/filter.c  ****   double normalizedfreq, w_real;
  14:Src/filter.c  **** 
  15:Src/filter.c  ****   normalizedfreq = k * f_step_normalized;
 104              		.loc 1 15 0
 105 0052 3246     		mov	r2, r6
 106 0054 3B46     		mov	r3, r7
 107 0056 FFF7FEFF 		bl	__aeabi_dmul
 108              	.LVL10:
  16:Src/filter.c  ****   w_real = 2.0 * cos(2.0 * PI * normalizedfreq);
 109              		.loc 1 16 0
 110 005a 41A3     		adr	r3, .L5
 111 005c D3E90023 		ldrd	r2, [r3]
 112 0060 FFF7FEFF 		bl	__aeabi_dmul
 113              	.LVL11:
 114 0064 41EC100B 		fmdrr	d0, r0, r1
 115 0068 FFF7FEFF 		bl	cos
 116              	.LVL12:
 117 006c 53EC102B 		fmrrd	r2, r3, d0
 118 0070 10EE100A 		fmrs	r0, s0	@ int
 119 0074 1946     		mov	r1, r3
 120 0076 FFF7FEFF 		bl	__aeabi_dadd
 121              	.LVL13:
 122 007a CDE90001 		strd	r0, [sp]
 123              	.LVL14:
  17:Src/filter.c  ****   double d1 = 0, d2 = 0, y = 0, tot_power = 1;
  18:Src/filter.c  ****   uint16_t n = offset;
 124              		.loc 1 18 0
 125 007e 9DF840A0 		ldrb	r10, [sp, #64]	@ zero_extendqisi2
 126 0082 1FFA8AFA 		uxth	r10, r10
 127              	.LVL15:
  17:Src/filter.c  ****   double d1 = 0, d2 = 0, y = 0, tot_power = 1;
 128              		.loc 1 17 0
 129 0086 4FF00008 		mov	r8, #0
 130              	.LVL16:
 131 008a DFF8E490 		ldr	r9, .L5+16
 132 008e 9FED369B 		fldd	d9, .L5+8
 133 0092 B0EE498A 		fcpys	s16, s18
 134 0096 F0EE698A 		fcpys	s17, s19
 135 009a A346     		mov	fp, r4
  19:Src/filter.c  ****   while (n < window_size)
 136              		.loc 1 19 0
 137 009c 2CE0     		b	.L2
 138              	.LVL17:
 139              	.L3:
  20:Src/filter.c  ****   {
  21:Src/filter.c  ****     y = x[n] + w_real * d1 - d2;
 140              		.loc 1 21 0
 141 009e 55F82A40 		ldr	r4, [r5, r10, lsl #2]
 142 00a2 DDE90001 		ldrd	r0, [sp]
 143 00a6 53EC182B 		fmrrd	r2, r3, d8
 144 00aa FFF7FEFF 		bl	__aeabi_dmul
 145              	.LVL18:
 146 00ae 0646     		mov	r6, r0
 147 00b0 0F46     		mov	r7, r1
 148 00b2 2046     		mov	r0, r4
 149 00b4 FFF7FEFF 		bl	__aeabi_ui2d
 150              	.LVL19:
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//cc195jUJ.s 			page 4


 151 00b8 3246     		mov	r2, r6
 152 00ba 3B46     		mov	r3, r7
 153 00bc FFF7FEFF 		bl	__aeabi_dadd
 154              	.LVL20:
 155 00c0 53EC192B 		fmrrd	r2, r3, d9
 156 00c4 FFF7FEFF 		bl	__aeabi_dsub
 157              	.LVL21:
 158 00c8 0646     		mov	r6, r0
 159 00ca 0F46     		mov	r7, r1
 160              	.LVL22:
  22:Src/filter.c  ****     d2 = d1;
  23:Src/filter.c  ****     d1 = y;
  24:Src/filter.c  ****     tot_power += x[n] * x[n];
 161              		.loc 1 24 0
 162 00cc 04FB04F0 		mul	r0, r4, r4
 163 00d0 FFF7FEFF 		bl	__aeabi_ui2d
 164              	.LVL23:
 165 00d4 0246     		mov	r2, r0
 166 00d6 0B46     		mov	r3, r1
 167 00d8 4046     		mov	r0, r8
 168 00da 4946     		mov	r1, r9
 169 00dc FFF7FEFF 		bl	__aeabi_dadd
 170              	.LVL24:
 171 00e0 8046     		mov	r8, r0
 172              	.LVL25:
 173 00e2 8946     		mov	r9, r1
 174              	.LVL26:
  25:Src/filter.c  ****     n += 3;
 175              		.loc 1 25 0
 176 00e4 0AF1030A 		add	r10, r10, #3
 177              	.LVL27:
 178 00e8 1FFA8AFA 		uxth	r10, r10
 179              	.LVL28:
  22:Src/filter.c  ****     d2 = d1;
 180              		.loc 1 22 0
 181 00ec B0EE489A 		fcpys	s18, s16
 182 00f0 F0EE689A 		fcpys	s19, s17
  23:Src/filter.c  ****     tot_power += x[n] * x[n];
 183              		.loc 1 23 0
 184 00f4 47EC186B 		fmdrr	d8, r6, r7
 185              	.LVL29:
 186              	.L2:
  19:Src/filter.c  ****   {
 187              		.loc 1 19 0
 188 00f8 DA45     		cmp	r10, fp
 189 00fa D0D3     		bcc	.L3
  26:Src/filter.c  ****   }
  27:Src/filter.c  **** 
  28:Src/filter.c  ****   return (d2 * d2 + d1 * d1 - w_real * d1 * d2) / tot_power;
 190              		.loc 1 28 0
 191 00fc 51EC190B 		fmrrd	r0, r1, d9
 192 0100 53EC192B 		fmrrd	r2, r3, d9
 193 0104 FFF7FEFF 		bl	__aeabi_dmul
 194              	.LVL30:
 195 0108 0446     		mov	r4, r0
 196 010a 0D46     		mov	r5, r1
 197              	.LVL31:
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//cc195jUJ.s 			page 5


 198 010c 51EC180B 		fmrrd	r0, r1, d8
 199 0110 53EC182B 		fmrrd	r2, r3, d8
 200 0114 FFF7FEFF 		bl	__aeabi_dmul
 201              	.LVL32:
 202 0118 0246     		mov	r2, r0
 203 011a 0B46     		mov	r3, r1
 204 011c 2046     		mov	r0, r4
 205 011e 2946     		mov	r1, r5
 206 0120 FFF7FEFF 		bl	__aeabi_dadd
 207              	.LVL33:
 208 0124 0446     		mov	r4, r0
 209 0126 0D46     		mov	r5, r1
 210 0128 DDE90001 		ldrd	r0, [sp]
 211 012c 53EC182B 		fmrrd	r2, r3, d8
 212 0130 FFF7FEFF 		bl	__aeabi_dmul
 213              	.LVL34:
 214 0134 53EC192B 		fmrrd	r2, r3, d9
 215 0138 FFF7FEFF 		bl	__aeabi_dmul
 216              	.LVL35:
 217 013c 0246     		mov	r2, r0
 218 013e 0B46     		mov	r3, r1
 219 0140 2046     		mov	r0, r4
 220 0142 2946     		mov	r1, r5
 221 0144 FFF7FEFF 		bl	__aeabi_dsub
 222              	.LVL36:
 223 0148 4246     		mov	r2, r8
 224 014a 4B46     		mov	r3, r9
 225 014c FFF7FEFF 		bl	__aeabi_ddiv
 226              	.LVL37:
  29:Src/filter.c  **** }
 227              		.loc 1 29 0
 228 0150 41EC100B 		fmdrr	d0, r0, r1
 229 0154 03B0     		add	sp, sp, #12
 230              	.LCFI3:
 231              		.cfi_def_cfa_offset 52
 232              	.LVL38:
 233              		@ sp needed
 234 0156 BDEC048B 		fldmfdd	sp!, {d8-d9}
 235              	.LCFI4:
 236              		.cfi_restore 82
 237              		.cfi_restore 83
 238              		.cfi_restore 80
 239              		.cfi_restore 81
 240              		.cfi_def_cfa_offset 36
 241              	.LVL39:
 242 015a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 243              	.LVL40:
 244              	.L6:
 245 015e 00BF     		.align	3
 246              	.L5:
 247 0160 182D4454 		.word	1413754136
 248 0164 FB211940 		.word	1075388923
 249 0168 00000000 		.word	0
 250 016c 00000000 		.word	0
 251 0170 0000F03F 		.word	1072693248
 252              		.cfi_endproc
 253              	.LFE123:
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//cc195jUJ.s 			page 6


 255              		.text
 256              	.Letext0:
 257              		.file 2 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/machine/_default_types
 258              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/sys/_stdint.h"
 259              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 260              		.file 5 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/math.h"
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//cc195jUJ.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 filter.c
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//cc195jUJ.s:27     .text.goertzel:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//cc195jUJ.s:32     .text.goertzel:0000000000000000 goertzel
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//cc195jUJ.s:247    .text.goertzel:0000000000000160 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
__aeabi_ui2d
__aeabi_ddiv
__aeabi_i2d
__aeabi_dmul
__aeabi_dadd
__aeabi_dsub
cos
