ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccOAOBQ2.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"main.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.global	__aeabi_d2iz
  21              		.global	__aeabi_i2d
  22              		.global	__aeabi_dsub
  23              		.global	__aeabi_d2uiz
  24              		.global	__aeabi_dadd
  25              		.section	.text.do_pid,"ax",%progbits
  26              		.align	2
  27              		.global	do_pid
  28              		.thumb
  29              		.thumb_func
  31              	do_pid:
  32              	.LFB124:
  33              		.file 1 "Src/main.c"
   1:Src/main.c    **** 
   2:Src/main.c    **** /**
   3:Src/main.c    ****  ******************************************************************************
   4:Src/main.c    ****  * @file           : main.c
   5:Src/main.c    ****  * @brief          : Main program body
   6:Src/main.c    ****  ******************************************************************************
   7:Src/main.c    ****  ** This notice applies to any and all portions of this file
   8:Src/main.c    ****  * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****  * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****  * inserted by the user or by software development tools
  11:Src/main.c    ****  * are owned by their respective copyright owners.
  12:Src/main.c    ****  *
  13:Src/main.c    ****  * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/main.c    ****  *
  15:Src/main.c    ****  * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****  * are permitted provided that the following conditions are met:
  17:Src/main.c    ****  *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****  *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****  *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****  *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****  *      and/or other materials provided with the distribution.
  22:Src/main.c    ****  *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****  *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****  *      without specific prior written permission.
  25:Src/main.c    ****  *
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccOAOBQ2.s 			page 2


  26:Src/main.c    ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/main.c    ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/main.c    ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****  * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****  *
  37:Src/main.c    ****  ******************************************************************************
  38:Src/main.c    ****  */
  39:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  40:Src/main.c    **** #include "main.h"
  41:Src/main.c    **** #include "stm32f4xx_hal.h"
  42:Src/main.c    **** #include "stm32f4xx_it.h"
  43:Src/main.c    **** #include "adc.h"
  44:Src/main.c    **** #include "i2c.h"
  45:Src/main.c    **** #include "tim.h"
  46:Src/main.c    **** #include "usart.h"
  47:Src/main.c    **** #include "gpio.h"
  48:Src/main.c    **** 
  49:Src/main.c    **** /* USER CODE BEGIN Includes */
  50:Src/main.c    **** #include "fonts.h"
  51:Src/main.c    **** #include "ssd1306.h"
  52:Src/main.c    **** #include "pid.h"
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE END Includes */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* USER CODE BEGIN GV */
  57:Src/main.c    **** /* Global variables ---------------------------------------------------------*/
  58:Src/main.c    **** uint8_t PUSH_BUTTON_STATE = 0;
  59:Src/main.c    **** /* USER CODE END GV */
  60:Src/main.c    **** 
  61:Src/main.c    **** /* USER CODE BEGIN PV */
  62:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  63:Src/main.c    **** 
  64:Src/main.c    **** /* USER CODE END PV */
  65:Src/main.c    **** 
  66:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  67:Src/main.c    **** void SystemClock_Config(void);
  68:Src/main.c    **** 
  69:Src/main.c    **** /* USER CODE BEGIN PFP */
  70:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  71:Src/main.c    **** void print(char msg[], int row);
  72:Src/main.c    **** void update_motor_speed(int m, uint32_t speed[]);
  73:Src/main.c    **** void do_pid(PID_t *pid_struct);
  74:Src/main.c    **** 
  75:Src/main.c    **** /* USER CODE END PFP */
  76:Src/main.c    **** 
  77:Src/main.c    **** /* USER CODE BEGIN 0 */
  78:Src/main.c    **** 
  79:Src/main.c    **** /* USER CODE END 0 */
  80:Src/main.c    **** 
  81:Src/main.c    **** /**
  82:Src/main.c    ****  * @brief  The application entry point.
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccOAOBQ2.s 			page 3


  83:Src/main.c    ****  *
  84:Src/main.c    ****  * @retval None
  85:Src/main.c    ****  */
  86:Src/main.c    **** int main(void)
  87:Src/main.c    **** {
  88:Src/main.c    ****     /* USER CODE BEGIN 1 */
  89:Src/main.c    **** 
  90:Src/main.c    ****     /* USER CODE END 1 */
  91:Src/main.c    **** 
  92:Src/main.c    ****     /* MCU Configuration----------------------------------------------------------*/
  93:Src/main.c    **** 
  94:Src/main.c    ****     /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  95:Src/main.c    ****     HAL_Init();
  96:Src/main.c    **** 
  97:Src/main.c    ****     /* USER CODE BEGIN Init */
  98:Src/main.c    **** 
  99:Src/main.c    ****     /* USER CODE END Init */
 100:Src/main.c    **** 
 101:Src/main.c    ****     /* Configure the system clock */
 102:Src/main.c    ****     SystemClock_Config();
 103:Src/main.c    **** 
 104:Src/main.c    ****     /* USER CODE BEGIN SysInit */
 105:Src/main.c    **** 
 106:Src/main.c    ****     /* USER CODE END SysInit */
 107:Src/main.c    **** 
 108:Src/main.c    ****     /* Initialize all configured peripherals */
 109:Src/main.c    ****     MX_GPIO_Init();
 110:Src/main.c    ****     MX_TIM3_Init();
 111:Src/main.c    ****     MX_TIM5_Init();
 112:Src/main.c    ****     MX_TIM1_Init();
 113:Src/main.c    ****     MX_TIM2_Init();
 114:Src/main.c    ****     MX_USART6_UART_Init();
 115:Src/main.c    ****     MX_ADC1_Init();
 116:Src/main.c    ****     MX_I2C1_Init();
 117:Src/main.c    ****     MX_TIM4_Init();
 118:Src/main.c    ****     MX_TIM9_Init();
 119:Src/main.c    ****     ssd1306_Init();
 120:Src/main.c    ****     /* USER CODE BEGIN 2 */
 121:Src/main.c    **** 
 122:Src/main.c    ****     /* Initialize all timer related stuffs*/
 123:Src/main.c    ****     HAL_TIM_Encoder_Start(&htim4,TIM_CHANNEL_ALL);
 124:Src/main.c    ****     HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 125:Src/main.c    ****     HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_3);
 126:Src/main.c    ****     HAL_TIM_Base_Start(&htim9);
 127:Src/main.c    **** 
 128:Src/main.c    ****     // declare external variables for use with interrupts
 129:Src/main.c    **** 
 130:Src/main.c    ****     /* USER CODE END 2 */
 131:Src/main.c    ****     print("Starting", 0);
 132:Src/main.c    ****     char msg[20] = "";
 133:Src/main.c    ****     int pid_select = 0;
 134:Src/main.c    ****     uint32_t values[3] = {10,200,0};
 135:Src/main.c    ****     PID_t pid_s = pid_Init(values[0],values[1],values[2],5,2);
 136:Src/main.c    ****     print("P: 10", 0);
 137:Src/main.c    ****     print("I: 200", 1);
 138:Src/main.c    ****     print("D: 0", 1);
 139:Src/main.c    ****     /* Infinite loop */
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccOAOBQ2.s 			page 4


 140:Src/main.c    ****     /* USER CODE BEGIN WHILE */
 141:Src/main.c    ****     while (1)
 142:Src/main.c    ****     {
 143:Src/main.c    ****         if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_13)==0){
 144:Src/main.c    ****             HAL_TIM_PWM_Stop(&htim1, TIM_CHANNEL_1);
 145:Src/main.c    ****             HAL_TIM_PWM_Stop(&htim1, TIM_CHANNEL_3);
 146:Src/main.c    ****             sprintf(msg, "%lu", values[pid_select]);
 147:Src/main.c    ****             print(msg, 0);
 148:Src/main.c    ****             TIM4->CNT = values[pid_select];
 149:Src/main.c    ****             while(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_13)==0){
 150:Src/main.c    ****                 values[pid_select] = TIM4->CNT;
 151:Src/main.c    ****                 sprintf(msg, "%lu", values[pid_select]);
 152:Src/main.c    ****                 print(msg, 0);
 153:Src/main.c    ****             }
 154:Src/main.c    ****             pid_s = pid_Init(values[0],values[1],values[2],5,2);
 155:Src/main.c    ****             pid_select = pid_select==0? 1: pid_select==1? 2: 0;
 156:Src/main.c    ****             HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 157:Src/main.c    ****             HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_3);
 158:Src/main.c    ****             if(pid_select==0){
 159:Src/main.c    ****                 sprintf(msg, "%lu", values[0]);
 160:Src/main.c    ****                 print(msg, 0);
 161:Src/main.c    ****                 sprintf(msg, "%lu", values[1]);
 162:Src/main.c    ****                 print(msg, 1);
 163:Src/main.c    ****                 sprintf(msg, "%lu", values[2]);
 164:Src/main.c    ****                 print(msg, 2);
 165:Src/main.c    ****             }
 166:Src/main.c    ****         }
 167:Src/main.c    ****         do_pid(&pid_s);
 168:Src/main.c    **** 
 169:Src/main.c    ****         /* USER CODE END WHILE */
 170:Src/main.c    **** 
 171:Src/main.c    ****         /* USER CODE BEGIN 3 */
 172:Src/main.c    **** 
 173:Src/main.c    ****     }
 174:Src/main.c    ****     /* USER CODE END 3 */
 175:Src/main.c    **** 
 176:Src/main.c    **** }
 177:Src/main.c    **** 
 178:Src/main.c    **** void do_pid(PID_t *pid_struct){
  34              		.loc 1 178 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 0, uses_anonymous_args = 0
  38              	.LVL0:
  39 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  40              	.LCFI0:
  41              		.cfi_def_cfa_offset 24
  42              		.cfi_offset 3, -24
  43              		.cfi_offset 4, -20
  44              		.cfi_offset 5, -16
  45              		.cfi_offset 6, -12
  46              		.cfi_offset 7, -8
  47              		.cfi_offset 14, -4
  48 0002 0646     		mov	r6, r0
 179:Src/main.c    ****     /* Read sensors */
 180:Src/main.c    ****     uint8_t left = HAL_GPIO_ReadPin(TAPE_LEFT_GPIO_Port, TAPE_LEFT_Pin)? 0 : 1;
  49              		.loc 1 180 0
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccOAOBQ2.s 			page 5


  50 0004 3A4D     		ldr	r5, .L11
  51 0006 2846     		mov	r0, r5
  52              	.LVL1:
  53 0008 4FF48041 		mov	r1, #16384
  54 000c FFF7FEFF 		bl	HAL_GPIO_ReadPin
  55              	.LVL2:
  56 0010 B0FA80F4 		clz	r4, r0
  57 0014 6409     		lsrs	r4, r4, #5
  58              	.LVL3:
 181:Src/main.c    ****     uint8_t right = HAL_GPIO_ReadPin(TAPE_RIGHT_GPIO_Port, TAPE_RIGHT_Pin)? 0 : 1;
  59              		.loc 1 181 0
  60 0016 2846     		mov	r0, r5
  61 0018 4FF40041 		mov	r1, #32768
  62 001c FFF7FEFF 		bl	HAL_GPIO_ReadPin
  63              	.LVL4:
  64 0020 B0FA80F0 		clz	r0, r0
  65 0024 4009     		lsrs	r0, r0, #5
  66              	.LVL5:
 182:Src/main.c    **** 
 183:Src/main.c    ****     /* Get error */
 184:Src/main.c    ****     if(left && right){ pid_struct->err = 0; }
  67              		.loc 1 184 0
  68 0026 1CB1     		cbz	r4, .L2
  69              		.loc 1 184 0 is_stmt 0 discriminator 1
  70 0028 10B1     		cbz	r0, .L2
  71              		.loc 1 184 0 discriminator 2
  72 002a 0023     		movs	r3, #0
  73 002c 3362     		str	r3, [r6, #32]
  74 002e 1AE0     		b	.L3
  75              	.L2:
 185:Src/main.c    ****     else if(left && !right){ pid_struct->err = 1; }
  76              		.loc 1 185 0 is_stmt 1
  77 0030 1CB1     		cbz	r4, .L4
  78              		.loc 1 185 0 is_stmt 0 discriminator 1
  79 0032 10B9     		cbnz	r0, .L4
  80              		.loc 1 185 0 discriminator 2
  81 0034 0123     		movs	r3, #1
  82 0036 3362     		str	r3, [r6, #32]
  83 0038 15E0     		b	.L3
  84              	.L4:
 186:Src/main.c    ****     else if(!left && right){ pid_struct->err = -1; }
  85              		.loc 1 186 0 is_stmt 1
  86 003a 24B9     		cbnz	r4, .L5
  87              		.loc 1 186 0 is_stmt 0 discriminator 1
  88 003c 18B1     		cbz	r0, .L5
  89              		.loc 1 186 0 discriminator 2
  90 003e 4FF0FF33 		mov	r3, #-1
  91 0042 3362     		str	r3, [r6, #32]
  92 0044 0FE0     		b	.L3
  93              	.L5:
 187:Src/main.c    ****     else if(!left && !right && (pid_struct->err < 0)){ pid_struct->err = -5; }
  94              		.loc 1 187 0 is_stmt 1
  95 0046 3CB9     		cbnz	r4, .L6
  96              		.loc 1 187 0 is_stmt 0 discriminator 1
  97 0048 30B9     		cbnz	r0, .L6
  98              		.loc 1 187 0 discriminator 2
  99 004a 336A     		ldr	r3, [r6, #32]
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccOAOBQ2.s 			page 6


 100 004c 002B     		cmp	r3, #0
 101 004e 03DA     		bge	.L6
 102              		.loc 1 187 0 discriminator 3
 103 0050 6FF00403 		mvn	r3, #4
 104 0054 3362     		str	r3, [r6, #32]
 105 0056 06E0     		b	.L3
 106              	.L6:
 188:Src/main.c    ****     else if(!left && !right && (pid_struct->err > 0)){ pid_struct->err = 5; }
 107              		.loc 1 188 0 is_stmt 1
 108 0058 2CB9     		cbnz	r4, .L3
 109              		.loc 1 188 0 is_stmt 0 discriminator 1
 110 005a 20B9     		cbnz	r0, .L3
 111              		.loc 1 188 0 discriminator 2
 112 005c 336A     		ldr	r3, [r6, #32]
 113 005e 002B     		cmp	r3, #0
 114 0060 01DD     		ble	.L3
 115              		.loc 1 188 0 discriminator 3
 116 0062 0523     		movs	r3, #5
 117 0064 3362     		str	r3, [r6, #32]
 118              	.L3:
 189:Src/main.c    **** 
 190:Src/main.c    ****     /* Get gain */
 191:Src/main.c    ****     double gain = pid_GetGain(pid_struct, &htim9);
 119              		.loc 1 191 0 is_stmt 1
 120 0066 3046     		mov	r0, r6
 121              	.LVL6:
 122 0068 2249     		ldr	r1, .L11+4
 123 006a FFF7FEFF 		bl	pid_GetGain
 124              	.LVL7:
 192:Src/main.c    ****     int g = (int) gain;
 125              		.loc 1 192 0
 126 006e 51EC100B 		fmrrd	r0, r1, d0
 127 0072 FFF7FEFF 		bl	__aeabi_d2iz
 128              	.LVL8:
 193:Src/main.c    **** 
 194:Src/main.c    ****     /* Set Motor Speeds*/
 195:Src/main.c    ****     if(g<0){
 129              		.loc 1 195 0
 130 0076 0028     		cmp	r0, #0
 131 0078 18DA     		bge	.L7
 196:Src/main.c    ****         __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, 0.87*MOTOR_SPEED - g);
 132              		.loc 1 196 0
 133 007a 1F4B     		ldr	r3, .L11+8
 134 007c 1C68     		ldr	r4, [r3]
 135              	.LVL9:
 136 007e FFF7FEFF 		bl	__aeabi_i2d
 137              	.LVL10:
 138 0082 0646     		mov	r6, r0
 139              	.LVL11:
 140 0084 0F46     		mov	r7, r1
 141 0086 0020     		movs	r0, #0
 142 0088 1C49     		ldr	r1, .L11+12
 143 008a 3246     		mov	r2, r6
 144 008c 3B46     		mov	r3, r7
 145 008e FFF7FEFF 		bl	__aeabi_dsub
 146              	.LVL12:
 147 0092 FFF7FEFF 		bl	__aeabi_d2uiz
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccOAOBQ2.s 			page 7


 148              	.LVL13:
 149 0096 6063     		str	r0, [r4, #52]
 197:Src/main.c    ****         __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_3, 0.90*MOTOR_SPEED - g);
 150              		.loc 1 197 0
 151 0098 0020     		movs	r0, #0
 152 009a 1949     		ldr	r1, .L11+16
 153 009c 3246     		mov	r2, r6
 154 009e 3B46     		mov	r3, r7
 155 00a0 FFF7FEFF 		bl	__aeabi_dsub
 156              	.LVL14:
 157 00a4 FFF7FEFF 		bl	__aeabi_d2uiz
 158              	.LVL15:
 159 00a8 E063     		str	r0, [r4, #60]
 160 00aa F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 161              	.LVL16:
 162              	.L7:
 198:Src/main.c    ****     }else if(g>0){
 163              		.loc 1 198 0
 164 00ac 0028     		cmp	r0, #0
 165 00ae 16DD     		ble	.L9
 199:Src/main.c    ****         __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, 0.87*MOTOR_SPEED + g);
 166              		.loc 1 199 0
 167 00b0 114B     		ldr	r3, .L11+8
 168 00b2 1C68     		ldr	r4, [r3]
 169              	.LVL17:
 170 00b4 FFF7FEFF 		bl	__aeabi_i2d
 171              	.LVL18:
 172 00b8 0646     		mov	r6, r0
 173              	.LVL19:
 174 00ba 0F46     		mov	r7, r1
 175 00bc 0022     		movs	r2, #0
 176 00be 0F4B     		ldr	r3, .L11+12
 177 00c0 FFF7FEFF 		bl	__aeabi_dadd
 178              	.LVL20:
 179 00c4 FFF7FEFF 		bl	__aeabi_d2uiz
 180              	.LVL21:
 181 00c8 6063     		str	r0, [r4, #52]
 200:Src/main.c    ****         __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_3, 0.90*MOTOR_SPEED + g);
 182              		.loc 1 200 0
 183 00ca 3046     		mov	r0, r6
 184 00cc 3946     		mov	r1, r7
 185 00ce 0022     		movs	r2, #0
 186 00d0 0B4B     		ldr	r3, .L11+16
 187 00d2 FFF7FEFF 		bl	__aeabi_dadd
 188              	.LVL22:
 189 00d6 FFF7FEFF 		bl	__aeabi_d2uiz
 190              	.LVL23:
 191 00da E063     		str	r0, [r4, #60]
 192 00dc F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 193              	.LVL24:
 194              	.L9:
 201:Src/main.c    ****     }else{
 202:Src/main.c    ****         __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, 0.87*MOTOR_SPEED);
 195              		.loc 1 202 0
 196 00de 064B     		ldr	r3, .L11+8
 197 00e0 1B68     		ldr	r3, [r3]
 198 00e2 40F26632 		movw	r2, #870
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccOAOBQ2.s 			page 8


 199 00e6 5A63     		str	r2, [r3, #52]
 203:Src/main.c    ****         __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_3, 0.90*MOTOR_SPEED);
 200              		.loc 1 203 0
 201 00e8 4FF46172 		mov	r2, #900
 202 00ec DA63     		str	r2, [r3, #60]
 203 00ee F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 204              	.LVL25:
 205              	.L12:
 206              		.align	2
 207              	.L11:
 208 00f0 00040240 		.word	1073873920
 209 00f4 00000000 		.word	htim9
 210 00f8 00000000 		.word	htim1
 211 00fc 00308B40 		.word	1082863616
 212 0100 00208C40 		.word	1082925056
 213              		.cfi_endproc
 214              	.LFE124:
 216              		.section	.text.print,"ax",%progbits
 217              		.align	2
 218              		.global	print
 219              		.thumb
 220              		.thumb_func
 222              	print:
 223              	.LFB127:
 204:Src/main.c    ****     }
 205:Src/main.c    **** }
 206:Src/main.c    **** 
 207:Src/main.c    **** void update_motor_speed(int m, uint32_t speed[]){
 208:Src/main.c    ****     __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, speed[0]/100.0*MOTOR_SPEED);
 209:Src/main.c    ****     __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_3, speed[1]/100.0*MOTOR_SPEED);
 210:Src/main.c    ****     char msg[20] = "";
 211:Src/main.c    ****     sprintf(msg, "L: %lu", speed[0]);
 212:Src/main.c    ****     print(msg, 0);
 213:Src/main.c    ****     sprintf(msg, "R: %lu", speed[1]);
 214:Src/main.c    ****     print(msg, 1);
 215:Src/main.c    **** }
 216:Src/main.c    **** 
 217:Src/main.c    **** /**
 218:Src/main.c    ****  * @brief System Clock Configuration
 219:Src/main.c    ****  * @retval None
 220:Src/main.c    ****  */
 221:Src/main.c    **** void SystemClock_Config(void)
 222:Src/main.c    **** {
 223:Src/main.c    **** 
 224:Src/main.c    ****     RCC_OscInitTypeDef RCC_OscInitStruct;
 225:Src/main.c    ****     RCC_ClkInitTypeDef RCC_ClkInitStruct;
 226:Src/main.c    **** 
 227:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 228:Src/main.c    ****     */
 229:Src/main.c    ****     __HAL_RCC_PWR_CLK_ENABLE();
 230:Src/main.c    **** 
 231:Src/main.c    ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 232:Src/main.c    **** 
 233:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 234:Src/main.c    ****     */
 235:Src/main.c    ****     RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 236:Src/main.c    ****     RCC_OscInitStruct.HSIState = RCC_HSI_ON;
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccOAOBQ2.s 			page 9


 237:Src/main.c    ****     RCC_OscInitStruct.HSICalibrationValue = 16;
 238:Src/main.c    ****     RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 239:Src/main.c    ****     RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 240:Src/main.c    ****     RCC_OscInitStruct.PLL.PLLM = 8;
 241:Src/main.c    ****     RCC_OscInitStruct.PLL.PLLN = 72;
 242:Src/main.c    ****     RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 243:Src/main.c    ****     RCC_OscInitStruct.PLL.PLLQ = 4;
 244:Src/main.c    ****     if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 245:Src/main.c    ****     {
 246:Src/main.c    ****         _Error_Handler(__FILE__, __LINE__);
 247:Src/main.c    ****     }
 248:Src/main.c    **** 
 249:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 250:Src/main.c    ****     */
 251:Src/main.c    ****     RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 252:Src/main.c    ****         |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 253:Src/main.c    ****     RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 254:Src/main.c    ****     RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 255:Src/main.c    ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 256:Src/main.c    ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 257:Src/main.c    **** 
 258:Src/main.c    ****     if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 259:Src/main.c    ****     {
 260:Src/main.c    ****         _Error_Handler(__FILE__, __LINE__);
 261:Src/main.c    ****     }
 262:Src/main.c    **** 
 263:Src/main.c    ****     /**Configure the Systick interrupt time 
 264:Src/main.c    ****     */
 265:Src/main.c    ****     HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 266:Src/main.c    **** 
 267:Src/main.c    ****     /**Configure the Systick 
 268:Src/main.c    ****     */
 269:Src/main.c    ****     HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 270:Src/main.c    **** 
 271:Src/main.c    ****     /* SysTick_IRQn interrupt configuration */
 272:Src/main.c    ****     HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 273:Src/main.c    **** }
 274:Src/main.c    **** 
 275:Src/main.c    **** /* USER CODE BEGIN 4 */
 276:Src/main.c    **** /*
 277:Src/main.c    ****  * Rows from 0 - 6
 278:Src/main.c    ****  * Reset screen when printing from row 0
 279:Src/main.c    ****  */
 280:Src/main.c    **** void print(char* msg, int row){
 224              		.loc 1 280 0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228              	.LVL26:
 229 0000 38B5     		push	{r3, r4, r5, lr}
 230              	.LCFI1:
 231              		.cfi_def_cfa_offset 16
 232              		.cfi_offset 3, -16
 233              		.cfi_offset 4, -12
 234              		.cfi_offset 5, -8
 235              		.cfi_offset 14, -4
 236 0002 0546     		mov	r5, r0
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccOAOBQ2.s 			page 10


 281:Src/main.c    ****     if(row==0){
 237              		.loc 1 281 0
 238 0004 0C46     		mov	r4, r1
 239 0006 11B9     		cbnz	r1, .L14
 282:Src/main.c    ****         ssd1306_Fill(Black);
 240              		.loc 1 282 0
 241 0008 0020     		movs	r0, #0
 242              	.LVL27:
 243 000a FFF7FEFF 		bl	ssd1306_Fill
 244              	.LVL28:
 245              	.L14:
 283:Src/main.c    ****     }
 284:Src/main.c    ****     ssd1306_SetCursor(0,row*10);
 246              		.loc 1 284 0
 247 000e 04EB8404 		add	r4, r4, r4, lsl #2
 248              	.LVL29:
 249 0012 6100     		lsls	r1, r4, #1
 250 0014 0020     		movs	r0, #0
 251 0016 01F0FE01 		and	r1, r1, #254
 252 001a FFF7FEFF 		bl	ssd1306_SetCursor
 253              	.LVL30:
 285:Src/main.c    ****     ssd1306_WriteString(msg,Font_7x10,White);
 254              		.loc 1 285 0
 255 001e 054B     		ldr	r3, .L16
 256 0020 2846     		mov	r0, r5
 257 0022 93E80600 		ldmia	r3, {r1, r2}
 258 0026 0123     		movs	r3, #1
 259 0028 FFF7FEFF 		bl	ssd1306_WriteString
 260              	.LVL31:
 286:Src/main.c    ****     ssd1306_UpdateScreen();
 261              		.loc 1 286 0
 262 002c FFF7FEFF 		bl	ssd1306_UpdateScreen
 263              	.LVL32:
 264 0030 38BD     		pop	{r3, r4, r5, pc}
 265              	.LVL33:
 266              	.L17:
 267 0032 00BF     		.align	2
 268              	.L16:
 269 0034 00000000 		.word	Font_7x10
 270              		.cfi_endproc
 271              	.LFE127:
 273              		.global	__aeabi_ui2d
 274              		.global	__aeabi_ddiv
 275              		.global	__aeabi_dmul
 276              		.section	.text.update_motor_speed,"ax",%progbits
 277              		.align	2
 278              		.global	update_motor_speed
 279              		.thumb
 280              		.thumb_func
 282              	update_motor_speed:
 283              	.LFB125:
 207:Src/main.c    ****     __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, speed[0]/100.0*MOTOR_SPEED);
 284              		.loc 1 207 0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 24
 287              		@ frame_needed = 0, uses_anonymous_args = 0
 288              	.LVL34:
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccOAOBQ2.s 			page 11


 289 0000 30B5     		push	{r4, r5, lr}
 290              	.LCFI2:
 291              		.cfi_def_cfa_offset 12
 292              		.cfi_offset 4, -12
 293              		.cfi_offset 5, -8
 294              		.cfi_offset 14, -4
 295 0002 87B0     		sub	sp, sp, #28
 296              	.LCFI3:
 297              		.cfi_def_cfa_offset 40
 298 0004 0D46     		mov	r5, r1
 208:Src/main.c    ****     __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_3, speed[1]/100.0*MOTOR_SPEED);
 299              		.loc 1 208 0
 300 0006 1C4B     		ldr	r3, .L20
 301 0008 1C68     		ldr	r4, [r3]
 302 000a 0868     		ldr	r0, [r1]
 303              	.LVL35:
 304 000c FFF7FEFF 		bl	__aeabi_ui2d
 305              	.LVL36:
 306 0010 0022     		movs	r2, #0
 307 0012 1A4B     		ldr	r3, .L20+4
 308 0014 FFF7FEFF 		bl	__aeabi_ddiv
 309              	.LVL37:
 310 0018 0022     		movs	r2, #0
 311 001a 194B     		ldr	r3, .L20+8
 312 001c FFF7FEFF 		bl	__aeabi_dmul
 313              	.LVL38:
 314 0020 FFF7FEFF 		bl	__aeabi_d2uiz
 315              	.LVL39:
 316 0024 6063     		str	r0, [r4, #52]
 209:Src/main.c    ****     char msg[20] = "";
 317              		.loc 1 209 0
 318 0026 6868     		ldr	r0, [r5, #4]
 319 0028 FFF7FEFF 		bl	__aeabi_ui2d
 320              	.LVL40:
 321 002c 0022     		movs	r2, #0
 322 002e 134B     		ldr	r3, .L20+4
 323 0030 FFF7FEFF 		bl	__aeabi_ddiv
 324              	.LVL41:
 325 0034 0022     		movs	r2, #0
 326 0036 124B     		ldr	r3, .L20+8
 327 0038 FFF7FEFF 		bl	__aeabi_dmul
 328              	.LVL42:
 329 003c FFF7FEFF 		bl	__aeabi_d2uiz
 330              	.LVL43:
 331 0040 E063     		str	r0, [r4, #60]
 210:Src/main.c    ****     sprintf(msg, "L: %lu", speed[0]);
 332              		.loc 1 210 0
 333 0042 0024     		movs	r4, #0
 334 0044 0194     		str	r4, [sp, #4]
 335 0046 0294     		str	r4, [sp, #8]
 336 0048 0394     		str	r4, [sp, #12]
 337 004a 0494     		str	r4, [sp, #16]
 338 004c 0594     		str	r4, [sp, #20]
 211:Src/main.c    ****     print(msg, 0);
 339              		.loc 1 211 0
 340 004e 01A8     		add	r0, sp, #4
 341 0050 0C49     		ldr	r1, .L20+12
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccOAOBQ2.s 			page 12


 342 0052 2A68     		ldr	r2, [r5]
 343 0054 FFF7FEFF 		bl	sprintf
 344              	.LVL44:
 212:Src/main.c    ****     sprintf(msg, "R: %lu", speed[1]);
 345              		.loc 1 212 0
 346 0058 01A8     		add	r0, sp, #4
 347 005a 2146     		mov	r1, r4
 348 005c FFF7FEFF 		bl	print
 349              	.LVL45:
 213:Src/main.c    ****     print(msg, 1);
 350              		.loc 1 213 0
 351 0060 01A8     		add	r0, sp, #4
 352 0062 0949     		ldr	r1, .L20+16
 353 0064 6A68     		ldr	r2, [r5, #4]
 354 0066 FFF7FEFF 		bl	sprintf
 355              	.LVL46:
 214:Src/main.c    **** }
 356              		.loc 1 214 0
 357 006a 01A8     		add	r0, sp, #4
 358 006c 0121     		movs	r1, #1
 359 006e FFF7FEFF 		bl	print
 360              	.LVL47:
 215:Src/main.c    **** 
 361              		.loc 1 215 0
 362 0072 07B0     		add	sp, sp, #28
 363              	.LCFI4:
 364              		.cfi_def_cfa_offset 12
 365              		@ sp needed
 366 0074 30BD     		pop	{r4, r5, pc}
 367              	.LVL48:
 368              	.L21:
 369 0076 00BF     		.align	2
 370              	.L20:
 371 0078 00000000 		.word	htim1
 372 007c 00005940 		.word	1079574528
 373 0080 00408F40 		.word	1083129856
 374 0084 00000000 		.word	.LC1
 375 0088 08000000 		.word	.LC2
 376              		.cfi_endproc
 377              	.LFE125:
 379              		.section	.text._Error_Handler,"ax",%progbits
 380              		.align	2
 381              		.global	_Error_Handler
 382              		.thumb
 383              		.thumb_func
 385              	_Error_Handler:
 386              	.LFB128:
 287:Src/main.c    **** }
 288:Src/main.c    **** 
 289:Src/main.c    **** /* USER CODE END 4 */
 290:Src/main.c    **** 
 291:Src/main.c    **** /**
 292:Src/main.c    ****  * @brief  This function is executed in case of error occurrence.
 293:Src/main.c    ****  * @param  file: The file name as string.
 294:Src/main.c    ****  * @param  line: The line in file as a number.
 295:Src/main.c    ****  * @retval None
 296:Src/main.c    ****  */
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccOAOBQ2.s 			page 13


 297:Src/main.c    **** void _Error_Handler(char *file, int line)
 298:Src/main.c    **** {
 387              		.loc 1 298 0
 388              		.cfi_startproc
 389              		@ Volatile: function does not return.
 390              		@ args = 0, pretend = 0, frame = 0
 391              		@ frame_needed = 0, uses_anonymous_args = 0
 392              		@ link register save eliminated.
 393              	.LVL49:
 394              	.L23:
 299:Src/main.c    ****     /* USER CODE BEGIN Error_Handler_Debug */
 300:Src/main.c    ****     /* User can add his own implementation to report the HAL error return state */
 301:Src/main.c    ****     while(1)
 302:Src/main.c    ****     {
 303:Src/main.c    ****     }
 395              		.loc 1 303 0 discriminator 1
 396 0000 FEE7     		b	.L23
 397              		.cfi_endproc
 398              	.LFE128:
 400 0002 00BF     		.section	.text.SystemClock_Config,"ax",%progbits
 401              		.align	2
 402              		.global	SystemClock_Config
 403              		.thumb
 404              		.thumb_func
 406              	SystemClock_Config:
 407              	.LFB126:
 222:Src/main.c    **** 
 408              		.loc 1 222 0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 80
 411              		@ frame_needed = 0, uses_anonymous_args = 0
 412 0000 00B5     		push	{lr}
 413              	.LCFI5:
 414              		.cfi_def_cfa_offset 4
 415              		.cfi_offset 14, -4
 416 0002 95B0     		sub	sp, sp, #84
 417              	.LCFI6:
 418              		.cfi_def_cfa_offset 88
 419              	.LBB2:
 229:Src/main.c    **** 
 420              		.loc 1 229 0
 421 0004 0022     		movs	r2, #0
 422 0006 0192     		str	r2, [sp, #4]
 423 0008 2A4B     		ldr	r3, .L28
 424 000a 196C     		ldr	r1, [r3, #64]
 425 000c 41F08051 		orr	r1, r1, #268435456
 426 0010 1964     		str	r1, [r3, #64]
 427 0012 1B6C     		ldr	r3, [r3, #64]
 428 0014 03F08053 		and	r3, r3, #268435456
 429 0018 0193     		str	r3, [sp, #4]
 430 001a 019B     		ldr	r3, [sp, #4]
 431              	.LBE2:
 432              	.LBB3:
 231:Src/main.c    **** 
 433              		.loc 1 231 0
 434 001c 0292     		str	r2, [sp, #8]
 435 001e 2649     		ldr	r1, .L28+4
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccOAOBQ2.s 			page 14


 436 0020 0B68     		ldr	r3, [r1]
 437 0022 23F44043 		bic	r3, r3, #49152
 438 0026 43F40043 		orr	r3, r3, #32768
 439 002a 0B60     		str	r3, [r1]
 440 002c 0B68     		ldr	r3, [r1]
 441 002e 03F44043 		and	r3, r3, #49152
 442 0032 0293     		str	r3, [sp, #8]
 443 0034 029B     		ldr	r3, [sp, #8]
 444              	.LBE3:
 235:Src/main.c    ****     RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 445              		.loc 1 235 0
 446 0036 0223     		movs	r3, #2
 447 0038 0893     		str	r3, [sp, #32]
 236:Src/main.c    ****     RCC_OscInitStruct.HSICalibrationValue = 16;
 448              		.loc 1 236 0
 449 003a 0121     		movs	r1, #1
 450 003c 0B91     		str	r1, [sp, #44]
 237:Src/main.c    ****     RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 451              		.loc 1 237 0
 452 003e 1021     		movs	r1, #16
 453 0040 0C91     		str	r1, [sp, #48]
 238:Src/main.c    ****     RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 454              		.loc 1 238 0
 455 0042 0E93     		str	r3, [sp, #56]
 239:Src/main.c    ****     RCC_OscInitStruct.PLL.PLLM = 8;
 456              		.loc 1 239 0
 457 0044 0F92     		str	r2, [sp, #60]
 240:Src/main.c    ****     RCC_OscInitStruct.PLL.PLLN = 72;
 458              		.loc 1 240 0
 459 0046 0822     		movs	r2, #8
 460 0048 1092     		str	r2, [sp, #64]
 241:Src/main.c    ****     RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 461              		.loc 1 241 0
 462 004a 4822     		movs	r2, #72
 463 004c 1192     		str	r2, [sp, #68]
 242:Src/main.c    ****     RCC_OscInitStruct.PLL.PLLQ = 4;
 464              		.loc 1 242 0
 465 004e 1293     		str	r3, [sp, #72]
 243:Src/main.c    ****     if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 466              		.loc 1 243 0
 467 0050 0423     		movs	r3, #4
 468 0052 1393     		str	r3, [sp, #76]
 244:Src/main.c    ****     {
 469              		.loc 1 244 0
 470 0054 08A8     		add	r0, sp, #32
 471 0056 FFF7FEFF 		bl	HAL_RCC_OscConfig
 472              	.LVL50:
 473 005a 18B1     		cbz	r0, .L25
 246:Src/main.c    ****     }
 474              		.loc 1 246 0
 475 005c 1748     		ldr	r0, .L28+8
 476 005e F621     		movs	r1, #246
 477 0060 FFF7FEFF 		bl	_Error_Handler
 478              	.LVL51:
 479              	.L25:
 251:Src/main.c    ****         |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 480              		.loc 1 251 0
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccOAOBQ2.s 			page 15


 481 0064 0F23     		movs	r3, #15
 482 0066 0393     		str	r3, [sp, #12]
 253:Src/main.c    ****     RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 483              		.loc 1 253 0
 484 0068 0221     		movs	r1, #2
 485 006a 0491     		str	r1, [sp, #16]
 254:Src/main.c    ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 486              		.loc 1 254 0
 487 006c 0023     		movs	r3, #0
 488 006e 0593     		str	r3, [sp, #20]
 255:Src/main.c    ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 489              		.loc 1 255 0
 490 0070 4FF48052 		mov	r2, #4096
 491 0074 0692     		str	r2, [sp, #24]
 256:Src/main.c    **** 
 492              		.loc 1 256 0
 493 0076 0793     		str	r3, [sp, #28]
 258:Src/main.c    ****     {
 494              		.loc 1 258 0
 495 0078 03A8     		add	r0, sp, #12
 496 007a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 497              	.LVL52:
 498 007e 20B1     		cbz	r0, .L26
 260:Src/main.c    ****     }
 499              		.loc 1 260 0
 500 0080 0E48     		ldr	r0, .L28+8
 501 0082 4FF48271 		mov	r1, #260
 502 0086 FFF7FEFF 		bl	_Error_Handler
 503              	.LVL53:
 504              	.L26:
 265:Src/main.c    **** 
 505              		.loc 1 265 0
 506 008a FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 507              	.LVL54:
 508 008e 0C4B     		ldr	r3, .L28+12
 509 0090 A3FB0030 		umull	r3, r0, r3, r0
 510 0094 8009     		lsrs	r0, r0, #6
 511 0096 FFF7FEFF 		bl	HAL_SYSTICK_Config
 512              	.LVL55:
 269:Src/main.c    **** 
 513              		.loc 1 269 0
 514 009a 0420     		movs	r0, #4
 515 009c FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 516              	.LVL56:
 272:Src/main.c    **** }
 517              		.loc 1 272 0
 518 00a0 4FF0FF30 		mov	r0, #-1
 519 00a4 0021     		movs	r1, #0
 520 00a6 0A46     		mov	r2, r1
 521 00a8 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 522              	.LVL57:
 273:Src/main.c    **** 
 523              		.loc 1 273 0
 524 00ac 15B0     		add	sp, sp, #84
 525              	.LCFI7:
 526              		.cfi_def_cfa_offset 4
 527              		@ sp needed
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccOAOBQ2.s 			page 16


 528 00ae 5DF804FB 		ldr	pc, [sp], #4
 529              	.L29:
 530 00b2 00BF     		.align	2
 531              	.L28:
 532 00b4 00380240 		.word	1073887232
 533 00b8 00700040 		.word	1073770496
 534 00bc 10000000 		.word	.LC3
 535 00c0 D34D6210 		.word	274877907
 536              		.cfi_endproc
 537              	.LFE126:
 539              		.section	.text.main,"ax",%progbits
 540              		.align	2
 541              		.global	main
 542              		.thumb
 543              		.thumb_func
 545              	main:
 546              	.LFB123:
  87:Src/main.c    ****     /* USER CODE BEGIN 1 */
 547              		.loc 1 87 0
 548              		.cfi_startproc
 549              		@ args = 0, pretend = 0, frame = 112
 550              		@ frame_needed = 0, uses_anonymous_args = 0
 551 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 552              	.LCFI8:
 553              		.cfi_def_cfa_offset 28
 554              		.cfi_offset 4, -28
 555              		.cfi_offset 5, -24
 556              		.cfi_offset 6, -20
 557              		.cfi_offset 7, -16
 558              		.cfi_offset 8, -12
 559              		.cfi_offset 9, -8
 560              		.cfi_offset 14, -4
 561 0004 9FB0     		sub	sp, sp, #124
 562              	.LCFI9:
 563              		.cfi_def_cfa_offset 152
  95:Src/main.c    **** 
 564              		.loc 1 95 0
 565 0006 FFF7FEFF 		bl	HAL_Init
 566              	.LVL58:
 102:Src/main.c    **** 
 567              		.loc 1 102 0
 568 000a FFF7FEFF 		bl	SystemClock_Config
 569              	.LVL59:
 109:Src/main.c    ****     MX_TIM3_Init();
 570              		.loc 1 109 0
 571 000e FFF7FEFF 		bl	MX_GPIO_Init
 572              	.LVL60:
 110:Src/main.c    ****     MX_TIM5_Init();
 573              		.loc 1 110 0
 574 0012 FFF7FEFF 		bl	MX_TIM3_Init
 575              	.LVL61:
 111:Src/main.c    ****     MX_TIM1_Init();
 576              		.loc 1 111 0
 577 0016 FFF7FEFF 		bl	MX_TIM5_Init
 578              	.LVL62:
 112:Src/main.c    ****     MX_TIM2_Init();
 579              		.loc 1 112 0
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccOAOBQ2.s 			page 17


 580 001a FFF7FEFF 		bl	MX_TIM1_Init
 581              	.LVL63:
 113:Src/main.c    ****     MX_USART6_UART_Init();
 582              		.loc 1 113 0
 583 001e FFF7FEFF 		bl	MX_TIM2_Init
 584              	.LVL64:
 114:Src/main.c    ****     MX_ADC1_Init();
 585              		.loc 1 114 0
 586 0022 FFF7FEFF 		bl	MX_USART6_UART_Init
 587              	.LVL65:
 115:Src/main.c    ****     MX_I2C1_Init();
 588              		.loc 1 115 0
 589 0026 FFF7FEFF 		bl	MX_ADC1_Init
 590              	.LVL66:
 116:Src/main.c    ****     MX_TIM4_Init();
 591              		.loc 1 116 0
 592 002a FFF7FEFF 		bl	MX_I2C1_Init
 593              	.LVL67:
 117:Src/main.c    ****     MX_TIM9_Init();
 594              		.loc 1 117 0
 595 002e FFF7FEFF 		bl	MX_TIM4_Init
 596              	.LVL68:
 118:Src/main.c    ****     ssd1306_Init();
 597              		.loc 1 118 0
 598 0032 FFF7FEFF 		bl	MX_TIM9_Init
 599              	.LVL69:
 119:Src/main.c    ****     /* USER CODE BEGIN 2 */
 600              		.loc 1 119 0
 601 0036 FFF7FEFF 		bl	ssd1306_Init
 602              	.LVL70:
 123:Src/main.c    ****     HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 603              		.loc 1 123 0
 604 003a 5B48     		ldr	r0, .L40
 605 003c 1821     		movs	r1, #24
 606 003e FFF7FEFF 		bl	HAL_TIM_Encoder_Start
 607              	.LVL71:
 124:Src/main.c    ****     HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_3);
 608              		.loc 1 124 0
 609 0042 5A4C     		ldr	r4, .L40+4
 610 0044 2046     		mov	r0, r4
 611 0046 0021     		movs	r1, #0
 612 0048 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 613              	.LVL72:
 125:Src/main.c    ****     HAL_TIM_Base_Start(&htim9);
 614              		.loc 1 125 0
 615 004c 2046     		mov	r0, r4
 616 004e 0821     		movs	r1, #8
 617 0050 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 618              	.LVL73:
 126:Src/main.c    **** 
 619              		.loc 1 126 0
 620 0054 5648     		ldr	r0, .L40+8
 621 0056 FFF7FEFF 		bl	HAL_TIM_Base_Start
 622              	.LVL74:
 131:Src/main.c    ****     char msg[20] = "";
 623              		.loc 1 131 0
 624 005a 5648     		ldr	r0, .L40+12
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccOAOBQ2.s 			page 18


 625 005c 0021     		movs	r1, #0
 626 005e FFF7FEFF 		bl	print
 627              	.LVL75:
 132:Src/main.c    ****     int pid_select = 0;
 628              		.loc 1 132 0
 629 0062 0024     		movs	r4, #0
 630 0064 1994     		str	r4, [sp, #100]
 631 0066 1A94     		str	r4, [sp, #104]
 632 0068 1B94     		str	r4, [sp, #108]
 633 006a 1C94     		str	r4, [sp, #112]
 634 006c 1D94     		str	r4, [sp, #116]
 635              	.LVL76:
 134:Src/main.c    ****     PID_t pid_s = pid_Init(values[0],values[1],values[2],5,2);
 636              		.loc 1 134 0
 637 006e 524A     		ldr	r2, .L40+16
 638 0070 16AB     		add	r3, sp, #88
 639 0072 07CA     		ldmia	r2, {r0, r1, r2}
 640 0074 83E80700 		stmia	r3, {r0, r1, r2}
 135:Src/main.c    ****     print("P: 10", 0);
 641              		.loc 1 135 0
 642 0078 0523     		movs	r3, #5
 643 007a 0093     		str	r3, [sp]
 644 007c 0223     		movs	r3, #2
 645 007e 0193     		str	r3, [sp, #4]
 646 0080 0CA8     		add	r0, sp, #48
 647 0082 1699     		ldr	r1, [sp, #88]
 648 0084 179A     		ldr	r2, [sp, #92]
 649 0086 189B     		ldr	r3, [sp, #96]
 650 0088 FFF7FEFF 		bl	pid_Init
 651              	.LVL77:
 136:Src/main.c    ****     print("I: 200", 1);
 652              		.loc 1 136 0
 653 008c 4B48     		ldr	r0, .L40+20
 654 008e 2146     		mov	r1, r4
 655 0090 FFF7FEFF 		bl	print
 656              	.LVL78:
 137:Src/main.c    ****     print("D: 0", 1);
 657              		.loc 1 137 0
 658 0094 4A48     		ldr	r0, .L40+24
 659 0096 0121     		movs	r1, #1
 660 0098 FFF7FEFF 		bl	print
 661              	.LVL79:
 138:Src/main.c    ****     /* Infinite loop */
 662              		.loc 1 138 0
 663 009c 4948     		ldr	r0, .L40+28
 664 009e 0121     		movs	r1, #1
 665 00a0 FFF7FEFF 		bl	print
 666              	.LVL80:
 667              	.L36:
 143:Src/main.c    ****             HAL_TIM_PWM_Stop(&htim1, TIM_CHANNEL_1);
 668              		.loc 1 143 0
 669 00a4 4848     		ldr	r0, .L40+32
 670 00a6 4FF40051 		mov	r1, #8192
 671 00aa FFF7FEFF 		bl	HAL_GPIO_ReadPin
 672              	.LVL81:
 673 00ae 0028     		cmp	r0, #0
 674 00b0 76D1     		bne	.L31
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccOAOBQ2.s 			page 19


 144:Src/main.c    ****             HAL_TIM_PWM_Stop(&htim1, TIM_CHANNEL_3);
 675              		.loc 1 144 0
 676 00b2 3E4D     		ldr	r5, .L40+4
 677 00b4 2846     		mov	r0, r5
 678 00b6 0021     		movs	r1, #0
 679 00b8 FFF7FEFF 		bl	HAL_TIM_PWM_Stop
 680              	.LVL82:
 145:Src/main.c    ****             sprintf(msg, "%lu", values[pid_select]);
 681              		.loc 1 145 0
 682 00bc 2846     		mov	r0, r5
 683 00be 0821     		movs	r1, #8
 684 00c0 FFF7FEFF 		bl	HAL_TIM_PWM_Stop
 685              	.LVL83:
 146:Src/main.c    ****             print(msg, 0);
 686              		.loc 1 146 0
 687 00c4 1EAB     		add	r3, sp, #120
 688 00c6 03EB8403 		add	r3, r3, r4, lsl #2
 689 00ca 53F8205C 		ldr	r5, [r3, #-32]
 690 00ce 19A8     		add	r0, sp, #100
 691 00d0 3E49     		ldr	r1, .L40+36
 692 00d2 2A46     		mov	r2, r5
 693 00d4 FFF7FEFF 		bl	sprintf
 694              	.LVL84:
 147:Src/main.c    ****             TIM4->CNT = values[pid_select];
 695              		.loc 1 147 0
 696 00d8 19A8     		add	r0, sp, #100
 697 00da 0021     		movs	r1, #0
 698 00dc FFF7FEFF 		bl	print
 699              	.LVL85:
 148:Src/main.c    ****             while(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_13)==0){
 700              		.loc 1 148 0
 701 00e0 3B4B     		ldr	r3, .L40+40
 702 00e2 5D62     		str	r5, [r3, #36]
 149:Src/main.c    ****                 values[pid_select] = TIM4->CNT;
 703              		.loc 1 149 0
 704 00e4 0EE0     		b	.L32
 705              	.L33:
 150:Src/main.c    ****                 sprintf(msg, "%lu", values[pid_select]);
 706              		.loc 1 150 0
 707 00e6 3A4B     		ldr	r3, .L40+40
 708 00e8 5A6A     		ldr	r2, [r3, #36]
 709 00ea 1EAB     		add	r3, sp, #120
 710 00ec 03EB8403 		add	r3, r3, r4, lsl #2
 711 00f0 43F8202C 		str	r2, [r3, #-32]
 151:Src/main.c    ****                 print(msg, 0);
 712              		.loc 1 151 0
 713 00f4 19A8     		add	r0, sp, #100
 714 00f6 3549     		ldr	r1, .L40+36
 715 00f8 FFF7FEFF 		bl	sprintf
 716              	.LVL86:
 152:Src/main.c    ****             }
 717              		.loc 1 152 0
 718 00fc 19A8     		add	r0, sp, #100
 719 00fe 0021     		movs	r1, #0
 720 0100 FFF7FEFF 		bl	print
 721              	.LVL87:
 722              	.L32:
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccOAOBQ2.s 			page 20


 149:Src/main.c    ****                 values[pid_select] = TIM4->CNT;
 723              		.loc 1 149 0
 724 0104 3048     		ldr	r0, .L40+32
 725 0106 4FF40051 		mov	r1, #8192
 726 010a FFF7FEFF 		bl	HAL_GPIO_ReadPin
 727              	.LVL88:
 728 010e 0028     		cmp	r0, #0
 729 0110 E9D0     		beq	.L33
 154:Src/main.c    ****             pid_select = pid_select==0? 1: pid_select==1? 2: 0;
 730              		.loc 1 154 0
 731 0112 DDF85890 		ldr	r9, [sp, #88]
 732 0116 DDF85C80 		ldr	r8, [sp, #92]
 733 011a 189F     		ldr	r7, [sp, #96]
 734 011c 0523     		movs	r3, #5
 735 011e 0093     		str	r3, [sp]
 736 0120 0223     		movs	r3, #2
 737 0122 0193     		str	r3, [sp, #4]
 738 0124 02A8     		add	r0, sp, #8
 739 0126 4946     		mov	r1, r9
 740 0128 4246     		mov	r2, r8
 741 012a 3B46     		mov	r3, r7
 742 012c FFF7FEFF 		bl	pid_Init
 743              	.LVL89:
 744 0130 0CAE     		add	r6, sp, #48
 745 0132 02AD     		add	r5, sp, #8
 746 0134 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 747 0136 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 748 0138 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 749 013a 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 750 013c 95E80300 		ldmia	r5, {r0, r1}
 751 0140 86E80300 		stmia	r6, {r0, r1}
 155:Src/main.c    ****             HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 752              		.loc 1 155 0
 753 0144 2CB1     		cbz	r4, .L37
 155:Src/main.c    ****             HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 754              		.loc 1 155 0 is_stmt 0 discriminator 1
 755 0146 012C     		cmp	r4, #1
 756 0148 01D1     		bne	.L38
 155:Src/main.c    ****             HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 757              		.loc 1 155 0
 758 014a 0224     		movs	r4, #2
 759              	.LVL90:
 760 014c 02E0     		b	.L34
 761              	.LVL91:
 762              	.L38:
 763 014e 0024     		movs	r4, #0
 764              	.LVL92:
 765 0150 00E0     		b	.L34
 766              	.LVL93:
 767              	.L37:
 768 0152 0124     		movs	r4, #1
 769              	.LVL94:
 770              	.L34:
 156:Src/main.c    ****             HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_3);
 771              		.loc 1 156 0 is_stmt 1 discriminator 8
 772 0154 154D     		ldr	r5, .L40+4
 773 0156 2846     		mov	r0, r5
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccOAOBQ2.s 			page 21


 774 0158 0021     		movs	r1, #0
 775 015a FFF7FEFF 		bl	HAL_TIM_PWM_Start
 776              	.LVL95:
 157:Src/main.c    ****             if(pid_select==0){
 777              		.loc 1 157 0 discriminator 8
 778 015e 2846     		mov	r0, r5
 779 0160 0821     		movs	r1, #8
 780 0162 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 781              	.LVL96:
 158:Src/main.c    ****                 sprintf(msg, "%lu", values[0]);
 782              		.loc 1 158 0 discriminator 8
 783 0166 DCB9     		cbnz	r4, .L31
 159:Src/main.c    ****                 print(msg, 0);
 784              		.loc 1 159 0
 785 0168 184D     		ldr	r5, .L40+36
 786 016a 19A8     		add	r0, sp, #100
 787 016c 2946     		mov	r1, r5
 788 016e 4A46     		mov	r2, r9
 789 0170 FFF7FEFF 		bl	sprintf
 790              	.LVL97:
 160:Src/main.c    ****                 sprintf(msg, "%lu", values[1]);
 791              		.loc 1 160 0
 792 0174 19A8     		add	r0, sp, #100
 793 0176 0021     		movs	r1, #0
 794 0178 FFF7FEFF 		bl	print
 795              	.LVL98:
 161:Src/main.c    ****                 print(msg, 1);
 796              		.loc 1 161 0
 797 017c 19A8     		add	r0, sp, #100
 798 017e 2946     		mov	r1, r5
 799 0180 4246     		mov	r2, r8
 800 0182 FFF7FEFF 		bl	sprintf
 801              	.LVL99:
 162:Src/main.c    ****                 sprintf(msg, "%lu", values[2]);
 802              		.loc 1 162 0
 803 0186 19A8     		add	r0, sp, #100
 804 0188 0121     		movs	r1, #1
 805 018a FFF7FEFF 		bl	print
 806              	.LVL100:
 163:Src/main.c    ****                 print(msg, 2);
 807              		.loc 1 163 0
 808 018e 19A8     		add	r0, sp, #100
 809 0190 2946     		mov	r1, r5
 810 0192 3A46     		mov	r2, r7
 811 0194 FFF7FEFF 		bl	sprintf
 812              	.LVL101:
 164:Src/main.c    ****             }
 813              		.loc 1 164 0
 814 0198 19A8     		add	r0, sp, #100
 815 019a 0221     		movs	r1, #2
 816 019c FFF7FEFF 		bl	print
 817              	.LVL102:
 818              	.L31:
 167:Src/main.c    **** 
 819              		.loc 1 167 0
 820 01a0 0CA8     		add	r0, sp, #48
 821 01a2 FFF7FEFF 		bl	do_pid
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccOAOBQ2.s 			page 22


 822              	.LVL103:
 173:Src/main.c    ****     /* USER CODE END 3 */
 823              		.loc 1 173 0
 824 01a6 7DE7     		b	.L36
 825              	.L41:
 826              		.align	2
 827              	.L40:
 828 01a8 00000000 		.word	htim4
 829 01ac 00000000 		.word	htim1
 830 01b0 00000000 		.word	htim9
 831 01b4 1C000000 		.word	.LC4
 832 01b8 00000000 		.word	.LANCHOR0
 833 01bc 28000000 		.word	.LC5
 834 01c0 30000000 		.word	.LC6
 835 01c4 38000000 		.word	.LC7
 836 01c8 00080240 		.word	1073874944
 837 01cc 40000000 		.word	.LC8
 838 01d0 00080040 		.word	1073743872
 839              		.cfi_endproc
 840              	.LFE123:
 842              		.global	PUSH_BUTTON_STATE
 843              		.comm	last_time,4,4
 844              		.section	.rodata
 845              		.align	2
 846              		.set	.LANCHOR0,. + 0
 847              	.LC0:
 848 0000 0A000000 		.word	10
 849 0004 C8000000 		.word	200
 850 0008 00000000 		.word	0
 851              		.section	.rodata.str1.4,"aMS",%progbits,1
 852              		.align	2
 853              	.LC1:
 854 0000 4C3A2025 		.ascii	"L: %lu\000"
 854      6C7500
 855 0007 00       		.space	1
 856              	.LC2:
 857 0008 523A2025 		.ascii	"R: %lu\000"
 857      6C7500
 858 000f 00       		.space	1
 859              	.LC3:
 860 0010 5372632F 		.ascii	"Src/main.c\000"
 860      6D61696E 
 860      2E6300
 861 001b 00       		.space	1
 862              	.LC4:
 863 001c 53746172 		.ascii	"Starting\000"
 863      74696E67 
 863      00
 864 0025 000000   		.space	3
 865              	.LC5:
 866 0028 503A2031 		.ascii	"P: 10\000"
 866      3000
 867 002e 0000     		.space	2
 868              	.LC6:
 869 0030 493A2032 		.ascii	"I: 200\000"
 869      303000
 870 0037 00       		.space	1
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccOAOBQ2.s 			page 23


 871              	.LC7:
 872 0038 443A2030 		.ascii	"D: 0\000"
 872      00
 873 003d 000000   		.space	3
 874              	.LC8:
 875 0040 256C7500 		.ascii	"%lu\000"
 876              		.section	.bss.PUSH_BUTTON_STATE,"aw",%nobits
 879              	PUSH_BUTTON_STATE:
 880 0000 00       		.space	1
 881              		.text
 882              	.Letext0:
 883              		.file 2 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 884              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/machine/_default_types
 885              		.file 4 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/sys/_stdint.h"
 886              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 887              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 888              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 889              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 890              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 891              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 892              		.file 11 "Inc/fonts.h"
 893              		.file 12 "Inc/ssd1306.h"
 894              		.file 13 "Inc/pid.h"
 895              		.file 14 "Drivers/CMSIS/Include/core_cm4.h"
 896              		.file 15 "Inc/tim.h"
 897              		.file 16 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/stdio.h"
 898              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 899              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 900              		.file 19 "Inc/gpio.h"
 901              		.file 20 "Inc/usart.h"
 902              		.file 21 "Inc/adc.h"
 903              		.file 22 "Inc/i2c.h"
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccOAOBQ2.s 			page 24


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccOAOBQ2.s:26     .text.do_pid:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccOAOBQ2.s:31     .text.do_pid:0000000000000000 do_pid
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccOAOBQ2.s:208    .text.do_pid:00000000000000f0 $d
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccOAOBQ2.s:217    .text.print:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccOAOBQ2.s:222    .text.print:0000000000000000 print
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccOAOBQ2.s:269    .text.print:0000000000000034 $d
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccOAOBQ2.s:277    .text.update_motor_speed:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccOAOBQ2.s:282    .text.update_motor_speed:0000000000000000 update_motor_speed
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccOAOBQ2.s:371    .text.update_motor_speed:0000000000000078 $d
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccOAOBQ2.s:380    .text._Error_Handler:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccOAOBQ2.s:385    .text._Error_Handler:0000000000000000 _Error_Handler
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccOAOBQ2.s:401    .text.SystemClock_Config:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccOAOBQ2.s:406    .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccOAOBQ2.s:532    .text.SystemClock_Config:00000000000000b4 $d
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccOAOBQ2.s:540    .text.main:0000000000000000 $t
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccOAOBQ2.s:545    .text.main:0000000000000000 main
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccOAOBQ2.s:828    .text.main:00000000000001a8 $d
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccOAOBQ2.s:879    .bss.PUSH_BUTTON_STATE:0000000000000000 PUSH_BUTTON_STATE
                            *COM*:0000000000000004 last_time
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccOAOBQ2.s:845    .rodata:0000000000000000 $d
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccOAOBQ2.s:852    .rodata.str1.4:0000000000000000 $d
/var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccOAOBQ2.s:880    .bss.PUSH_BUTTON_STATE:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
__aeabi_d2iz
__aeabi_i2d
__aeabi_dsub
__aeabi_d2uiz
__aeabi_dadd
HAL_GPIO_ReadPin
pid_GetGain
htim9
htim1
ssd1306_Fill
ssd1306_SetCursor
ssd1306_WriteString
ssd1306_UpdateScreen
Font_7x10
__aeabi_ui2d
__aeabi_ddiv
__aeabi_dmul
sprintf
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
MX_GPIO_Init
MX_TIM3_Init
MX_TIM5_Init
MX_TIM1_Init
MX_TIM2_Init
ARM GAS  /var/folders/68/n33lqcg953z5y1x0pvkj58xc0000gn/T//ccOAOBQ2.s 			page 25


MX_USART6_UART_Init
MX_ADC1_Init
MX_I2C1_Init
MX_TIM4_Init
MX_TIM9_Init
ssd1306_Init
HAL_TIM_Encoder_Start
HAL_TIM_PWM_Start
HAL_TIM_Base_Start
pid_Init
HAL_TIM_PWM_Stop
htim4
