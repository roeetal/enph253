ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"main.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  25              	MX_GPIO_Init:
  26              	.LFB133:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** 
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s 			page 2


  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  40:Src/main.c    **** #include "main.h"
  41:Src/main.c    **** #include "stm32f4xx_hal.h"
  42:Src/main.c    **** 
  43:Src/main.c    **** /* USER CODE BEGIN Includes */
  44:Src/main.c    **** #include "fonts.h"
  45:Src/main.c    **** #include "ssd1306.h"
  46:Src/main.c    **** /* USER CODE END Includes */
  47:Src/main.c    **** 
  48:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  49:Src/main.c    **** ADC_HandleTypeDef hadc1;
  50:Src/main.c    **** 
  51:Src/main.c    **** I2C_HandleTypeDef hi2c1;
  52:Src/main.c    **** 
  53:Src/main.c    **** TIM_HandleTypeDef htim1;
  54:Src/main.c    **** TIM_HandleTypeDef htim2;
  55:Src/main.c    **** TIM_HandleTypeDef htim3;
  56:Src/main.c    **** TIM_HandleTypeDef htim10;
  57:Src/main.c    **** TIM_HandleTypeDef htim11;
  58:Src/main.c    **** 
  59:Src/main.c    **** UART_HandleTypeDef huart6;
  60:Src/main.c    **** 
  61:Src/main.c    **** /* USER CODE BEGIN PV */
  62:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  63:Src/main.c    **** 
  64:Src/main.c    **** /* USER CODE END PV */
  65:Src/main.c    **** 
  66:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  67:Src/main.c    **** void SystemClock_Config(void);
  68:Src/main.c    **** static void MX_GPIO_Init(void);
  69:Src/main.c    **** static void MX_I2C1_Init(void);
  70:Src/main.c    **** static void MX_TIM1_Init(void);
  71:Src/main.c    **** static void MX_TIM2_Init(void);
  72:Src/main.c    **** static void MX_TIM3_Init(void);
  73:Src/main.c    **** static void MX_TIM10_Init(void);
  74:Src/main.c    **** static void MX_TIM11_Init(void);
  75:Src/main.c    **** static void MX_USART6_UART_Init(void);
  76:Src/main.c    **** static void MX_ADC1_Init(void);
  77:Src/main.c    **** 
  78:Src/main.c    **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
  79:Src/main.c    ****                                 
  80:Src/main.c    ****                                 
  81:Src/main.c    **** 
  82:Src/main.c    **** /* USER CODE BEGIN PFP */
  83:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  84:Src/main.c    **** 
  85:Src/main.c    **** /* USER CODE END PFP */
  86:Src/main.c    **** 
  87:Src/main.c    **** /* USER CODE BEGIN 0 */
  88:Src/main.c    **** 
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s 			page 3


  89:Src/main.c    **** /* USER CODE END 0 */
  90:Src/main.c    **** 
  91:Src/main.c    **** /**
  92:Src/main.c    ****   * @brief  The application entry point.
  93:Src/main.c    ****   *
  94:Src/main.c    ****   * @retval None
  95:Src/main.c    ****   */
  96:Src/main.c    **** int main(void)
  97:Src/main.c    **** {
  98:Src/main.c    ****   /* USER CODE BEGIN 1 */
  99:Src/main.c    **** 
 100:Src/main.c    ****   /* USER CODE END 1 */
 101:Src/main.c    **** 
 102:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
 103:Src/main.c    **** 
 104:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 105:Src/main.c    ****   HAL_Init();
 106:Src/main.c    **** 
 107:Src/main.c    ****   /* USER CODE BEGIN Init */
 108:Src/main.c    **** 
 109:Src/main.c    ****   /* USER CODE END Init */
 110:Src/main.c    **** 
 111:Src/main.c    ****   /* Configure the system clock */
 112:Src/main.c    ****   SystemClock_Config();
 113:Src/main.c    **** 
 114:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 115:Src/main.c    **** 
 116:Src/main.c    ****   /* USER CODE END SysInit */
 117:Src/main.c    **** 
 118:Src/main.c    ****   /* Initialize all configured peripherals */
 119:Src/main.c    ****   MX_GPIO_Init();
 120:Src/main.c    ****   MX_I2C1_Init();
 121:Src/main.c    ****   MX_TIM1_Init();
 122:Src/main.c    ****   MX_TIM2_Init();
 123:Src/main.c    ****   MX_TIM3_Init();
 124:Src/main.c    ****   MX_TIM10_Init();
 125:Src/main.c    ****   MX_TIM11_Init();
 126:Src/main.c    ****   MX_USART6_UART_Init();
 127:Src/main.c    ****   MX_ADC1_Init();
 128:Src/main.c    ****   /* USER CODE BEGIN 2 */
 129:Src/main.c    ****   ssd1306_Init();
 130:Src/main.c    ****   HAL_Delay(1000);
 131:Src/main.c    ****   ssd1306_Fill(Black);
 132:Src/main.c    ****   ssd1306_UpdateScreen();
 133:Src/main.c    **** 
 134:Src/main.c    ****   HAL_Delay(1000);
 135:Src/main.c    **** 
 136:Src/main.c    ****   ssd1306_SetCursor(0,0);
 137:Src/main.c    ****   ssd1306_WriteString("Sup fellas",Font_11x18,White);
 138:Src/main.c    **** 
 139:Src/main.c    ****   ssd1306_UpdateScreen();
 140:Src/main.c    ****   /* USER CODE END 2 */
 141:Src/main.c    **** 
 142:Src/main.c    ****   /* Infinite loop */
 143:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 144:Src/main.c    ****   while (1)
 145:Src/main.c    ****   {
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s 			page 4


 146:Src/main.c    ****     int pc13 = HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_14);
 147:Src/main.c    ****     if (pc13) {
 148:Src/main.c    ****       ssd1306_SetCursor(0,0);
 149:Src/main.c    ****       ssd1306_WriteChar(pc13,Font_11x18,White);
 150:Src/main.c    ****       ssd1306_UpdateScreen();
 151:Src/main.c    ****     } else {
 152:Src/main.c    ****       ssd1306_SetCursor(0,0);
 153:Src/main.c    ****       ssd1306_WriteString("Howdy Doo",Font_11x18,White);
 154:Src/main.c    **** 
 155:Src/main.c    ****       ssd1306_UpdateScreen();
 156:Src/main.c    ****     }
 157:Src/main.c    ****     
 158:Src/main.c    ****   /* USER CODE END WHILE */
 159:Src/main.c    **** 
 160:Src/main.c    ****   /* USER CODE BEGIN 3 */
 161:Src/main.c    **** 
 162:Src/main.c    ****   }
 163:Src/main.c    ****   /* USER CODE END 3 */
 164:Src/main.c    **** 
 165:Src/main.c    **** }
 166:Src/main.c    **** 
 167:Src/main.c    **** /**
 168:Src/main.c    ****   * @brief System Clock Configuration
 169:Src/main.c    ****   * @retval None
 170:Src/main.c    ****   */
 171:Src/main.c    **** void SystemClock_Config(void)
 172:Src/main.c    **** {
 173:Src/main.c    **** 
 174:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 175:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 176:Src/main.c    **** 
 177:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 178:Src/main.c    ****     */
 179:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 180:Src/main.c    **** 
 181:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 182:Src/main.c    **** 
 183:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 184:Src/main.c    ****     */
 185:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 186:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 187:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 188:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 189:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 190:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 191:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 72;
 192:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 193:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 194:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 195:Src/main.c    ****   {
 196:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 197:Src/main.c    ****   }
 198:Src/main.c    **** 
 199:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 200:Src/main.c    ****     */
 201:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 202:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s 			page 5


 203:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 204:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 205:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 206:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV4;
 207:Src/main.c    **** 
 208:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 209:Src/main.c    ****   {
 210:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 211:Src/main.c    ****   }
 212:Src/main.c    **** 
 213:Src/main.c    ****     /**Configure the Systick interrupt time 
 214:Src/main.c    ****     */
 215:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 216:Src/main.c    **** 
 217:Src/main.c    ****     /**Configure the Systick 
 218:Src/main.c    ****     */
 219:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 220:Src/main.c    **** 
 221:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 222:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 223:Src/main.c    **** }
 224:Src/main.c    **** 
 225:Src/main.c    **** /* ADC1 init function */
 226:Src/main.c    **** static void MX_ADC1_Init(void)
 227:Src/main.c    **** {
 228:Src/main.c    **** 
 229:Src/main.c    ****   ADC_ChannelConfTypeDef sConfig;
 230:Src/main.c    **** 
 231:Src/main.c    ****     /**Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of co
 232:Src/main.c    ****     */
 233:Src/main.c    ****   hadc1.Instance = ADC1;
 234:Src/main.c    ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 235:Src/main.c    ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 236:Src/main.c    ****   hadc1.Init.ScanConvMode = DISABLE;
 237:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 238:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 239:Src/main.c    ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 240:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 241:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 242:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 243:Src/main.c    ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 244:Src/main.c    ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 245:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 246:Src/main.c    ****   {
 247:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 248:Src/main.c    ****   }
 249:Src/main.c    **** 
 250:Src/main.c    ****     /**Configure for the selected ADC regular channel its corresponding rank in the sequencer and i
 251:Src/main.c    ****     */
 252:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_4;
 253:Src/main.c    ****   sConfig.Rank = 1;
 254:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 255:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 256:Src/main.c    ****   {
 257:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 258:Src/main.c    ****   }
 259:Src/main.c    **** 
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s 			page 6


 260:Src/main.c    **** }
 261:Src/main.c    **** 
 262:Src/main.c    **** /* I2C1 init function */
 263:Src/main.c    **** static void MX_I2C1_Init(void)
 264:Src/main.c    **** {
 265:Src/main.c    **** 
 266:Src/main.c    ****   hi2c1.Instance = I2C1;
 267:Src/main.c    ****   hi2c1.Init.ClockSpeed = 100000;
 268:Src/main.c    ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 269:Src/main.c    ****   hi2c1.Init.OwnAddress1 = 0;
 270:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 271:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 272:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
 273:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 274:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 275:Src/main.c    ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 276:Src/main.c    ****   {
 277:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 278:Src/main.c    ****   }
 279:Src/main.c    **** 
 280:Src/main.c    **** }
 281:Src/main.c    **** 
 282:Src/main.c    **** /* TIM1 init function */
 283:Src/main.c    **** static void MX_TIM1_Init(void)
 284:Src/main.c    **** {
 285:Src/main.c    **** 
 286:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig;
 287:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
 288:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
 289:Src/main.c    ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig;
 290:Src/main.c    **** 
 291:Src/main.c    ****   htim1.Instance = TIM1;
 292:Src/main.c    ****   htim1.Init.Prescaler = 0;
 293:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 294:Src/main.c    ****   htim1.Init.Period = 0;
 295:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 296:Src/main.c    ****   htim1.Init.RepetitionCounter = 0;
 297:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 298:Src/main.c    ****   {
 299:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 300:Src/main.c    ****   }
 301:Src/main.c    **** 
 302:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 303:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 304:Src/main.c    ****   {
 305:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 306:Src/main.c    ****   }
 307:Src/main.c    **** 
 308:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 309:Src/main.c    ****   {
 310:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 311:Src/main.c    ****   }
 312:Src/main.c    **** 
 313:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 314:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 315:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 316:Src/main.c    ****   {
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s 			page 7


 317:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 318:Src/main.c    ****   }
 319:Src/main.c    **** 
 320:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 321:Src/main.c    ****   sConfigOC.Pulse = 0;
 322:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 323:Src/main.c    ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 324:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 325:Src/main.c    ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 326:Src/main.c    ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 327:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 328:Src/main.c    ****   {
 329:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 330:Src/main.c    ****   }
 331:Src/main.c    **** 
 332:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 333:Src/main.c    ****   {
 334:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 335:Src/main.c    ****   }
 336:Src/main.c    **** 
 337:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 338:Src/main.c    ****   {
 339:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 340:Src/main.c    ****   }
 341:Src/main.c    **** 
 342:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 343:Src/main.c    ****   {
 344:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 345:Src/main.c    ****   }
 346:Src/main.c    **** 
 347:Src/main.c    ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 348:Src/main.c    ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 349:Src/main.c    ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 350:Src/main.c    ****   sBreakDeadTimeConfig.DeadTime = 0;
 351:Src/main.c    ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 352:Src/main.c    ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 353:Src/main.c    ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 354:Src/main.c    ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 355:Src/main.c    ****   {
 356:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 357:Src/main.c    ****   }
 358:Src/main.c    **** 
 359:Src/main.c    ****   HAL_TIM_MspPostInit(&htim1);
 360:Src/main.c    **** 
 361:Src/main.c    **** }
 362:Src/main.c    **** 
 363:Src/main.c    **** /* TIM2 init function */
 364:Src/main.c    **** static void MX_TIM2_Init(void)
 365:Src/main.c    **** {
 366:Src/main.c    **** 
 367:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig;
 368:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
 369:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
 370:Src/main.c    **** 
 371:Src/main.c    ****   htim2.Instance = TIM2;
 372:Src/main.c    ****   htim2.Init.Prescaler = 0;
 373:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s 			page 8


 374:Src/main.c    ****   htim2.Init.Period = 0;
 375:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 376:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 377:Src/main.c    ****   {
 378:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 379:Src/main.c    ****   }
 380:Src/main.c    **** 
 381:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 382:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 383:Src/main.c    ****   {
 384:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 385:Src/main.c    ****   }
 386:Src/main.c    **** 
 387:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 388:Src/main.c    ****   {
 389:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 390:Src/main.c    ****   }
 391:Src/main.c    **** 
 392:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 393:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 394:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 395:Src/main.c    ****   {
 396:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 397:Src/main.c    ****   }
 398:Src/main.c    **** 
 399:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 400:Src/main.c    ****   sConfigOC.Pulse = 0;
 401:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 402:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 403:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 404:Src/main.c    ****   {
 405:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 406:Src/main.c    ****   }
 407:Src/main.c    **** 
 408:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 409:Src/main.c    ****   {
 410:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 411:Src/main.c    ****   }
 412:Src/main.c    **** 
 413:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 414:Src/main.c    ****   {
 415:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 416:Src/main.c    ****   }
 417:Src/main.c    **** 
 418:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 419:Src/main.c    ****   {
 420:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 421:Src/main.c    ****   }
 422:Src/main.c    **** 
 423:Src/main.c    ****   HAL_TIM_MspPostInit(&htim2);
 424:Src/main.c    **** 
 425:Src/main.c    **** }
 426:Src/main.c    **** 
 427:Src/main.c    **** /* TIM3 init function */
 428:Src/main.c    **** static void MX_TIM3_Init(void)
 429:Src/main.c    **** {
 430:Src/main.c    **** 
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s 			page 9


 431:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig;
 432:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
 433:Src/main.c    **** 
 434:Src/main.c    ****   htim3.Instance = TIM3;
 435:Src/main.c    ****   htim3.Init.Prescaler = 0;
 436:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 437:Src/main.c    ****   htim3.Init.Period = 0;
 438:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 439:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 440:Src/main.c    ****   {
 441:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 442:Src/main.c    ****   }
 443:Src/main.c    **** 
 444:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 445:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 446:Src/main.c    ****   {
 447:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 448:Src/main.c    ****   }
 449:Src/main.c    **** 
 450:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 451:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 452:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 453:Src/main.c    ****   {
 454:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 455:Src/main.c    ****   }
 456:Src/main.c    **** 
 457:Src/main.c    **** }
 458:Src/main.c    **** 
 459:Src/main.c    **** /* TIM10 init function */
 460:Src/main.c    **** static void MX_TIM10_Init(void)
 461:Src/main.c    **** {
 462:Src/main.c    **** 
 463:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
 464:Src/main.c    **** 
 465:Src/main.c    ****   htim10.Instance = TIM10;
 466:Src/main.c    ****   htim10.Init.Prescaler = 0;
 467:Src/main.c    ****   htim10.Init.CounterMode = TIM_COUNTERMODE_UP;
 468:Src/main.c    ****   htim10.Init.Period = 0;
 469:Src/main.c    ****   htim10.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 470:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim10) != HAL_OK)
 471:Src/main.c    ****   {
 472:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 473:Src/main.c    ****   }
 474:Src/main.c    **** 
 475:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim10) != HAL_OK)
 476:Src/main.c    ****   {
 477:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 478:Src/main.c    ****   }
 479:Src/main.c    **** 
 480:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 481:Src/main.c    ****   sConfigOC.Pulse = 0;
 482:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 483:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 484:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim10, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 485:Src/main.c    ****   {
 486:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 487:Src/main.c    ****   }
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s 			page 10


 488:Src/main.c    **** 
 489:Src/main.c    ****   HAL_TIM_MspPostInit(&htim10);
 490:Src/main.c    **** 
 491:Src/main.c    **** }
 492:Src/main.c    **** 
 493:Src/main.c    **** /* TIM11 init function */
 494:Src/main.c    **** static void MX_TIM11_Init(void)
 495:Src/main.c    **** {
 496:Src/main.c    **** 
 497:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
 498:Src/main.c    **** 
 499:Src/main.c    ****   htim11.Instance = TIM11;
 500:Src/main.c    ****   htim11.Init.Prescaler = 0;
 501:Src/main.c    ****   htim11.Init.CounterMode = TIM_COUNTERMODE_UP;
 502:Src/main.c    ****   htim11.Init.Period = 0;
 503:Src/main.c    ****   htim11.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 504:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim11) != HAL_OK)
 505:Src/main.c    ****   {
 506:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 507:Src/main.c    ****   }
 508:Src/main.c    **** 
 509:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim11) != HAL_OK)
 510:Src/main.c    ****   {
 511:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 512:Src/main.c    ****   }
 513:Src/main.c    **** 
 514:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 515:Src/main.c    ****   sConfigOC.Pulse = 0;
 516:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 517:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 518:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim11, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 519:Src/main.c    ****   {
 520:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 521:Src/main.c    ****   }
 522:Src/main.c    **** 
 523:Src/main.c    ****   HAL_TIM_MspPostInit(&htim11);
 524:Src/main.c    **** 
 525:Src/main.c    **** }
 526:Src/main.c    **** 
 527:Src/main.c    **** /* USART6 init function */
 528:Src/main.c    **** static void MX_USART6_UART_Init(void)
 529:Src/main.c    **** {
 530:Src/main.c    **** 
 531:Src/main.c    ****   huart6.Instance = USART6;
 532:Src/main.c    ****   huart6.Init.BaudRate = 115200;
 533:Src/main.c    ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
 534:Src/main.c    ****   huart6.Init.StopBits = UART_STOPBITS_1;
 535:Src/main.c    ****   huart6.Init.Parity = UART_PARITY_NONE;
 536:Src/main.c    ****   huart6.Init.Mode = UART_MODE_TX_RX;
 537:Src/main.c    ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 538:Src/main.c    ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 539:Src/main.c    ****   if (HAL_UART_Init(&huart6) != HAL_OK)
 540:Src/main.c    ****   {
 541:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 542:Src/main.c    ****   }
 543:Src/main.c    **** 
 544:Src/main.c    **** }
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s 			page 11


 545:Src/main.c    **** 
 546:Src/main.c    **** /** Configure pins as 
 547:Src/main.c    ****         * Analog 
 548:Src/main.c    ****         * Input 
 549:Src/main.c    ****         * Output
 550:Src/main.c    ****         * EVENT_OUT
 551:Src/main.c    ****         * EXTI
 552:Src/main.c    **** */
 553:Src/main.c    **** static void MX_GPIO_Init(void)
 554:Src/main.c    **** {
  28              		.loc 1 554 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 28
  35              		.cfi_offset 4, -28
  36              		.cfi_offset 5, -24
  37              		.cfi_offset 6, -20
  38              		.cfi_offset 7, -16
  39              		.cfi_offset 8, -12
  40              		.cfi_offset 9, -8
  41              		.cfi_offset 14, -4
  42 0004 8BB0     		sub	sp, sp, #44
  43              	.LCFI1:
  44              		.cfi_def_cfa_offset 72
  45              	.LBB2:
 555:Src/main.c    **** 
 556:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct;
 557:Src/main.c    **** 
 558:Src/main.c    ****   /* GPIO Ports Clock Enable */
 559:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  46              		.loc 1 559 0
  47 0006 0024     		movs	r4, #0
  48 0008 0094     		str	r4, [sp]
  49 000a 554B     		ldr	r3, .L3
  50 000c 1A6B     		ldr	r2, [r3, #48]
  51 000e 42F00402 		orr	r2, r2, #4
  52 0012 1A63     		str	r2, [r3, #48]
  53 0014 1A6B     		ldr	r2, [r3, #48]
  54 0016 02F00402 		and	r2, r2, #4
  55 001a 0092     		str	r2, [sp]
  56 001c 009A     		ldr	r2, [sp]
  57              	.LBE2:
  58              	.LBB3:
 560:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  59              		.loc 1 560 0
  60 001e 0194     		str	r4, [sp, #4]
  61 0020 1A6B     		ldr	r2, [r3, #48]
  62 0022 42F08002 		orr	r2, r2, #128
  63 0026 1A63     		str	r2, [r3, #48]
  64 0028 1A6B     		ldr	r2, [r3, #48]
  65 002a 02F08002 		and	r2, r2, #128
  66 002e 0192     		str	r2, [sp, #4]
  67 0030 019A     		ldr	r2, [sp, #4]
  68              	.LBE3:
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s 			page 12


  69              	.LBB4:
 561:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  70              		.loc 1 561 0
  71 0032 0294     		str	r4, [sp, #8]
  72 0034 1A6B     		ldr	r2, [r3, #48]
  73 0036 42F00102 		orr	r2, r2, #1
  74 003a 1A63     		str	r2, [r3, #48]
  75 003c 1A6B     		ldr	r2, [r3, #48]
  76 003e 02F00102 		and	r2, r2, #1
  77 0042 0292     		str	r2, [sp, #8]
  78 0044 029A     		ldr	r2, [sp, #8]
  79              	.LBE4:
  80              	.LBB5:
 562:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  81              		.loc 1 562 0
  82 0046 0394     		str	r4, [sp, #12]
  83 0048 1A6B     		ldr	r2, [r3, #48]
  84 004a 42F00202 		orr	r2, r2, #2
  85 004e 1A63     		str	r2, [r3, #48]
  86 0050 1A6B     		ldr	r2, [r3, #48]
  87 0052 02F00202 		and	r2, r2, #2
  88 0056 0392     		str	r2, [sp, #12]
  89 0058 039A     		ldr	r2, [sp, #12]
  90              	.LBE5:
  91              	.LBB6:
 563:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  92              		.loc 1 563 0
  93 005a 0494     		str	r4, [sp, #16]
  94 005c 1A6B     		ldr	r2, [r3, #48]
  95 005e 42F00802 		orr	r2, r2, #8
  96 0062 1A63     		str	r2, [r3, #48]
  97 0064 1B6B     		ldr	r3, [r3, #48]
  98 0066 03F00803 		and	r3, r3, #8
  99 006a 0493     		str	r3, [sp, #16]
 100 006c 049B     		ldr	r3, [sp, #16]
 101              	.LBE6:
 564:Src/main.c    **** 
 565:Src/main.c    ****   /*Configure GPIO pin Output Level */
 566:Src/main.c    ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13|GPIO_PIN_15|GPIO_PIN_4|GPIO_PIN_5 
 102              		.loc 1 566 0
 103 006e 3D4F     		ldr	r7, .L3+4
 104 0070 3846     		mov	r0, r7
 105 0072 4AF23031 		movw	r1, #41776
 106 0076 2246     		mov	r2, r4
 107 0078 FFF7FEFF 		bl	HAL_GPIO_WritePin
 108              	.LVL0:
 567:Src/main.c    ****                           |GPIO_PIN_8|GPIO_PIN_9, GPIO_PIN_RESET);
 568:Src/main.c    **** 
 569:Src/main.c    ****   /*Configure GPIO pin Output Level */
 570:Src/main.c    ****   HAL_GPIO_WritePin(GPIOH, GPIO_PIN_0|GPIO_PIN_1, GPIO_PIN_RESET);
 109              		.loc 1 570 0
 110 007c DFF8F090 		ldr	r9, .L3+16
 111 0080 4846     		mov	r0, r9
 112 0082 0321     		movs	r1, #3
 113 0084 2246     		mov	r2, r4
 114 0086 FFF7FEFF 		bl	HAL_GPIO_WritePin
 115              	.LVL1:
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s 			page 13


 571:Src/main.c    **** 
 572:Src/main.c    ****   /*Configure GPIO pin Output Level */
 573:Src/main.c    ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7|GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 116              		.loc 1 573 0
 117 008a 374E     		ldr	r6, .L3+8
 118 008c 3046     		mov	r0, r6
 119 008e 4FF44251 		mov	r1, #12416
 120 0092 2246     		mov	r2, r4
 121 0094 FFF7FEFF 		bl	HAL_GPIO_WritePin
 122              	.LVL2:
 574:Src/main.c    **** 
 575:Src/main.c    ****   /*Configure GPIO pins : PC13 PC15 PC4 PC5 
 576:Src/main.c    ****                            PC8 PC9 */
 577:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_15|GPIO_PIN_4|GPIO_PIN_5 
 123              		.loc 1 577 0
 124 0098 4AF23033 		movw	r3, #41776
 125 009c 0593     		str	r3, [sp, #20]
 578:Src/main.c    ****                           |GPIO_PIN_8|GPIO_PIN_9;
 579:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 126              		.loc 1 579 0
 127 009e 4FF00108 		mov	r8, #1
 128 00a2 CDF81880 		str	r8, [sp, #24]
 580:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 129              		.loc 1 580 0
 130 00a6 0794     		str	r4, [sp, #28]
 581:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 131              		.loc 1 581 0
 132 00a8 0894     		str	r4, [sp, #32]
 582:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 133              		.loc 1 582 0
 134 00aa 3846     		mov	r0, r7
 135 00ac 05A9     		add	r1, sp, #20
 136 00ae FFF7FEFF 		bl	HAL_GPIO_Init
 137              	.LVL3:
 583:Src/main.c    **** 
 584:Src/main.c    ****   /*Configure GPIO pins : PC14 PC10 PC11 PC12 */
 585:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_14|GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_12;
 138              		.loc 1 585 0
 139 00b2 4FF4B843 		mov	r3, #23552
 140 00b6 0593     		str	r3, [sp, #20]
 586:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 141              		.loc 1 586 0
 142 00b8 0325     		movs	r5, #3
 143 00ba 0695     		str	r5, [sp, #24]
 587:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 144              		.loc 1 587 0
 145 00bc 0794     		str	r4, [sp, #28]
 588:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 146              		.loc 1 588 0
 147 00be 3846     		mov	r0, r7
 148 00c0 05A9     		add	r1, sp, #20
 149 00c2 FFF7FEFF 		bl	HAL_GPIO_Init
 150              	.LVL4:
 589:Src/main.c    **** 
 590:Src/main.c    ****   /*Configure GPIO pins : PH0 PH1 */
 591:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 151              		.loc 1 591 0
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s 			page 14


 152 00c6 0595     		str	r5, [sp, #20]
 592:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 153              		.loc 1 592 0
 154 00c8 CDF81880 		str	r8, [sp, #24]
 593:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 155              		.loc 1 593 0
 156 00cc 0794     		str	r4, [sp, #28]
 594:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 157              		.loc 1 594 0
 158 00ce 0894     		str	r4, [sp, #32]
 595:Src/main.c    ****   HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 159              		.loc 1 595 0
 160 00d0 4846     		mov	r0, r9
 161 00d2 05A9     		add	r1, sp, #20
 162 00d4 FFF7FEFF 		bl	HAL_GPIO_Init
 163              	.LVL5:
 596:Src/main.c    **** 
 597:Src/main.c    ****   /*Configure GPIO pins : PC0 PC1 PC2 PC3 */
 598:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3;
 164              		.loc 1 598 0
 165 00d8 0F23     		movs	r3, #15
 166 00da 0593     		str	r3, [sp, #20]
 599:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 167              		.loc 1 599 0
 168 00dc 0694     		str	r4, [sp, #24]
 600:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 169              		.loc 1 600 0
 170 00de 0794     		str	r4, [sp, #28]
 601:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 171              		.loc 1 601 0
 172 00e0 3846     		mov	r0, r7
 173 00e2 05A9     		add	r1, sp, #20
 174 00e4 FFF7FEFF 		bl	HAL_GPIO_Init
 175              	.LVL6:
 602:Src/main.c    **** 
 603:Src/main.c    ****   /*Configure GPIO pin : PA6 */
 604:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_6;
 176              		.loc 1 604 0
 177 00e8 4023     		movs	r3, #64
 178 00ea 0593     		str	r3, [sp, #20]
 605:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 179              		.loc 1 605 0
 180 00ec 0694     		str	r4, [sp, #24]
 606:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 181              		.loc 1 606 0
 182 00ee 0794     		str	r4, [sp, #28]
 607:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 183              		.loc 1 607 0
 184 00f0 3046     		mov	r0, r6
 185 00f2 05A9     		add	r1, sp, #20
 186 00f4 FFF7FEFF 		bl	HAL_GPIO_Init
 187              	.LVL7:
 608:Src/main.c    **** 
 609:Src/main.c    ****   /*Configure GPIO pins : PA7 PA12 PA13 */
 610:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_12|GPIO_PIN_13;
 188              		.loc 1 610 0
 189 00f8 4FF44253 		mov	r3, #12416
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s 			page 15


 190 00fc 0593     		str	r3, [sp, #20]
 611:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 191              		.loc 1 611 0
 192 00fe CDF81880 		str	r8, [sp, #24]
 612:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 193              		.loc 1 612 0
 194 0102 0794     		str	r4, [sp, #28]
 613:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 195              		.loc 1 613 0
 196 0104 0894     		str	r4, [sp, #32]
 614:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 197              		.loc 1 614 0
 198 0106 3046     		mov	r0, r6
 199 0108 05A9     		add	r1, sp, #20
 200 010a FFF7FEFF 		bl	HAL_GPIO_Init
 201              	.LVL8:
 615:Src/main.c    **** 
 616:Src/main.c    ****   /*Configure GPIO pins : PB0 PB1 PB2 PB10 
 617:Src/main.c    ****                            PB3 PB4 PB5 */
 618:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_10 
 202              		.loc 1 618 0
 203 010e 40F23F43 		movw	r3, #1087
 204 0112 0593     		str	r3, [sp, #20]
 619:Src/main.c    ****                           |GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_5;
 620:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 205              		.loc 1 620 0
 206 0114 0695     		str	r5, [sp, #24]
 621:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 207              		.loc 1 621 0
 208 0116 0794     		str	r4, [sp, #28]
 622:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 209              		.loc 1 622 0
 210 0118 A7F58067 		sub	r7, r7, #1024
 211 011c 3846     		mov	r0, r7
 212 011e 05A9     		add	r1, sp, #20
 213 0120 FFF7FEFF 		bl	HAL_GPIO_Init
 214              	.LVL9:
 623:Src/main.c    **** 
 624:Src/main.c    ****   /*Configure GPIO pins : PB12 PB13 PB14 PB15 */
 625:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
 215              		.loc 1 625 0
 216 0124 4FF47043 		mov	r3, #61440
 217 0128 0593     		str	r3, [sp, #20]
 626:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 218              		.loc 1 626 0
 219 012a 0694     		str	r4, [sp, #24]
 627:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 220              		.loc 1 627 0
 221 012c 0794     		str	r4, [sp, #28]
 628:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 222              		.loc 1 628 0
 223 012e 3846     		mov	r0, r7
 224 0130 05A9     		add	r1, sp, #20
 225 0132 FFF7FEFF 		bl	HAL_GPIO_Init
 226              	.LVL10:
 629:Src/main.c    **** 
 630:Src/main.c    ****   /*Configure GPIO pins : PA14 PA15 */
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s 			page 16


 631:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_14|GPIO_PIN_15;
 227              		.loc 1 631 0
 228 0136 4FF44043 		mov	r3, #49152
 229 013a 0593     		str	r3, [sp, #20]
 632:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 230              		.loc 1 632 0
 231 013c 0695     		str	r5, [sp, #24]
 633:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 232              		.loc 1 633 0
 233 013e 0794     		str	r4, [sp, #28]
 634:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 234              		.loc 1 634 0
 235 0140 3046     		mov	r0, r6
 236 0142 05A9     		add	r1, sp, #20
 237 0144 FFF7FEFF 		bl	HAL_GPIO_Init
 238              	.LVL11:
 635:Src/main.c    **** 
 636:Src/main.c    ****   /*Configure GPIO pin : PD2 */
 637:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_2;
 239              		.loc 1 637 0
 240 0148 0423     		movs	r3, #4
 241 014a 0593     		str	r3, [sp, #20]
 638:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 242              		.loc 1 638 0
 243 014c 0695     		str	r5, [sp, #24]
 639:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 244              		.loc 1 639 0
 245 014e 0794     		str	r4, [sp, #28]
 640:Src/main.c    ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 246              		.loc 1 640 0
 247 0150 0648     		ldr	r0, .L3+12
 248 0152 05A9     		add	r1, sp, #20
 249 0154 FFF7FEFF 		bl	HAL_GPIO_Init
 250              	.LVL12:
 641:Src/main.c    **** 
 642:Src/main.c    **** }
 251              		.loc 1 642 0
 252 0158 0BB0     		add	sp, sp, #44
 253              	.LCFI2:
 254              		.cfi_def_cfa_offset 28
 255              		@ sp needed
 256 015a BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 257              	.L4:
 258 015e 00BF     		.align	2
 259              	.L3:
 260 0160 00380240 		.word	1073887232
 261 0164 00080240 		.word	1073874944
 262 0168 00000240 		.word	1073872896
 263 016c 000C0240 		.word	1073875968
 264 0170 001C0240 		.word	1073880064
 265              		.cfi_endproc
 266              	.LFE133:
 268              		.section	.text._Error_Handler,"ax",%progbits
 269              		.align	2
 270              		.global	_Error_Handler
 271              		.thumb
 272              		.thumb_func
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s 			page 17


 274              	_Error_Handler:
 275              	.LFB134:
 643:Src/main.c    **** 
 644:Src/main.c    **** /* USER CODE BEGIN 4 */
 645:Src/main.c    **** 
 646:Src/main.c    **** /* USER CODE END 4 */
 647:Src/main.c    **** 
 648:Src/main.c    **** /**
 649:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 650:Src/main.c    ****   * @param  file: The file name as string.
 651:Src/main.c    ****   * @param  line: The line in file as a number.
 652:Src/main.c    ****   * @retval None
 653:Src/main.c    ****   */
 654:Src/main.c    **** void _Error_Handler(char *file, int line)
 655:Src/main.c    **** {
 276              		.loc 1 655 0
 277              		.cfi_startproc
 278              		@ Volatile: function does not return.
 279              		@ args = 0, pretend = 0, frame = 0
 280              		@ frame_needed = 0, uses_anonymous_args = 0
 281              		@ link register save eliminated.
 282              	.LVL13:
 283              	.L6:
 656:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 657:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 658:Src/main.c    ****   while(1)
 659:Src/main.c    ****   {
 660:Src/main.c    ****   }
 284              		.loc 1 660 0 discriminator 1
 285 0000 FEE7     		b	.L6
 286              		.cfi_endproc
 287              	.LFE134:
 289 0002 00BF     		.section	.text.MX_I2C1_Init,"ax",%progbits
 290              		.align	2
 291              		.thumb
 292              		.thumb_func
 294              	MX_I2C1_Init:
 295              	.LFB126:
 264:Src/main.c    **** 
 296              		.loc 1 264 0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 0
 299              		@ frame_needed = 0, uses_anonymous_args = 0
 300 0000 08B5     		push	{r3, lr}
 301              	.LCFI3:
 302              		.cfi_def_cfa_offset 8
 303              		.cfi_offset 3, -8
 304              		.cfi_offset 14, -4
 266:Src/main.c    ****   hi2c1.Init.ClockSpeed = 100000;
 305              		.loc 1 266 0
 306 0002 0C48     		ldr	r0, .L10
 307 0004 0C4B     		ldr	r3, .L10+4
 308 0006 0360     		str	r3, [r0]
 267:Src/main.c    ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 309              		.loc 1 267 0
 310 0008 0C4B     		ldr	r3, .L10+8
 311 000a 4360     		str	r3, [r0, #4]
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s 			page 18


 268:Src/main.c    ****   hi2c1.Init.OwnAddress1 = 0;
 312              		.loc 1 268 0
 313 000c 0023     		movs	r3, #0
 314 000e 8360     		str	r3, [r0, #8]
 269:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 315              		.loc 1 269 0
 316 0010 C360     		str	r3, [r0, #12]
 270:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 317              		.loc 1 270 0
 318 0012 4FF48042 		mov	r2, #16384
 319 0016 0261     		str	r2, [r0, #16]
 271:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
 320              		.loc 1 271 0
 321 0018 4361     		str	r3, [r0, #20]
 272:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 322              		.loc 1 272 0
 323 001a 8361     		str	r3, [r0, #24]
 273:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 324              		.loc 1 273 0
 325 001c C361     		str	r3, [r0, #28]
 274:Src/main.c    ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 326              		.loc 1 274 0
 327 001e 0362     		str	r3, [r0, #32]
 275:Src/main.c    ****   {
 328              		.loc 1 275 0
 329 0020 FFF7FEFF 		bl	HAL_I2C_Init
 330              	.LVL14:
 331 0024 20B1     		cbz	r0, .L7
 277:Src/main.c    ****   }
 332              		.loc 1 277 0
 333 0026 0648     		ldr	r0, .L10+12
 334 0028 40F21511 		movw	r1, #277
 335 002c FFF7FEFF 		bl	_Error_Handler
 336              	.LVL15:
 337              	.L7:
 338 0030 08BD     		pop	{r3, pc}
 339              	.L11:
 340 0032 00BF     		.align	2
 341              	.L10:
 342 0034 00000000 		.word	hi2c1
 343 0038 00540040 		.word	1073763328
 344 003c A0860100 		.word	100000
 345 0040 00000000 		.word	.LC0
 346              		.cfi_endproc
 347              	.LFE126:
 349              		.section	.text.MX_TIM1_Init,"ax",%progbits
 350              		.align	2
 351              		.thumb
 352              		.thumb_func
 354              	MX_TIM1_Init:
 355              	.LFB127:
 284:Src/main.c    **** 
 356              		.loc 1 284 0
 357              		.cfi_startproc
 358              		@ args = 0, pretend = 0, frame = 80
 359              		@ frame_needed = 0, uses_anonymous_args = 0
 360 0000 00B5     		push	{lr}
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s 			page 19


 361              	.LCFI4:
 362              		.cfi_def_cfa_offset 4
 363              		.cfi_offset 14, -4
 364 0002 95B0     		sub	sp, sp, #84
 365              	.LCFI5:
 366              		.cfi_def_cfa_offset 88
 291:Src/main.c    ****   htim1.Init.Prescaler = 0;
 367              		.loc 1 291 0
 368 0004 4148     		ldr	r0, .L23
 369 0006 424B     		ldr	r3, .L23+4
 370 0008 0360     		str	r3, [r0]
 292:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 371              		.loc 1 292 0
 372 000a 0023     		movs	r3, #0
 373 000c 4360     		str	r3, [r0, #4]
 293:Src/main.c    ****   htim1.Init.Period = 0;
 374              		.loc 1 293 0
 375 000e 8360     		str	r3, [r0, #8]
 294:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 376              		.loc 1 294 0
 377 0010 C360     		str	r3, [r0, #12]
 295:Src/main.c    ****   htim1.Init.RepetitionCounter = 0;
 378              		.loc 1 295 0
 379 0012 0361     		str	r3, [r0, #16]
 296:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 380              		.loc 1 296 0
 381 0014 4361     		str	r3, [r0, #20]
 297:Src/main.c    ****   {
 382              		.loc 1 297 0
 383 0016 FFF7FEFF 		bl	HAL_TIM_Base_Init
 384              	.LVL16:
 385 001a 20B1     		cbz	r0, .L13
 299:Src/main.c    ****   }
 386              		.loc 1 299 0
 387 001c 3D48     		ldr	r0, .L23+8
 388 001e 40F22B11 		movw	r1, #299
 389 0022 FFF7FEFF 		bl	_Error_Handler
 390              	.LVL17:
 391              	.L13:
 302:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 392              		.loc 1 302 0
 393 0026 14A9     		add	r1, sp, #80
 394 0028 4FF48053 		mov	r3, #4096
 395 002c 41F8103D 		str	r3, [r1, #-16]!
 303:Src/main.c    ****   {
 396              		.loc 1 303 0
 397 0030 3648     		ldr	r0, .L23
 398 0032 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 399              	.LVL18:
 400 0036 20B1     		cbz	r0, .L14
 305:Src/main.c    ****   }
 401              		.loc 1 305 0
 402 0038 3648     		ldr	r0, .L23+8
 403 003a 40F23111 		movw	r1, #305
 404 003e FFF7FEFF 		bl	_Error_Handler
 405              	.LVL19:
 406              	.L14:
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s 			page 20


 308:Src/main.c    ****   {
 407              		.loc 1 308 0
 408 0042 3248     		ldr	r0, .L23
 409 0044 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 410              	.LVL20:
 411 0048 20B1     		cbz	r0, .L15
 310:Src/main.c    ****   }
 412              		.loc 1 310 0
 413 004a 3248     		ldr	r0, .L23+8
 414 004c 4FF49B71 		mov	r1, #310
 415 0050 FFF7FEFF 		bl	_Error_Handler
 416              	.LVL21:
 417              	.L15:
 313:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 418              		.loc 1 313 0
 419 0054 0023     		movs	r3, #0
 420 0056 0E93     		str	r3, [sp, #56]
 314:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 421              		.loc 1 314 0
 422 0058 0F93     		str	r3, [sp, #60]
 315:Src/main.c    ****   {
 423              		.loc 1 315 0
 424 005a 2C48     		ldr	r0, .L23
 425 005c 0EA9     		add	r1, sp, #56
 426 005e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 427              	.LVL22:
 428 0062 20B1     		cbz	r0, .L16
 317:Src/main.c    ****   }
 429              		.loc 1 317 0
 430 0064 2B48     		ldr	r0, .L23+8
 431 0066 40F23D11 		movw	r1, #317
 432 006a FFF7FEFF 		bl	_Error_Handler
 433              	.LVL23:
 434              	.L16:
 320:Src/main.c    ****   sConfigOC.Pulse = 0;
 435              		.loc 1 320 0
 436 006e 6023     		movs	r3, #96
 437 0070 0793     		str	r3, [sp, #28]
 321:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 438              		.loc 1 321 0
 439 0072 0022     		movs	r2, #0
 440 0074 0892     		str	r2, [sp, #32]
 322:Src/main.c    ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 441              		.loc 1 322 0
 442 0076 0992     		str	r2, [sp, #36]
 323:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 443              		.loc 1 323 0
 444 0078 0A92     		str	r2, [sp, #40]
 324:Src/main.c    ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 445              		.loc 1 324 0
 446 007a 0B92     		str	r2, [sp, #44]
 325:Src/main.c    ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 447              		.loc 1 325 0
 448 007c 0C92     		str	r2, [sp, #48]
 326:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 449              		.loc 1 326 0
 450 007e 0D92     		str	r2, [sp, #52]
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s 			page 21


 327:Src/main.c    ****   {
 451              		.loc 1 327 0
 452 0080 2248     		ldr	r0, .L23
 453 0082 07A9     		add	r1, sp, #28
 454 0084 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 455              	.LVL24:
 456 0088 20B1     		cbz	r0, .L17
 329:Src/main.c    ****   }
 457              		.loc 1 329 0
 458 008a 2248     		ldr	r0, .L23+8
 459 008c 40F24911 		movw	r1, #329
 460 0090 FFF7FEFF 		bl	_Error_Handler
 461              	.LVL25:
 462              	.L17:
 332:Src/main.c    ****   {
 463              		.loc 1 332 0
 464 0094 1D48     		ldr	r0, .L23
 465 0096 07A9     		add	r1, sp, #28
 466 0098 0422     		movs	r2, #4
 467 009a FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 468              	.LVL26:
 469 009e 20B1     		cbz	r0, .L18
 334:Src/main.c    ****   }
 470              		.loc 1 334 0
 471 00a0 1C48     		ldr	r0, .L23+8
 472 00a2 4FF4A771 		mov	r1, #334
 473 00a6 FFF7FEFF 		bl	_Error_Handler
 474              	.LVL27:
 475              	.L18:
 337:Src/main.c    ****   {
 476              		.loc 1 337 0
 477 00aa 1848     		ldr	r0, .L23
 478 00ac 07A9     		add	r1, sp, #28
 479 00ae 0822     		movs	r2, #8
 480 00b0 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 481              	.LVL28:
 482 00b4 20B1     		cbz	r0, .L19
 339:Src/main.c    ****   }
 483              		.loc 1 339 0
 484 00b6 1748     		ldr	r0, .L23+8
 485 00b8 40F25311 		movw	r1, #339
 486 00bc FFF7FEFF 		bl	_Error_Handler
 487              	.LVL29:
 488              	.L19:
 342:Src/main.c    ****   {
 489              		.loc 1 342 0
 490 00c0 1248     		ldr	r0, .L23
 491 00c2 07A9     		add	r1, sp, #28
 492 00c4 0C22     		movs	r2, #12
 493 00c6 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 494              	.LVL30:
 495 00ca 20B1     		cbz	r0, .L20
 344:Src/main.c    ****   }
 496              		.loc 1 344 0
 497 00cc 1148     		ldr	r0, .L23+8
 498 00ce 4FF4AC71 		mov	r1, #344
 499 00d2 FFF7FEFF 		bl	_Error_Handler
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s 			page 22


 500              	.LVL31:
 501              	.L20:
 347:Src/main.c    ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 502              		.loc 1 347 0
 503 00d6 0023     		movs	r3, #0
 504 00d8 0093     		str	r3, [sp]
 348:Src/main.c    ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 505              		.loc 1 348 0
 506 00da 0193     		str	r3, [sp, #4]
 349:Src/main.c    ****   sBreakDeadTimeConfig.DeadTime = 0;
 507              		.loc 1 349 0
 508 00dc 0293     		str	r3, [sp, #8]
 350:Src/main.c    ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 509              		.loc 1 350 0
 510 00de 0393     		str	r3, [sp, #12]
 351:Src/main.c    ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 511              		.loc 1 351 0
 512 00e0 0493     		str	r3, [sp, #16]
 352:Src/main.c    ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 513              		.loc 1 352 0
 514 00e2 4FF40052 		mov	r2, #8192
 515 00e6 0592     		str	r2, [sp, #20]
 353:Src/main.c    ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 516              		.loc 1 353 0
 517 00e8 0693     		str	r3, [sp, #24]
 354:Src/main.c    ****   {
 518              		.loc 1 354 0
 519 00ea 0848     		ldr	r0, .L23
 520 00ec 6946     		mov	r1, sp
 521 00ee FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 522              	.LVL32:
 523 00f2 20B1     		cbz	r0, .L21
 356:Src/main.c    ****   }
 524              		.loc 1 356 0
 525 00f4 0748     		ldr	r0, .L23+8
 526 00f6 4FF4B271 		mov	r1, #356
 527 00fa FFF7FEFF 		bl	_Error_Handler
 528              	.LVL33:
 529              	.L21:
 359:Src/main.c    **** 
 530              		.loc 1 359 0
 531 00fe 0348     		ldr	r0, .L23
 532 0100 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 533              	.LVL34:
 361:Src/main.c    **** 
 534              		.loc 1 361 0
 535 0104 15B0     		add	sp, sp, #84
 536              	.LCFI6:
 537              		.cfi_def_cfa_offset 4
 538              		@ sp needed
 539 0106 5DF804FB 		ldr	pc, [sp], #4
 540              	.L24:
 541 010a 00BF     		.align	2
 542              	.L23:
 543 010c 00000000 		.word	htim1
 544 0110 00000140 		.word	1073807360
 545 0114 00000000 		.word	.LC0
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s 			page 23


 546              		.cfi_endproc
 547              	.LFE127:
 549              		.section	.text.MX_TIM2_Init,"ax",%progbits
 550              		.align	2
 551              		.thumb
 552              		.thumb_func
 554              	MX_TIM2_Init:
 555              	.LFB128:
 365:Src/main.c    **** 
 556              		.loc 1 365 0
 557              		.cfi_startproc
 558              		@ args = 0, pretend = 0, frame = 56
 559              		@ frame_needed = 0, uses_anonymous_args = 0
 560 0000 00B5     		push	{lr}
 561              	.LCFI7:
 562              		.cfi_def_cfa_offset 4
 563              		.cfi_offset 14, -4
 564 0002 8FB0     		sub	sp, sp, #60
 565              	.LCFI8:
 566              		.cfi_def_cfa_offset 64
 371:Src/main.c    ****   htim2.Init.Prescaler = 0;
 567              		.loc 1 371 0
 568 0004 3548     		ldr	r0, .L35
 569 0006 4FF08043 		mov	r3, #1073741824
 570 000a 0360     		str	r3, [r0]
 372:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 571              		.loc 1 372 0
 572 000c 0023     		movs	r3, #0
 573 000e 4360     		str	r3, [r0, #4]
 373:Src/main.c    ****   htim2.Init.Period = 0;
 574              		.loc 1 373 0
 575 0010 8360     		str	r3, [r0, #8]
 374:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 576              		.loc 1 374 0
 577 0012 C360     		str	r3, [r0, #12]
 375:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 578              		.loc 1 375 0
 579 0014 0361     		str	r3, [r0, #16]
 376:Src/main.c    ****   {
 580              		.loc 1 376 0
 581 0016 FFF7FEFF 		bl	HAL_TIM_Base_Init
 582              	.LVL35:
 583 001a 20B1     		cbz	r0, .L26
 378:Src/main.c    ****   }
 584              		.loc 1 378 0
 585 001c 3048     		ldr	r0, .L35+4
 586 001e 4FF4BD71 		mov	r1, #378
 587 0022 FFF7FEFF 		bl	_Error_Handler
 588              	.LVL36:
 589              	.L26:
 381:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 590              		.loc 1 381 0
 591 0026 0EA9     		add	r1, sp, #56
 592 0028 4FF48053 		mov	r3, #4096
 593 002c 41F8103D 		str	r3, [r1, #-16]!
 382:Src/main.c    ****   {
 594              		.loc 1 382 0
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s 			page 24


 595 0030 2A48     		ldr	r0, .L35
 596 0032 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 597              	.LVL37:
 598 0036 20B1     		cbz	r0, .L27
 384:Src/main.c    ****   }
 599              		.loc 1 384 0
 600 0038 2948     		ldr	r0, .L35+4
 601 003a 4FF4C071 		mov	r1, #384
 602 003e FFF7FEFF 		bl	_Error_Handler
 603              	.LVL38:
 604              	.L27:
 387:Src/main.c    ****   {
 605              		.loc 1 387 0
 606 0042 2648     		ldr	r0, .L35
 607 0044 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 608              	.LVL39:
 609 0048 20B1     		cbz	r0, .L28
 389:Src/main.c    ****   }
 610              		.loc 1 389 0
 611 004a 2548     		ldr	r0, .L35+4
 612 004c 40F28511 		movw	r1, #389
 613 0050 FFF7FEFF 		bl	_Error_Handler
 614              	.LVL40:
 615              	.L28:
 392:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 616              		.loc 1 392 0
 617 0054 0023     		movs	r3, #0
 618 0056 0893     		str	r3, [sp, #32]
 393:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 619              		.loc 1 393 0
 620 0058 0993     		str	r3, [sp, #36]
 394:Src/main.c    ****   {
 621              		.loc 1 394 0
 622 005a 2048     		ldr	r0, .L35
 623 005c 08A9     		add	r1, sp, #32
 624 005e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 625              	.LVL41:
 626 0062 20B1     		cbz	r0, .L29
 396:Src/main.c    ****   }
 627              		.loc 1 396 0
 628 0064 1E48     		ldr	r0, .L35+4
 629 0066 4FF4C671 		mov	r1, #396
 630 006a FFF7FEFF 		bl	_Error_Handler
 631              	.LVL42:
 632              	.L29:
 399:Src/main.c    ****   sConfigOC.Pulse = 0;
 633              		.loc 1 399 0
 634 006e 6023     		movs	r3, #96
 635 0070 0193     		str	r3, [sp, #4]
 400:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 636              		.loc 1 400 0
 637 0072 0022     		movs	r2, #0
 638 0074 0292     		str	r2, [sp, #8]
 401:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 639              		.loc 1 401 0
 640 0076 0392     		str	r2, [sp, #12]
 402:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s 			page 25


 641              		.loc 1 402 0
 642 0078 0592     		str	r2, [sp, #20]
 403:Src/main.c    ****   {
 643              		.loc 1 403 0
 644 007a 1848     		ldr	r0, .L35
 645 007c 01A9     		add	r1, sp, #4
 646 007e FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 647              	.LVL43:
 648 0082 20B1     		cbz	r0, .L30
 405:Src/main.c    ****   }
 649              		.loc 1 405 0
 650 0084 1648     		ldr	r0, .L35+4
 651 0086 40F29511 		movw	r1, #405
 652 008a FFF7FEFF 		bl	_Error_Handler
 653              	.LVL44:
 654              	.L30:
 408:Src/main.c    ****   {
 655              		.loc 1 408 0
 656 008e 1348     		ldr	r0, .L35
 657 0090 01A9     		add	r1, sp, #4
 658 0092 0422     		movs	r2, #4
 659 0094 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 660              	.LVL45:
 661 0098 20B1     		cbz	r0, .L31
 410:Src/main.c    ****   }
 662              		.loc 1 410 0
 663 009a 1148     		ldr	r0, .L35+4
 664 009c 4FF4CD71 		mov	r1, #410
 665 00a0 FFF7FEFF 		bl	_Error_Handler
 666              	.LVL46:
 667              	.L31:
 413:Src/main.c    ****   {
 668              		.loc 1 413 0
 669 00a4 0D48     		ldr	r0, .L35
 670 00a6 01A9     		add	r1, sp, #4
 671 00a8 0822     		movs	r2, #8
 672 00aa FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 673              	.LVL47:
 674 00ae 20B1     		cbz	r0, .L32
 415:Src/main.c    ****   }
 675              		.loc 1 415 0
 676 00b0 0B48     		ldr	r0, .L35+4
 677 00b2 40F29F11 		movw	r1, #415
 678 00b6 FFF7FEFF 		bl	_Error_Handler
 679              	.LVL48:
 680              	.L32:
 418:Src/main.c    ****   {
 681              		.loc 1 418 0
 682 00ba 0848     		ldr	r0, .L35
 683 00bc 01A9     		add	r1, sp, #4
 684 00be 0C22     		movs	r2, #12
 685 00c0 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 686              	.LVL49:
 687 00c4 20B1     		cbz	r0, .L33
 420:Src/main.c    ****   }
 688              		.loc 1 420 0
 689 00c6 0648     		ldr	r0, .L35+4
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s 			page 26


 690 00c8 4FF4D271 		mov	r1, #420
 691 00cc FFF7FEFF 		bl	_Error_Handler
 692              	.LVL50:
 693              	.L33:
 423:Src/main.c    **** 
 694              		.loc 1 423 0
 695 00d0 0248     		ldr	r0, .L35
 696 00d2 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 697              	.LVL51:
 425:Src/main.c    **** 
 698              		.loc 1 425 0
 699 00d6 0FB0     		add	sp, sp, #60
 700              	.LCFI9:
 701              		.cfi_def_cfa_offset 4
 702              		@ sp needed
 703 00d8 5DF804FB 		ldr	pc, [sp], #4
 704              	.L36:
 705              		.align	2
 706              	.L35:
 707 00dc 00000000 		.word	htim2
 708 00e0 00000000 		.word	.LC0
 709              		.cfi_endproc
 710              	.LFE128:
 712              		.section	.text.MX_TIM3_Init,"ax",%progbits
 713              		.align	2
 714              		.thumb
 715              		.thumb_func
 717              	MX_TIM3_Init:
 718              	.LFB129:
 429:Src/main.c    **** 
 719              		.loc 1 429 0
 720              		.cfi_startproc
 721              		@ args = 0, pretend = 0, frame = 24
 722              		@ frame_needed = 0, uses_anonymous_args = 0
 723 0000 00B5     		push	{lr}
 724              	.LCFI10:
 725              		.cfi_def_cfa_offset 4
 726              		.cfi_offset 14, -4
 727 0002 87B0     		sub	sp, sp, #28
 728              	.LCFI11:
 729              		.cfi_def_cfa_offset 32
 434:Src/main.c    ****   htim3.Init.Prescaler = 0;
 730              		.loc 1 434 0
 731 0004 1648     		ldr	r0, .L42
 732 0006 174B     		ldr	r3, .L42+4
 733 0008 0360     		str	r3, [r0]
 435:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 734              		.loc 1 435 0
 735 000a 0023     		movs	r3, #0
 736 000c 4360     		str	r3, [r0, #4]
 436:Src/main.c    ****   htim3.Init.Period = 0;
 737              		.loc 1 436 0
 738 000e 8360     		str	r3, [r0, #8]
 437:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 739              		.loc 1 437 0
 740 0010 C360     		str	r3, [r0, #12]
 438:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s 			page 27


 741              		.loc 1 438 0
 742 0012 0361     		str	r3, [r0, #16]
 439:Src/main.c    ****   {
 743              		.loc 1 439 0
 744 0014 FFF7FEFF 		bl	HAL_TIM_Base_Init
 745              	.LVL52:
 746 0018 20B1     		cbz	r0, .L38
 441:Src/main.c    ****   }
 747              		.loc 1 441 0
 748 001a 1348     		ldr	r0, .L42+8
 749 001c 40F2B911 		movw	r1, #441
 750 0020 FFF7FEFF 		bl	_Error_Handler
 751              	.LVL53:
 752              	.L38:
 444:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 753              		.loc 1 444 0
 754 0024 06A9     		add	r1, sp, #24
 755 0026 4FF48053 		mov	r3, #4096
 756 002a 41F8103D 		str	r3, [r1, #-16]!
 445:Src/main.c    ****   {
 757              		.loc 1 445 0
 758 002e 0C48     		ldr	r0, .L42
 759 0030 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 760              	.LVL54:
 761 0034 20B1     		cbz	r0, .L39
 447:Src/main.c    ****   }
 762              		.loc 1 447 0
 763 0036 0C48     		ldr	r0, .L42+8
 764 0038 40F2BF11 		movw	r1, #447
 765 003c FFF7FEFF 		bl	_Error_Handler
 766              	.LVL55:
 767              	.L39:
 450:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 768              		.loc 1 450 0
 769 0040 0023     		movs	r3, #0
 770 0042 0093     		str	r3, [sp]
 451:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 771              		.loc 1 451 0
 772 0044 0193     		str	r3, [sp, #4]
 452:Src/main.c    ****   {
 773              		.loc 1 452 0
 774 0046 0648     		ldr	r0, .L42
 775 0048 6946     		mov	r1, sp
 776 004a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 777              	.LVL56:
 778 004e 20B1     		cbz	r0, .L37
 454:Src/main.c    ****   }
 779              		.loc 1 454 0
 780 0050 0548     		ldr	r0, .L42+8
 781 0052 4FF4E371 		mov	r1, #454
 782 0056 FFF7FEFF 		bl	_Error_Handler
 783              	.LVL57:
 784              	.L37:
 457:Src/main.c    **** 
 785              		.loc 1 457 0
 786 005a 07B0     		add	sp, sp, #28
 787              	.LCFI12:
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s 			page 28


 788              		.cfi_def_cfa_offset 4
 789              		@ sp needed
 790 005c 5DF804FB 		ldr	pc, [sp], #4
 791              	.L43:
 792              		.align	2
 793              	.L42:
 794 0060 00000000 		.word	htim3
 795 0064 00040040 		.word	1073742848
 796 0068 00000000 		.word	.LC0
 797              		.cfi_endproc
 798              	.LFE129:
 800              		.section	.text.MX_TIM10_Init,"ax",%progbits
 801              		.align	2
 802              		.thumb
 803              		.thumb_func
 805              	MX_TIM10_Init:
 806              	.LFB130:
 461:Src/main.c    **** 
 807              		.loc 1 461 0
 808              		.cfi_startproc
 809              		@ args = 0, pretend = 0, frame = 32
 810              		@ frame_needed = 0, uses_anonymous_args = 0
 811 0000 00B5     		push	{lr}
 812              	.LCFI13:
 813              		.cfi_def_cfa_offset 4
 814              		.cfi_offset 14, -4
 815 0002 89B0     		sub	sp, sp, #36
 816              	.LCFI14:
 817              		.cfi_def_cfa_offset 40
 465:Src/main.c    ****   htim10.Init.Prescaler = 0;
 818              		.loc 1 465 0
 819 0004 1748     		ldr	r0, .L49
 820 0006 184B     		ldr	r3, .L49+4
 821 0008 0360     		str	r3, [r0]
 466:Src/main.c    ****   htim10.Init.CounterMode = TIM_COUNTERMODE_UP;
 822              		.loc 1 466 0
 823 000a 0023     		movs	r3, #0
 824 000c 4360     		str	r3, [r0, #4]
 467:Src/main.c    ****   htim10.Init.Period = 0;
 825              		.loc 1 467 0
 826 000e 8360     		str	r3, [r0, #8]
 468:Src/main.c    ****   htim10.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 827              		.loc 1 468 0
 828 0010 C360     		str	r3, [r0, #12]
 469:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim10) != HAL_OK)
 829              		.loc 1 469 0
 830 0012 0361     		str	r3, [r0, #16]
 470:Src/main.c    ****   {
 831              		.loc 1 470 0
 832 0014 FFF7FEFF 		bl	HAL_TIM_Base_Init
 833              	.LVL58:
 834 0018 20B1     		cbz	r0, .L45
 472:Src/main.c    ****   }
 835              		.loc 1 472 0
 836 001a 1448     		ldr	r0, .L49+8
 837 001c 4FF4EC71 		mov	r1, #472
 838 0020 FFF7FEFF 		bl	_Error_Handler
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s 			page 29


 839              	.LVL59:
 840              	.L45:
 475:Src/main.c    ****   {
 841              		.loc 1 475 0
 842 0024 0F48     		ldr	r0, .L49
 843 0026 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 844              	.LVL60:
 845 002a 20B1     		cbz	r0, .L46
 477:Src/main.c    ****   }
 846              		.loc 1 477 0
 847 002c 0F48     		ldr	r0, .L49+8
 848 002e 40F2DD11 		movw	r1, #477
 849 0032 FFF7FEFF 		bl	_Error_Handler
 850              	.LVL61:
 851              	.L46:
 480:Src/main.c    ****   sConfigOC.Pulse = 0;
 852              		.loc 1 480 0
 853 0036 6023     		movs	r3, #96
 854 0038 0193     		str	r3, [sp, #4]
 481:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 855              		.loc 1 481 0
 856 003a 0022     		movs	r2, #0
 857 003c 0292     		str	r2, [sp, #8]
 482:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 858              		.loc 1 482 0
 859 003e 0392     		str	r2, [sp, #12]
 483:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim10, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 860              		.loc 1 483 0
 861 0040 0592     		str	r2, [sp, #20]
 484:Src/main.c    ****   {
 862              		.loc 1 484 0
 863 0042 0848     		ldr	r0, .L49
 864 0044 01A9     		add	r1, sp, #4
 865 0046 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 866              	.LVL62:
 867 004a 20B1     		cbz	r0, .L47
 486:Src/main.c    ****   }
 868              		.loc 1 486 0
 869 004c 0748     		ldr	r0, .L49+8
 870 004e 4FF4F371 		mov	r1, #486
 871 0052 FFF7FEFF 		bl	_Error_Handler
 872              	.LVL63:
 873              	.L47:
 489:Src/main.c    **** 
 874              		.loc 1 489 0
 875 0056 0348     		ldr	r0, .L49
 876 0058 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 877              	.LVL64:
 491:Src/main.c    **** 
 878              		.loc 1 491 0
 879 005c 09B0     		add	sp, sp, #36
 880              	.LCFI15:
 881              		.cfi_def_cfa_offset 4
 882              		@ sp needed
 883 005e 5DF804FB 		ldr	pc, [sp], #4
 884              	.L50:
 885 0062 00BF     		.align	2
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s 			page 30


 886              	.L49:
 887 0064 00000000 		.word	htim10
 888 0068 00440140 		.word	1073824768
 889 006c 00000000 		.word	.LC0
 890              		.cfi_endproc
 891              	.LFE130:
 893              		.section	.text.MX_TIM11_Init,"ax",%progbits
 894              		.align	2
 895              		.thumb
 896              		.thumb_func
 898              	MX_TIM11_Init:
 899              	.LFB131:
 495:Src/main.c    **** 
 900              		.loc 1 495 0
 901              		.cfi_startproc
 902              		@ args = 0, pretend = 0, frame = 32
 903              		@ frame_needed = 0, uses_anonymous_args = 0
 904 0000 00B5     		push	{lr}
 905              	.LCFI16:
 906              		.cfi_def_cfa_offset 4
 907              		.cfi_offset 14, -4
 908 0002 89B0     		sub	sp, sp, #36
 909              	.LCFI17:
 910              		.cfi_def_cfa_offset 40
 499:Src/main.c    ****   htim11.Init.Prescaler = 0;
 911              		.loc 1 499 0
 912 0004 1748     		ldr	r0, .L56
 913 0006 184B     		ldr	r3, .L56+4
 914 0008 0360     		str	r3, [r0]
 500:Src/main.c    ****   htim11.Init.CounterMode = TIM_COUNTERMODE_UP;
 915              		.loc 1 500 0
 916 000a 0023     		movs	r3, #0
 917 000c 4360     		str	r3, [r0, #4]
 501:Src/main.c    ****   htim11.Init.Period = 0;
 918              		.loc 1 501 0
 919 000e 8360     		str	r3, [r0, #8]
 502:Src/main.c    ****   htim11.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 920              		.loc 1 502 0
 921 0010 C360     		str	r3, [r0, #12]
 503:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim11) != HAL_OK)
 922              		.loc 1 503 0
 923 0012 0361     		str	r3, [r0, #16]
 504:Src/main.c    ****   {
 924              		.loc 1 504 0
 925 0014 FFF7FEFF 		bl	HAL_TIM_Base_Init
 926              	.LVL65:
 927 0018 20B1     		cbz	r0, .L52
 506:Src/main.c    ****   }
 928              		.loc 1 506 0
 929 001a 1448     		ldr	r0, .L56+8
 930 001c 4FF4FD71 		mov	r1, #506
 931 0020 FFF7FEFF 		bl	_Error_Handler
 932              	.LVL66:
 933              	.L52:
 509:Src/main.c    ****   {
 934              		.loc 1 509 0
 935 0024 0F48     		ldr	r0, .L56
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s 			page 31


 936 0026 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 937              	.LVL67:
 938 002a 20B1     		cbz	r0, .L53
 511:Src/main.c    ****   }
 939              		.loc 1 511 0
 940 002c 0F48     		ldr	r0, .L56+8
 941 002e 40F2FF11 		movw	r1, #511
 942 0032 FFF7FEFF 		bl	_Error_Handler
 943              	.LVL68:
 944              	.L53:
 514:Src/main.c    ****   sConfigOC.Pulse = 0;
 945              		.loc 1 514 0
 946 0036 6023     		movs	r3, #96
 947 0038 0193     		str	r3, [sp, #4]
 515:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 948              		.loc 1 515 0
 949 003a 0022     		movs	r2, #0
 950 003c 0292     		str	r2, [sp, #8]
 516:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 951              		.loc 1 516 0
 952 003e 0392     		str	r2, [sp, #12]
 517:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim11, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 953              		.loc 1 517 0
 954 0040 0592     		str	r2, [sp, #20]
 518:Src/main.c    ****   {
 955              		.loc 1 518 0
 956 0042 0848     		ldr	r0, .L56
 957 0044 01A9     		add	r1, sp, #4
 958 0046 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 959              	.LVL69:
 960 004a 20B1     		cbz	r0, .L54
 520:Src/main.c    ****   }
 961              		.loc 1 520 0
 962 004c 0748     		ldr	r0, .L56+8
 963 004e 4FF40271 		mov	r1, #520
 964 0052 FFF7FEFF 		bl	_Error_Handler
 965              	.LVL70:
 966              	.L54:
 523:Src/main.c    **** 
 967              		.loc 1 523 0
 968 0056 0348     		ldr	r0, .L56
 969 0058 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 970              	.LVL71:
 525:Src/main.c    **** 
 971              		.loc 1 525 0
 972 005c 09B0     		add	sp, sp, #36
 973              	.LCFI18:
 974              		.cfi_def_cfa_offset 4
 975              		@ sp needed
 976 005e 5DF804FB 		ldr	pc, [sp], #4
 977              	.L57:
 978 0062 00BF     		.align	2
 979              	.L56:
 980 0064 00000000 		.word	htim11
 981 0068 00480140 		.word	1073825792
 982 006c 00000000 		.word	.LC0
 983              		.cfi_endproc
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s 			page 32


 984              	.LFE131:
 986              		.section	.text.MX_USART6_UART_Init,"ax",%progbits
 987              		.align	2
 988              		.thumb
 989              		.thumb_func
 991              	MX_USART6_UART_Init:
 992              	.LFB132:
 529:Src/main.c    **** 
 993              		.loc 1 529 0
 994              		.cfi_startproc
 995              		@ args = 0, pretend = 0, frame = 0
 996              		@ frame_needed = 0, uses_anonymous_args = 0
 997 0000 08B5     		push	{r3, lr}
 998              	.LCFI19:
 999              		.cfi_def_cfa_offset 8
 1000              		.cfi_offset 3, -8
 1001              		.cfi_offset 14, -4
 531:Src/main.c    ****   huart6.Init.BaudRate = 115200;
 1002              		.loc 1 531 0
 1003 0002 0B48     		ldr	r0, .L61
 1004 0004 0B4B     		ldr	r3, .L61+4
 1005 0006 0360     		str	r3, [r0]
 532:Src/main.c    ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
 1006              		.loc 1 532 0
 1007 0008 4FF4E133 		mov	r3, #115200
 1008 000c 4360     		str	r3, [r0, #4]
 533:Src/main.c    ****   huart6.Init.StopBits = UART_STOPBITS_1;
 1009              		.loc 1 533 0
 1010 000e 0023     		movs	r3, #0
 1011 0010 8360     		str	r3, [r0, #8]
 534:Src/main.c    ****   huart6.Init.Parity = UART_PARITY_NONE;
 1012              		.loc 1 534 0
 1013 0012 C360     		str	r3, [r0, #12]
 535:Src/main.c    ****   huart6.Init.Mode = UART_MODE_TX_RX;
 1014              		.loc 1 535 0
 1015 0014 0361     		str	r3, [r0, #16]
 536:Src/main.c    ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1016              		.loc 1 536 0
 1017 0016 0C22     		movs	r2, #12
 1018 0018 4261     		str	r2, [r0, #20]
 537:Src/main.c    ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 1019              		.loc 1 537 0
 1020 001a 8361     		str	r3, [r0, #24]
 538:Src/main.c    ****   if (HAL_UART_Init(&huart6) != HAL_OK)
 1021              		.loc 1 538 0
 1022 001c C361     		str	r3, [r0, #28]
 539:Src/main.c    ****   {
 1023              		.loc 1 539 0
 1024 001e FFF7FEFF 		bl	HAL_UART_Init
 1025              	.LVL72:
 1026 0022 20B1     		cbz	r0, .L58
 541:Src/main.c    ****   }
 1027              		.loc 1 541 0
 1028 0024 0448     		ldr	r0, .L61+8
 1029 0026 40F21D21 		movw	r1, #541
 1030 002a FFF7FEFF 		bl	_Error_Handler
 1031              	.LVL73:
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s 			page 33


 1032              	.L58:
 1033 002e 08BD     		pop	{r3, pc}
 1034              	.L62:
 1035              		.align	2
 1036              	.L61:
 1037 0030 00000000 		.word	huart6
 1038 0034 00140140 		.word	1073812480
 1039 0038 00000000 		.word	.LC0
 1040              		.cfi_endproc
 1041              	.LFE132:
 1043              		.section	.text.MX_ADC1_Init,"ax",%progbits
 1044              		.align	2
 1045              		.thumb
 1046              		.thumb_func
 1048              	MX_ADC1_Init:
 1049              	.LFB125:
 227:Src/main.c    **** 
 1050              		.loc 1 227 0
 1051              		.cfi_startproc
 1052              		@ args = 0, pretend = 0, frame = 16
 1053              		@ frame_needed = 0, uses_anonymous_args = 0
 1054 0000 00B5     		push	{lr}
 1055              	.LCFI20:
 1056              		.cfi_def_cfa_offset 4
 1057              		.cfi_offset 14, -4
 1058 0002 85B0     		sub	sp, sp, #20
 1059              	.LCFI21:
 1060              		.cfi_def_cfa_offset 24
 233:Src/main.c    ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 1061              		.loc 1 233 0
 1062 0004 1548     		ldr	r0, .L67
 1063 0006 164B     		ldr	r3, .L67+4
 1064 0008 0360     		str	r3, [r0]
 234:Src/main.c    ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 1065              		.loc 1 234 0
 1066 000a 0023     		movs	r3, #0
 1067 000c 4360     		str	r3, [r0, #4]
 235:Src/main.c    ****   hadc1.Init.ScanConvMode = DISABLE;
 1068              		.loc 1 235 0
 1069 000e 8360     		str	r3, [r0, #8]
 236:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 1070              		.loc 1 236 0
 1071 0010 0361     		str	r3, [r0, #16]
 237:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 1072              		.loc 1 237 0
 1073 0012 8361     		str	r3, [r0, #24]
 238:Src/main.c    ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 1074              		.loc 1 238 0
 1075 0014 0362     		str	r3, [r0, #32]
 239:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 1076              		.loc 1 239 0
 1077 0016 C362     		str	r3, [r0, #44]
 240:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 1078              		.loc 1 240 0
 1079 0018 124A     		ldr	r2, .L67+8
 1080 001a 8262     		str	r2, [r0, #40]
 241:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s 			page 34


 1081              		.loc 1 241 0
 1082 001c C360     		str	r3, [r0, #12]
 242:Src/main.c    ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 1083              		.loc 1 242 0
 1084 001e 0122     		movs	r2, #1
 1085 0020 C261     		str	r2, [r0, #28]
 243:Src/main.c    ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 1086              		.loc 1 243 0
 1087 0022 0363     		str	r3, [r0, #48]
 244:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 1088              		.loc 1 244 0
 1089 0024 4261     		str	r2, [r0, #20]
 245:Src/main.c    ****   {
 1090              		.loc 1 245 0
 1091 0026 FFF7FEFF 		bl	HAL_ADC_Init
 1092              	.LVL74:
 1093 002a 18B1     		cbz	r0, .L64
 247:Src/main.c    ****   }
 1094              		.loc 1 247 0
 1095 002c 0E48     		ldr	r0, .L67+12
 1096 002e F721     		movs	r1, #247
 1097 0030 FFF7FEFF 		bl	_Error_Handler
 1098              	.LVL75:
 1099              	.L64:
 252:Src/main.c    ****   sConfig.Rank = 1;
 1100              		.loc 1 252 0
 1101 0034 0423     		movs	r3, #4
 1102 0036 0093     		str	r3, [sp]
 253:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 1103              		.loc 1 253 0
 1104 0038 0123     		movs	r3, #1
 1105 003a 0193     		str	r3, [sp, #4]
 254:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1106              		.loc 1 254 0
 1107 003c 0023     		movs	r3, #0
 1108 003e 0293     		str	r3, [sp, #8]
 255:Src/main.c    ****   {
 1109              		.loc 1 255 0
 1110 0040 0648     		ldr	r0, .L67
 1111 0042 6946     		mov	r1, sp
 1112 0044 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1113              	.LVL76:
 1114 0048 20B1     		cbz	r0, .L63
 257:Src/main.c    ****   }
 1115              		.loc 1 257 0
 1116 004a 0748     		ldr	r0, .L67+12
 1117 004c 40F20111 		movw	r1, #257
 1118 0050 FFF7FEFF 		bl	_Error_Handler
 1119              	.LVL77:
 1120              	.L63:
 260:Src/main.c    **** 
 1121              		.loc 1 260 0
 1122 0054 05B0     		add	sp, sp, #20
 1123              	.LCFI22:
 1124              		.cfi_def_cfa_offset 4
 1125              		@ sp needed
 1126 0056 5DF804FB 		ldr	pc, [sp], #4
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s 			page 35


 1127              	.L68:
 1128 005a 00BF     		.align	2
 1129              	.L67:
 1130 005c 00000000 		.word	hadc1
 1131 0060 00200140 		.word	1073815552
 1132 0064 0100000F 		.word	251658241
 1133 0068 00000000 		.word	.LC0
 1134              		.cfi_endproc
 1135              	.LFE125:
 1137              		.section	.text.SystemClock_Config,"ax",%progbits
 1138              		.align	2
 1139              		.global	SystemClock_Config
 1140              		.thumb
 1141              		.thumb_func
 1143              	SystemClock_Config:
 1144              	.LFB124:
 172:Src/main.c    **** 
 1145              		.loc 1 172 0
 1146              		.cfi_startproc
 1147              		@ args = 0, pretend = 0, frame = 80
 1148              		@ frame_needed = 0, uses_anonymous_args = 0
 1149 0000 00B5     		push	{lr}
 1150              	.LCFI23:
 1151              		.cfi_def_cfa_offset 4
 1152              		.cfi_offset 14, -4
 1153 0002 95B0     		sub	sp, sp, #84
 1154              	.LCFI24:
 1155              		.cfi_def_cfa_offset 88
 1156              	.LBB7:
 179:Src/main.c    **** 
 1157              		.loc 1 179 0
 1158 0004 0022     		movs	r2, #0
 1159 0006 0192     		str	r2, [sp, #4]
 1160 0008 2A4B     		ldr	r3, .L73
 1161 000a 196C     		ldr	r1, [r3, #64]
 1162 000c 41F08051 		orr	r1, r1, #268435456
 1163 0010 1964     		str	r1, [r3, #64]
 1164 0012 1B6C     		ldr	r3, [r3, #64]
 1165 0014 03F08053 		and	r3, r3, #268435456
 1166 0018 0193     		str	r3, [sp, #4]
 1167 001a 019B     		ldr	r3, [sp, #4]
 1168              	.LBE7:
 1169              	.LBB8:
 181:Src/main.c    **** 
 1170              		.loc 1 181 0
 1171 001c 0292     		str	r2, [sp, #8]
 1172 001e 2649     		ldr	r1, .L73+4
 1173 0020 0B68     		ldr	r3, [r1]
 1174 0022 23F44043 		bic	r3, r3, #49152
 1175 0026 43F40043 		orr	r3, r3, #32768
 1176 002a 0B60     		str	r3, [r1]
 1177 002c 0B68     		ldr	r3, [r1]
 1178 002e 03F44043 		and	r3, r3, #49152
 1179 0032 0293     		str	r3, [sp, #8]
 1180 0034 029B     		ldr	r3, [sp, #8]
 1181              	.LBE8:
 185:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s 			page 36


 1182              		.loc 1 185 0
 1183 0036 0223     		movs	r3, #2
 1184 0038 0893     		str	r3, [sp, #32]
 186:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 1185              		.loc 1 186 0
 1186 003a 0121     		movs	r1, #1
 1187 003c 0B91     		str	r1, [sp, #44]
 187:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1188              		.loc 1 187 0
 1189 003e 1021     		movs	r1, #16
 1190 0040 0C91     		str	r1, [sp, #48]
 188:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1191              		.loc 1 188 0
 1192 0042 0E93     		str	r3, [sp, #56]
 189:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1193              		.loc 1 189 0
 1194 0044 0F92     		str	r2, [sp, #60]
 190:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 72;
 1195              		.loc 1 190 0
 1196 0046 0822     		movs	r2, #8
 1197 0048 1092     		str	r2, [sp, #64]
 191:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1198              		.loc 1 191 0
 1199 004a 4822     		movs	r2, #72
 1200 004c 1192     		str	r2, [sp, #68]
 192:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1201              		.loc 1 192 0
 1202 004e 1293     		str	r3, [sp, #72]
 193:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1203              		.loc 1 193 0
 1204 0050 0423     		movs	r3, #4
 1205 0052 1393     		str	r3, [sp, #76]
 194:Src/main.c    ****   {
 1206              		.loc 1 194 0
 1207 0054 08A8     		add	r0, sp, #32
 1208 0056 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1209              	.LVL78:
 1210 005a 18B1     		cbz	r0, .L70
 196:Src/main.c    ****   }
 1211              		.loc 1 196 0
 1212 005c 1748     		ldr	r0, .L73+8
 1213 005e C421     		movs	r1, #196
 1214 0060 FFF7FEFF 		bl	_Error_Handler
 1215              	.LVL79:
 1216              	.L70:
 201:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1217              		.loc 1 201 0
 1218 0064 0F23     		movs	r3, #15
 1219 0066 0393     		str	r3, [sp, #12]
 203:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1220              		.loc 1 203 0
 1221 0068 0221     		movs	r1, #2
 1222 006a 0491     		str	r1, [sp, #16]
 204:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1223              		.loc 1 204 0
 1224 006c 0023     		movs	r3, #0
 1225 006e 0593     		str	r3, [sp, #20]
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s 			page 37


 205:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV4;
 1226              		.loc 1 205 0
 1227 0070 4FF48053 		mov	r3, #4096
 1228 0074 0693     		str	r3, [sp, #24]
 206:Src/main.c    **** 
 1229              		.loc 1 206 0
 1230 0076 4FF4A053 		mov	r3, #5120
 1231 007a 0793     		str	r3, [sp, #28]
 208:Src/main.c    ****   {
 1232              		.loc 1 208 0
 1233 007c 03A8     		add	r0, sp, #12
 1234 007e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1235              	.LVL80:
 1236 0082 18B1     		cbz	r0, .L71
 210:Src/main.c    ****   }
 1237              		.loc 1 210 0
 1238 0084 0D48     		ldr	r0, .L73+8
 1239 0086 D221     		movs	r1, #210
 1240 0088 FFF7FEFF 		bl	_Error_Handler
 1241              	.LVL81:
 1242              	.L71:
 215:Src/main.c    **** 
 1243              		.loc 1 215 0
 1244 008c FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1245              	.LVL82:
 1246 0090 0B4B     		ldr	r3, .L73+12
 1247 0092 A3FB0030 		umull	r3, r0, r3, r0
 1248 0096 8009     		lsrs	r0, r0, #6
 1249 0098 FFF7FEFF 		bl	HAL_SYSTICK_Config
 1250              	.LVL83:
 219:Src/main.c    **** 
 1251              		.loc 1 219 0
 1252 009c 0420     		movs	r0, #4
 1253 009e FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 1254              	.LVL84:
 222:Src/main.c    **** }
 1255              		.loc 1 222 0
 1256 00a2 4FF0FF30 		mov	r0, #-1
 1257 00a6 0021     		movs	r1, #0
 1258 00a8 0A46     		mov	r2, r1
 1259 00aa FFF7FEFF 		bl	HAL_NVIC_SetPriority
 1260              	.LVL85:
 223:Src/main.c    **** 
 1261              		.loc 1 223 0
 1262 00ae 15B0     		add	sp, sp, #84
 1263              	.LCFI25:
 1264              		.cfi_def_cfa_offset 4
 1265              		@ sp needed
 1266 00b0 5DF804FB 		ldr	pc, [sp], #4
 1267              	.L74:
 1268              		.align	2
 1269              	.L73:
 1270 00b4 00380240 		.word	1073887232
 1271 00b8 00700040 		.word	1073770496
 1272 00bc 00000000 		.word	.LC0
 1273 00c0 D34D6210 		.word	274877907
 1274              		.cfi_endproc
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s 			page 38


 1275              	.LFE124:
 1277              		.section	.text.main,"ax",%progbits
 1278              		.align	2
 1279              		.global	main
 1280              		.thumb
 1281              		.thumb_func
 1283              	main:
 1284              	.LFB123:
  97:Src/main.c    ****   /* USER CODE BEGIN 1 */
 1285              		.loc 1 97 0
 1286              		.cfi_startproc
 1287              		@ args = 0, pretend = 0, frame = 0
 1288              		@ frame_needed = 0, uses_anonymous_args = 0
 1289 0000 10B5     		push	{r4, lr}
 1290              	.LCFI26:
 1291              		.cfi_def_cfa_offset 8
 1292              		.cfi_offset 4, -8
 1293              		.cfi_offset 14, -4
 105:Src/main.c    **** 
 1294              		.loc 1 105 0
 1295 0002 FFF7FEFF 		bl	HAL_Init
 1296              	.LVL86:
 112:Src/main.c    **** 
 1297              		.loc 1 112 0
 1298 0006 FFF7FEFF 		bl	SystemClock_Config
 1299              	.LVL87:
 119:Src/main.c    ****   MX_I2C1_Init();
 1300              		.loc 1 119 0
 1301 000a FFF7FEFF 		bl	MX_GPIO_Init
 1302              	.LVL88:
 120:Src/main.c    ****   MX_TIM1_Init();
 1303              		.loc 1 120 0
 1304 000e FFF7FEFF 		bl	MX_I2C1_Init
 1305              	.LVL89:
 121:Src/main.c    ****   MX_TIM2_Init();
 1306              		.loc 1 121 0
 1307 0012 FFF7FEFF 		bl	MX_TIM1_Init
 1308              	.LVL90:
 122:Src/main.c    ****   MX_TIM3_Init();
 1309              		.loc 1 122 0
 1310 0016 FFF7FEFF 		bl	MX_TIM2_Init
 1311              	.LVL91:
 123:Src/main.c    ****   MX_TIM10_Init();
 1312              		.loc 1 123 0
 1313 001a FFF7FEFF 		bl	MX_TIM3_Init
 1314              	.LVL92:
 124:Src/main.c    ****   MX_TIM11_Init();
 1315              		.loc 1 124 0
 1316 001e FFF7FEFF 		bl	MX_TIM10_Init
 1317              	.LVL93:
 125:Src/main.c    ****   MX_USART6_UART_Init();
 1318              		.loc 1 125 0
 1319 0022 FFF7FEFF 		bl	MX_TIM11_Init
 1320              	.LVL94:
 126:Src/main.c    ****   MX_ADC1_Init();
 1321              		.loc 1 126 0
 1322 0026 FFF7FEFF 		bl	MX_USART6_UART_Init
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s 			page 39


 1323              	.LVL95:
 127:Src/main.c    ****   /* USER CODE BEGIN 2 */
 1324              		.loc 1 127 0
 1325 002a FFF7FEFF 		bl	MX_ADC1_Init
 1326              	.LVL96:
 129:Src/main.c    ****   HAL_Delay(1000);
 1327              		.loc 1 129 0
 1328 002e FFF7FEFF 		bl	ssd1306_Init
 1329              	.LVL97:
 130:Src/main.c    ****   ssd1306_Fill(Black);
 1330              		.loc 1 130 0
 1331 0032 4FF47A70 		mov	r0, #1000
 1332 0036 FFF7FEFF 		bl	HAL_Delay
 1333              	.LVL98:
 131:Src/main.c    ****   ssd1306_UpdateScreen();
 1334              		.loc 1 131 0
 1335 003a 0020     		movs	r0, #0
 1336 003c FFF7FEFF 		bl	ssd1306_Fill
 1337              	.LVL99:
 132:Src/main.c    **** 
 1338              		.loc 1 132 0
 1339 0040 FFF7FEFF 		bl	ssd1306_UpdateScreen
 1340              	.LVL100:
 134:Src/main.c    **** 
 1341              		.loc 1 134 0
 1342 0044 4FF47A70 		mov	r0, #1000
 1343 0048 FFF7FEFF 		bl	HAL_Delay
 1344              	.LVL101:
 136:Src/main.c    ****   ssd1306_WriteString("Sup fellas",Font_11x18,White);
 1345              		.loc 1 136 0
 1346 004c 0020     		movs	r0, #0
 1347 004e 0146     		mov	r1, r0
 1348 0050 FFF7FEFF 		bl	ssd1306_SetCursor
 1349              	.LVL102:
 137:Src/main.c    **** 
 1350              		.loc 1 137 0
 1351 0054 154B     		ldr	r3, .L80
 1352 0056 1648     		ldr	r0, .L80+4
 1353 0058 93E80600 		ldmia	r3, {r1, r2}
 1354 005c 0123     		movs	r3, #1
 1355 005e FFF7FEFF 		bl	ssd1306_WriteString
 1356              	.LVL103:
 139:Src/main.c    ****   /* USER CODE END 2 */
 1357              		.loc 1 139 0
 1358 0062 FFF7FEFF 		bl	ssd1306_UpdateScreen
 1359              	.LVL104:
 1360              	.L76:
 1361              	.LBB9:
 146:Src/main.c    ****     if (pc13) {
 1362              		.loc 1 146 0
 1363 0066 1348     		ldr	r0, .L80+8
 1364 0068 4FF48041 		mov	r1, #16384
 1365 006c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1366              	.LVL105:
 147:Src/main.c    ****       ssd1306_SetCursor(0,0);
 1367              		.loc 1 147 0
 1368 0070 0446     		mov	r4, r0
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s 			page 40


 1369 0072 68B1     		cbz	r0, .L77
 148:Src/main.c    ****       ssd1306_WriteChar(pc13,Font_11x18,White);
 1370              		.loc 1 148 0
 1371 0074 0020     		movs	r0, #0
 1372              	.LVL106:
 1373 0076 0146     		mov	r1, r0
 1374 0078 FFF7FEFF 		bl	ssd1306_SetCursor
 1375              	.LVL107:
 149:Src/main.c    ****       ssd1306_UpdateScreen();
 1376              		.loc 1 149 0
 1377 007c 0B4B     		ldr	r3, .L80
 1378 007e 2046     		mov	r0, r4
 1379 0080 93E80600 		ldmia	r3, {r1, r2}
 1380 0084 0123     		movs	r3, #1
 1381 0086 FFF7FEFF 		bl	ssd1306_WriteChar
 1382              	.LVL108:
 150:Src/main.c    ****     } else {
 1383              		.loc 1 150 0
 1384 008a FFF7FEFF 		bl	ssd1306_UpdateScreen
 1385              	.LVL109:
 1386 008e EAE7     		b	.L76
 1387              	.LVL110:
 1388              	.L77:
 152:Src/main.c    ****       ssd1306_WriteString("Howdy Doo",Font_11x18,White);
 1389              		.loc 1 152 0
 1390 0090 0020     		movs	r0, #0
 1391              	.LVL111:
 1392 0092 0146     		mov	r1, r0
 1393 0094 FFF7FEFF 		bl	ssd1306_SetCursor
 1394              	.LVL112:
 153:Src/main.c    **** 
 1395              		.loc 1 153 0
 1396 0098 044B     		ldr	r3, .L80
 1397 009a 0748     		ldr	r0, .L80+12
 1398 009c 93E80600 		ldmia	r3, {r1, r2}
 1399 00a0 0123     		movs	r3, #1
 1400 00a2 FFF7FEFF 		bl	ssd1306_WriteString
 1401              	.LVL113:
 155:Src/main.c    ****     }
 1402              		.loc 1 155 0
 1403 00a6 FFF7FEFF 		bl	ssd1306_UpdateScreen
 1404              	.LVL114:
 1405 00aa DCE7     		b	.L76
 1406              	.L81:
 1407              		.align	2
 1408              	.L80:
 1409 00ac 00000000 		.word	Font_11x18
 1410 00b0 0C000000 		.word	.LC1
 1411 00b4 00080240 		.word	1073874944
 1412 00b8 18000000 		.word	.LC2
 1413              	.LBE9:
 1414              		.cfi_endproc
 1415              	.LFE123:
 1417              		.comm	huart6,64,4
 1418              		.comm	htim11,60,4
 1419              		.comm	htim10,60,4
 1420              		.comm	htim3,60,4
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s 			page 41


 1421              		.comm	htim2,60,4
 1422              		.comm	htim1,60,4
 1423              		.comm	hi2c1,84,4
 1424              		.comm	hadc1,72,4
 1425              		.section	.rodata.str1.4,"aMS",%progbits,1
 1426              		.align	2
 1427              	.LC0:
 1428 0000 5372632F 		.ascii	"Src/main.c\000"
 1428      6D61696E 
 1428      2E6300
 1429 000b 00       		.space	1
 1430              	.LC1:
 1431 000c 53757020 		.ascii	"Sup fellas\000"
 1431      66656C6C 
 1431      617300
 1432 0017 00       		.space	1
 1433              	.LC2:
 1434 0018 486F7764 		.ascii	"Howdy Doo\000"
 1434      7920446F 
 1434      6F00
 1435              		.text
 1436              	.Letext0:
 1437              		.file 2 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 1438              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/machine/_default_types
 1439              		.file 4 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/sys/_stdint.h"
 1440              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1441              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1442              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1443              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1444              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1445              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1446              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 1447              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 1448              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1449              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 1450              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1451              		.file 16 "Inc/fonts.h"
 1452              		.file 17 "Inc/ssd1306.h"
 1453              		.file 18 "Drivers/CMSIS/Include/core_cm4.h"
 1454              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 1455              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s 			page 42


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s:21     .text.MX_GPIO_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s:260    .text.MX_GPIO_Init:0000000000000160 $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s:269    .text._Error_Handler:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s:274    .text._Error_Handler:0000000000000000 _Error_Handler
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s:290    .text.MX_I2C1_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s:294    .text.MX_I2C1_Init:0000000000000000 MX_I2C1_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s:342    .text.MX_I2C1_Init:0000000000000034 $d
                            *COM*:0000000000000054 hi2c1
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s:350    .text.MX_TIM1_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s:354    .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s:543    .text.MX_TIM1_Init:000000000000010c $d
                            *COM*:000000000000003c htim1
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s:550    .text.MX_TIM2_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s:554    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s:707    .text.MX_TIM2_Init:00000000000000dc $d
                            *COM*:000000000000003c htim2
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s:713    .text.MX_TIM3_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s:717    .text.MX_TIM3_Init:0000000000000000 MX_TIM3_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s:794    .text.MX_TIM3_Init:0000000000000060 $d
                            *COM*:000000000000003c htim3
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s:801    .text.MX_TIM10_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s:805    .text.MX_TIM10_Init:0000000000000000 MX_TIM10_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s:887    .text.MX_TIM10_Init:0000000000000064 $d
                            *COM*:000000000000003c htim10
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s:894    .text.MX_TIM11_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s:898    .text.MX_TIM11_Init:0000000000000000 MX_TIM11_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s:980    .text.MX_TIM11_Init:0000000000000064 $d
                            *COM*:000000000000003c htim11
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s:987    .text.MX_USART6_UART_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s:991    .text.MX_USART6_UART_Init:0000000000000000 MX_USART6_UART_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s:1037   .text.MX_USART6_UART_Init:0000000000000030 $d
                            *COM*:0000000000000040 huart6
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s:1044   .text.MX_ADC1_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s:1048   .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s:1130   .text.MX_ADC1_Init:000000000000005c $d
                            *COM*:0000000000000048 hadc1
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s:1138   .text.SystemClock_Config:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s:1143   .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s:1270   .text.SystemClock_Config:00000000000000b4 $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s:1278   .text.main:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s:1283   .text.main:0000000000000000 main
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s:1409   .text.main:00000000000000ac $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s:1426   .rodata.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_I2C_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccNcoFed.s 			page 43


HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_UART_Init
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
ssd1306_Init
HAL_Delay
ssd1306_Fill
ssd1306_UpdateScreen
ssd1306_SetCursor
ssd1306_WriteString
HAL_GPIO_ReadPin
ssd1306_WriteChar
Font_11x18
