ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"main.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  25              	MX_GPIO_Init:
  26              	.LFB135:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** 
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s 			page 2


  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  40:Src/main.c    **** #include "main.h"
  41:Src/main.c    **** #include "stm32f4xx_hal.h"
  42:Src/main.c    **** #include "stm32f4xx_it.h"
  43:Src/main.c    **** 
  44:Src/main.c    **** /* USER CODE BEGIN Includes */
  45:Src/main.c    **** #include "fonts.h"
  46:Src/main.c    **** #include "ssd1306.h"
  47:Src/main.c    **** /* USER CODE END Includes */
  48:Src/main.c    **** 
  49:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  50:Src/main.c    **** ADC_HandleTypeDef hadc1;
  51:Src/main.c    **** 
  52:Src/main.c    **** I2C_HandleTypeDef hi2c1;
  53:Src/main.c    **** 
  54:Src/main.c    **** TIM_HandleTypeDef htim1;
  55:Src/main.c    **** TIM_HandleTypeDef htim2;
  56:Src/main.c    **** TIM_HandleTypeDef htim3;
  57:Src/main.c    **** TIM_HandleTypeDef htim10;
  58:Src/main.c    **** TIM_HandleTypeDef htim11;
  59:Src/main.c    **** 
  60:Src/main.c    **** UART_HandleTypeDef huart6;
  61:Src/main.c    **** 
  62:Src/main.c    **** /* USER CODE BEGIN PV */
  63:Src/main.c    **** /* USER CODE END PV */
  64:Src/main.c    **** 
  65:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  66:Src/main.c    **** void SystemClock_Config(void);
  67:Src/main.c    **** static void MX_GPIO_Init(void);
  68:Src/main.c    **** static void MX_I2C1_Init(void);
  69:Src/main.c    **** static void MX_TIM1_Init(void);
  70:Src/main.c    **** static void MX_TIM2_Init(void);
  71:Src/main.c    **** static void MX_TIM3_Init(void);
  72:Src/main.c    **** static void MX_TIM10_Init(void);
  73:Src/main.c    **** static void MX_TIM11_Init(void);
  74:Src/main.c    **** static void MX_USART6_UART_Init(void);
  75:Src/main.c    **** static void MX_ADC1_Init(void);
  76:Src/main.c    **** 
  77:Src/main.c    **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
  78:Src/main.c    ****                                 
  79:Src/main.c    ****                                 
  80:Src/main.c    **** 
  81:Src/main.c    **** /* USER CODE BEGIN PFP */
  82:Src/main.c    **** /* USER CODE END PFP */
  83:Src/main.c    **** 
  84:Src/main.c    **** /* USER CODE BEGIN 0 */
  85:Src/main.c    **** uint32_t getUs(void)
  86:Src/main.c    **** {
  87:Src/main.c    ****   uint32_t usTicks = HAL_RCC_GetSysClockFreq() / 1000000;
  88:Src/main.c    ****   register uint32_t ms, cycle_cnt;
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s 			page 3


  89:Src/main.c    ****   do
  90:Src/main.c    ****   {
  91:Src/main.c    ****     ms = HAL_GetTick();
  92:Src/main.c    ****     cycle_cnt = SysTick->VAL;
  93:Src/main.c    ****   } while (ms != HAL_GetTick());
  94:Src/main.c    ****   return (ms * 1000) + (usTicks * 1000 - cycle_cnt) / usTicks;
  95:Src/main.c    **** }
  96:Src/main.c    **** 
  97:Src/main.c    **** void delayUs(uint16_t micros)
  98:Src/main.c    **** {
  99:Src/main.c    ****   uint32_t start = getUs();
 100:Src/main.c    ****   while (getUs() - start < (uint32_t)micros)
 101:Src/main.c    ****   {
 102:Src/main.c    ****     asm("nop");
 103:Src/main.c    ****   }
 104:Src/main.c    **** }
 105:Src/main.c    **** /* USER CODE END 0 */
 106:Src/main.c    **** 
 107:Src/main.c    **** /**
 108:Src/main.c    ****   * @brief  The application entry point.
 109:Src/main.c    ****   *
 110:Src/main.c    ****   * @retval None
 111:Src/main.c    ****   */
 112:Src/main.c    **** int main(void)
 113:Src/main.c    **** {
 114:Src/main.c    ****   /* USER CODE BEGIN 1 */
 115:Src/main.c    ****   /* USER CODE END 1 */
 116:Src/main.c    **** 
 117:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
 118:Src/main.c    **** 
 119:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 120:Src/main.c    ****   HAL_Init();
 121:Src/main.c    **** 
 122:Src/main.c    ****   /* USER CODE BEGIN Init */
 123:Src/main.c    ****   /* USER CODE END Init */
 124:Src/main.c    **** 
 125:Src/main.c    ****   /* Configure the system clock */
 126:Src/main.c    ****   SystemClock_Config();
 127:Src/main.c    **** 
 128:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 129:Src/main.c    ****   /* USER CODE END SysInit */
 130:Src/main.c    **** 
 131:Src/main.c    ****   /* Initialize all configured peripherals */
 132:Src/main.c    ****   MX_GPIO_Init();
 133:Src/main.c    ****   MX_I2C1_Init();
 134:Src/main.c    ****   MX_TIM1_Init();
 135:Src/main.c    ****   MX_TIM2_Init();
 136:Src/main.c    ****   MX_TIM3_Init();
 137:Src/main.c    ****   MX_TIM10_Init();
 138:Src/main.c    ****   MX_TIM11_Init();
 139:Src/main.c    ****   MX_USART6_UART_Init();
 140:Src/main.c    ****   MX_ADC1_Init();
 141:Src/main.c    ****   /* USER CODE BEGIN 2 */
 142:Src/main.c    ****   ssd1306_Init();
 143:Src/main.c    ****   HAL_Delay(1000);
 144:Src/main.c    ****   ssd1306_Fill(Black);
 145:Src/main.c    ****   ssd1306_WriteString("Hola Boyo", Font_11x18, White);
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s 			page 4


 146:Src/main.c    ****   ssd1306_UpdateScreen();
 147:Src/main.c    ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_13, GPIO_PIN_RESET);
 148:Src/main.c    ****   /* USER CODE END 2 */
 149:Src/main.c    **** 
 150:Src/main.c    ****   /* Infinite loop */
 151:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 152:Src/main.c    ****   char *adc = (char *)malloc(13 * sizeof(char));
 153:Src/main.c    **** 
 154:Src/main.c    ****   while (1)
 155:Src/main.c    ****   {
 156:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_13);
 157:Src/main.c    ****     delayUs(15); //delay 15ms
 158:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_13);
 159:Src/main.c    ****     HAL_Delay(60);
 160:Src/main.c    ****     ssd1306_SetCursor(0, 0);
 161:Src/main.c    ****     sprintf(adc, "val: %d    ", (int)sonarVal);
 162:Src/main.c    ****     ssd1306_WriteString(adc, Font_11x18, White);
 163:Src/main.c    ****     ssd1306_UpdateScreen();
 164:Src/main.c    ****   }
 165:Src/main.c    ****   /* USER CODE END WHILE */
 166:Src/main.c    **** 
 167:Src/main.c    ****   /* USER CODE BEGIN 3 */
 168:Src/main.c    ****   /* USER CODE END 3 */
 169:Src/main.c    **** 
 170:Src/main.c    **** }
 171:Src/main.c    **** 
 172:Src/main.c    **** /**
 173:Src/main.c    ****   * @brief System Clock Configuration
 174:Src/main.c    ****   * @retval None
 175:Src/main.c    ****   */
 176:Src/main.c    **** void SystemClock_Config(void)
 177:Src/main.c    **** {
 178:Src/main.c    **** 
 179:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 180:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 181:Src/main.c    **** 
 182:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 183:Src/main.c    ****     */
 184:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 185:Src/main.c    **** 
 186:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 187:Src/main.c    **** 
 188:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 189:Src/main.c    ****     */
 190:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 191:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 192:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 193:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 194:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 195:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 196:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 72;
 197:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 198:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 199:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 200:Src/main.c    ****   {
 201:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 202:Src/main.c    ****   }
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s 			page 5


 203:Src/main.c    **** 
 204:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 205:Src/main.c    ****     */
 206:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 207:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 208:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 209:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 210:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 211:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV4;
 212:Src/main.c    **** 
 213:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 214:Src/main.c    ****   {
 215:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 216:Src/main.c    ****   }
 217:Src/main.c    **** 
 218:Src/main.c    ****     /**Configure the Systick interrupt time 
 219:Src/main.c    ****     */
 220:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 221:Src/main.c    **** 
 222:Src/main.c    ****     /**Configure the Systick 
 223:Src/main.c    ****     */
 224:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 225:Src/main.c    **** 
 226:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 227:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 228:Src/main.c    **** }
 229:Src/main.c    **** 
 230:Src/main.c    **** /* ADC1 init function */
 231:Src/main.c    **** static void MX_ADC1_Init(void)
 232:Src/main.c    **** {
 233:Src/main.c    **** 
 234:Src/main.c    ****   ADC_ChannelConfTypeDef sConfig;
 235:Src/main.c    **** 
 236:Src/main.c    ****     /**Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of co
 237:Src/main.c    ****     */
 238:Src/main.c    ****   hadc1.Instance = ADC1;
 239:Src/main.c    ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 240:Src/main.c    ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 241:Src/main.c    ****   hadc1.Init.ScanConvMode = DISABLE;
 242:Src/main.c    ****   hadc1.Init.ContinuousConvMode = ENABLE;
 243:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 244:Src/main.c    ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 245:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 246:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 247:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 248:Src/main.c    ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 249:Src/main.c    ****   hadc1.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 250:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 251:Src/main.c    ****   {
 252:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 253:Src/main.c    ****   }
 254:Src/main.c    **** 
 255:Src/main.c    ****     /**Configure for the selected ADC regular channel its corresponding rank in the sequencer and i
 256:Src/main.c    ****     */
 257:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_4;
 258:Src/main.c    ****   sConfig.Rank = 1;
 259:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s 			page 6


 260:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 261:Src/main.c    ****   {
 262:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 263:Src/main.c    ****   }
 264:Src/main.c    **** 
 265:Src/main.c    **** }
 266:Src/main.c    **** 
 267:Src/main.c    **** /* I2C1 init function */
 268:Src/main.c    **** static void MX_I2C1_Init(void)
 269:Src/main.c    **** {
 270:Src/main.c    **** 
 271:Src/main.c    ****   hi2c1.Instance = I2C1;
 272:Src/main.c    ****   hi2c1.Init.ClockSpeed = 100000;
 273:Src/main.c    ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 274:Src/main.c    ****   hi2c1.Init.OwnAddress1 = 0;
 275:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 276:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 277:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
 278:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 279:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 280:Src/main.c    ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 281:Src/main.c    ****   {
 282:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 283:Src/main.c    ****   }
 284:Src/main.c    **** 
 285:Src/main.c    **** }
 286:Src/main.c    **** 
 287:Src/main.c    **** /* TIM1 init function */
 288:Src/main.c    **** static void MX_TIM1_Init(void)
 289:Src/main.c    **** {
 290:Src/main.c    **** 
 291:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig;
 292:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
 293:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
 294:Src/main.c    ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig;
 295:Src/main.c    **** 
 296:Src/main.c    ****   htim1.Instance = TIM1;
 297:Src/main.c    ****   htim1.Init.Prescaler = 0;
 298:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 299:Src/main.c    ****   htim1.Init.Period = 0;
 300:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 301:Src/main.c    ****   htim1.Init.RepetitionCounter = 0;
 302:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 303:Src/main.c    ****   {
 304:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 305:Src/main.c    ****   }
 306:Src/main.c    **** 
 307:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 308:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 309:Src/main.c    ****   {
 310:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 311:Src/main.c    ****   }
 312:Src/main.c    **** 
 313:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 314:Src/main.c    ****   {
 315:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 316:Src/main.c    ****   }
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s 			page 7


 317:Src/main.c    **** 
 318:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 319:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 320:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 321:Src/main.c    ****   {
 322:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 323:Src/main.c    ****   }
 324:Src/main.c    **** 
 325:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 326:Src/main.c    ****   sConfigOC.Pulse = 0;
 327:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 328:Src/main.c    ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 329:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 330:Src/main.c    ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 331:Src/main.c    ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 332:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 333:Src/main.c    ****   {
 334:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 335:Src/main.c    ****   }
 336:Src/main.c    **** 
 337:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 338:Src/main.c    ****   {
 339:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 340:Src/main.c    ****   }
 341:Src/main.c    **** 
 342:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 343:Src/main.c    ****   {
 344:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 345:Src/main.c    ****   }
 346:Src/main.c    **** 
 347:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 348:Src/main.c    ****   {
 349:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 350:Src/main.c    ****   }
 351:Src/main.c    **** 
 352:Src/main.c    ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 353:Src/main.c    ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 354:Src/main.c    ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 355:Src/main.c    ****   sBreakDeadTimeConfig.DeadTime = 0;
 356:Src/main.c    ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 357:Src/main.c    ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 358:Src/main.c    ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 359:Src/main.c    ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 360:Src/main.c    ****   {
 361:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 362:Src/main.c    ****   }
 363:Src/main.c    **** 
 364:Src/main.c    ****   HAL_TIM_MspPostInit(&htim1);
 365:Src/main.c    **** 
 366:Src/main.c    **** }
 367:Src/main.c    **** 
 368:Src/main.c    **** /* TIM2 init function */
 369:Src/main.c    **** static void MX_TIM2_Init(void)
 370:Src/main.c    **** {
 371:Src/main.c    **** 
 372:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig;
 373:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s 			page 8


 374:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
 375:Src/main.c    **** 
 376:Src/main.c    ****   htim2.Instance = TIM2;
 377:Src/main.c    ****   htim2.Init.Prescaler = 2;
 378:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 379:Src/main.c    ****   htim2.Init.Period = 100000;
 380:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 381:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 382:Src/main.c    ****   {
 383:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 384:Src/main.c    ****   }
 385:Src/main.c    **** 
 386:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 387:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 388:Src/main.c    ****   {
 389:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 390:Src/main.c    ****   }
 391:Src/main.c    **** 
 392:Src/main.c    ****   if (HAL_TIM_OC_Init(&htim2) != HAL_OK)
 393:Src/main.c    ****   {
 394:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 395:Src/main.c    ****   }
 396:Src/main.c    **** 
 397:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 398:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 399:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 400:Src/main.c    ****   {
 401:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 402:Src/main.c    ****   }
 403:Src/main.c    **** 
 404:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_TIMING;
 405:Src/main.c    ****   sConfigOC.Pulse = 0;
 406:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 407:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 408:Src/main.c    ****   if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 409:Src/main.c    ****   {
 410:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 411:Src/main.c    ****   }
 412:Src/main.c    **** 
 413:Src/main.c    ****   if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 414:Src/main.c    ****   {
 415:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 416:Src/main.c    ****   }
 417:Src/main.c    **** 
 418:Src/main.c    ****   if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 419:Src/main.c    ****   {
 420:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 421:Src/main.c    ****   }
 422:Src/main.c    **** 
 423:Src/main.c    ****   if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 424:Src/main.c    ****   {
 425:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 426:Src/main.c    ****   }
 427:Src/main.c    **** 
 428:Src/main.c    ****   HAL_TIM_MspPostInit(&htim2);
 429:Src/main.c    **** 
 430:Src/main.c    **** }
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s 			page 9


 431:Src/main.c    **** 
 432:Src/main.c    **** /* TIM3 init function */
 433:Src/main.c    **** static void MX_TIM3_Init(void)
 434:Src/main.c    **** {
 435:Src/main.c    **** 
 436:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig;
 437:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
 438:Src/main.c    **** 
 439:Src/main.c    ****   htim3.Instance = TIM3;
 440:Src/main.c    ****   htim3.Init.Prescaler = 0;
 441:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 442:Src/main.c    ****   htim3.Init.Period = 0;
 443:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 444:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 445:Src/main.c    ****   {
 446:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 447:Src/main.c    ****   }
 448:Src/main.c    **** 
 449:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 450:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 451:Src/main.c    ****   {
 452:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 453:Src/main.c    ****   }
 454:Src/main.c    **** 
 455:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 456:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 457:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 458:Src/main.c    ****   {
 459:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 460:Src/main.c    ****   }
 461:Src/main.c    **** 
 462:Src/main.c    **** }
 463:Src/main.c    **** 
 464:Src/main.c    **** /* TIM10 init function */
 465:Src/main.c    **** static void MX_TIM10_Init(void)
 466:Src/main.c    **** {
 467:Src/main.c    **** 
 468:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
 469:Src/main.c    **** 
 470:Src/main.c    ****   htim10.Instance = TIM10;
 471:Src/main.c    ****   htim10.Init.Prescaler = 0;
 472:Src/main.c    ****   htim10.Init.CounterMode = TIM_COUNTERMODE_UP;
 473:Src/main.c    ****   htim10.Init.Period = 0;
 474:Src/main.c    ****   htim10.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 475:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim10) != HAL_OK)
 476:Src/main.c    ****   {
 477:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 478:Src/main.c    ****   }
 479:Src/main.c    **** 
 480:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim10) != HAL_OK)
 481:Src/main.c    ****   {
 482:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 483:Src/main.c    ****   }
 484:Src/main.c    **** 
 485:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 486:Src/main.c    ****   sConfigOC.Pulse = 0;
 487:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s 			page 10


 488:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 489:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim10, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 490:Src/main.c    ****   {
 491:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 492:Src/main.c    ****   }
 493:Src/main.c    **** 
 494:Src/main.c    ****   HAL_TIM_MspPostInit(&htim10);
 495:Src/main.c    **** 
 496:Src/main.c    **** }
 497:Src/main.c    **** 
 498:Src/main.c    **** /* TIM11 init function */
 499:Src/main.c    **** static void MX_TIM11_Init(void)
 500:Src/main.c    **** {
 501:Src/main.c    **** 
 502:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
 503:Src/main.c    **** 
 504:Src/main.c    ****   htim11.Instance = TIM11;
 505:Src/main.c    ****   htim11.Init.Prescaler = 0;
 506:Src/main.c    ****   htim11.Init.CounterMode = TIM_COUNTERMODE_UP;
 507:Src/main.c    ****   htim11.Init.Period = 0;
 508:Src/main.c    ****   htim11.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 509:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim11) != HAL_OK)
 510:Src/main.c    ****   {
 511:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 512:Src/main.c    ****   }
 513:Src/main.c    **** 
 514:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim11) != HAL_OK)
 515:Src/main.c    ****   {
 516:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 517:Src/main.c    ****   }
 518:Src/main.c    **** 
 519:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 520:Src/main.c    ****   sConfigOC.Pulse = 0;
 521:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 522:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 523:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim11, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 524:Src/main.c    ****   {
 525:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 526:Src/main.c    ****   }
 527:Src/main.c    **** 
 528:Src/main.c    ****   HAL_TIM_MspPostInit(&htim11);
 529:Src/main.c    **** 
 530:Src/main.c    **** }
 531:Src/main.c    **** 
 532:Src/main.c    **** /* USART6 init function */
 533:Src/main.c    **** static void MX_USART6_UART_Init(void)
 534:Src/main.c    **** {
 535:Src/main.c    **** 
 536:Src/main.c    ****   huart6.Instance = USART6;
 537:Src/main.c    ****   huart6.Init.BaudRate = 115200;
 538:Src/main.c    ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
 539:Src/main.c    ****   huart6.Init.StopBits = UART_STOPBITS_1;
 540:Src/main.c    ****   huart6.Init.Parity = UART_PARITY_NONE;
 541:Src/main.c    ****   huart6.Init.Mode = UART_MODE_TX_RX;
 542:Src/main.c    ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 543:Src/main.c    ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 544:Src/main.c    ****   if (HAL_UART_Init(&huart6) != HAL_OK)
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s 			page 11


 545:Src/main.c    ****   {
 546:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 547:Src/main.c    ****   }
 548:Src/main.c    **** 
 549:Src/main.c    **** }
 550:Src/main.c    **** 
 551:Src/main.c    **** /** Configure pins as 
 552:Src/main.c    ****         * Analog 
 553:Src/main.c    ****         * Input 
 554:Src/main.c    ****         * Output
 555:Src/main.c    ****         * EVENT_OUT
 556:Src/main.c    ****         * EXTI
 557:Src/main.c    **** */
 558:Src/main.c    **** static void MX_GPIO_Init(void)
 559:Src/main.c    **** {
  28              		.loc 1 559 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 28
  35              		.cfi_offset 4, -28
  36              		.cfi_offset 5, -24
  37              		.cfi_offset 6, -20
  38              		.cfi_offset 7, -16
  39              		.cfi_offset 8, -12
  40              		.cfi_offset 9, -8
  41              		.cfi_offset 14, -4
  42 0004 8BB0     		sub	sp, sp, #44
  43              	.LCFI1:
  44              		.cfi_def_cfa_offset 72
  45              	.LBB2:
 560:Src/main.c    **** 
 561:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct;
 562:Src/main.c    **** 
 563:Src/main.c    ****   /* GPIO Ports Clock Enable */
 564:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  46              		.loc 1 564 0
  47 0006 0024     		movs	r4, #0
  48 0008 0094     		str	r4, [sp]
  49 000a 654B     		ldr	r3, .L3
  50 000c 1A6B     		ldr	r2, [r3, #48]
  51 000e 42F00402 		orr	r2, r2, #4
  52 0012 1A63     		str	r2, [r3, #48]
  53 0014 1A6B     		ldr	r2, [r3, #48]
  54 0016 02F00402 		and	r2, r2, #4
  55 001a 0092     		str	r2, [sp]
  56 001c 009A     		ldr	r2, [sp]
  57              	.LBE2:
  58              	.LBB3:
 565:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  59              		.loc 1 565 0
  60 001e 0194     		str	r4, [sp, #4]
  61 0020 1A6B     		ldr	r2, [r3, #48]
  62 0022 42F08002 		orr	r2, r2, #128
  63 0026 1A63     		str	r2, [r3, #48]
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s 			page 12


  64 0028 1A6B     		ldr	r2, [r3, #48]
  65 002a 02F08002 		and	r2, r2, #128
  66 002e 0192     		str	r2, [sp, #4]
  67 0030 019A     		ldr	r2, [sp, #4]
  68              	.LBE3:
  69              	.LBB4:
 566:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  70              		.loc 1 566 0
  71 0032 0294     		str	r4, [sp, #8]
  72 0034 1A6B     		ldr	r2, [r3, #48]
  73 0036 42F00102 		orr	r2, r2, #1
  74 003a 1A63     		str	r2, [r3, #48]
  75 003c 1A6B     		ldr	r2, [r3, #48]
  76 003e 02F00102 		and	r2, r2, #1
  77 0042 0292     		str	r2, [sp, #8]
  78 0044 029A     		ldr	r2, [sp, #8]
  79              	.LBE4:
  80              	.LBB5:
 567:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  81              		.loc 1 567 0
  82 0046 0394     		str	r4, [sp, #12]
  83 0048 1A6B     		ldr	r2, [r3, #48]
  84 004a 42F00202 		orr	r2, r2, #2
  85 004e 1A63     		str	r2, [r3, #48]
  86 0050 1A6B     		ldr	r2, [r3, #48]
  87 0052 02F00202 		and	r2, r2, #2
  88 0056 0392     		str	r2, [sp, #12]
  89 0058 039A     		ldr	r2, [sp, #12]
  90              	.LBE5:
  91              	.LBB6:
 568:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  92              		.loc 1 568 0
  93 005a 0494     		str	r4, [sp, #16]
  94 005c 1A6B     		ldr	r2, [r3, #48]
  95 005e 42F00802 		orr	r2, r2, #8
  96 0062 1A63     		str	r2, [r3, #48]
  97 0064 1B6B     		ldr	r3, [r3, #48]
  98 0066 03F00803 		and	r3, r3, #8
  99 006a 0493     		str	r3, [sp, #16]
 100 006c 049B     		ldr	r3, [sp, #16]
 101              	.LBE6:
 569:Src/main.c    **** 
 570:Src/main.c    ****   /*Configure GPIO pin Output Level */
 571:Src/main.c    ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13|GPIO_PIN_15|GPIO_PIN_4|GPIO_PIN_5 
 102              		.loc 1 571 0
 103 006e 4D4F     		ldr	r7, .L3+4
 104 0070 3846     		mov	r0, r7
 105 0072 4AF23031 		movw	r1, #41776
 106 0076 2246     		mov	r2, r4
 107 0078 FFF7FEFF 		bl	HAL_GPIO_WritePin
 108              	.LVL0:
 572:Src/main.c    ****                           |GPIO_PIN_8|GPIO_PIN_9, GPIO_PIN_RESET);
 573:Src/main.c    **** 
 574:Src/main.c    ****   /*Configure GPIO pin Output Level */
 575:Src/main.c    ****   HAL_GPIO_WritePin(GPIOH, GPIO_PIN_0|GPIO_PIN_1, GPIO_PIN_RESET);
 109              		.loc 1 575 0
 110 007c DFF83491 		ldr	r9, .L3+20
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s 			page 13


 111 0080 4846     		mov	r0, r9
 112 0082 0321     		movs	r1, #3
 113 0084 2246     		mov	r2, r4
 114 0086 FFF7FEFF 		bl	HAL_GPIO_WritePin
 115              	.LVL1:
 576:Src/main.c    **** 
 577:Src/main.c    ****   /*Configure GPIO pin Output Level */
 578:Src/main.c    ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_RESET);
 116              		.loc 1 578 0
 117 008a 474D     		ldr	r5, .L3+8
 118 008c 2846     		mov	r0, r5
 119 008e 8021     		movs	r1, #128
 120 0090 2246     		mov	r2, r4
 121 0092 FFF7FEFF 		bl	HAL_GPIO_WritePin
 122              	.LVL2:
 579:Src/main.c    **** 
 580:Src/main.c    ****   /*Configure GPIO pin Output Level */
 581:Src/main.c    ****   HAL_GPIO_WritePin(Sensor_Trig_GPIO_Port, Sensor_Trig_Pin, GPIO_PIN_SET);
 123              		.loc 1 581 0
 124 0096 2846     		mov	r0, r5
 125 0098 4FF40051 		mov	r1, #8192
 126 009c 0122     		movs	r2, #1
 127 009e FFF7FEFF 		bl	HAL_GPIO_WritePin
 128              	.LVL3:
 582:Src/main.c    **** 
 583:Src/main.c    ****   /*Configure GPIO pins : PC13 PC15 PC4 PC5 
 584:Src/main.c    ****                            PC8 PC9 */
 585:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_15|GPIO_PIN_4|GPIO_PIN_5 
 129              		.loc 1 585 0
 130 00a2 4AF23033 		movw	r3, #41776
 131 00a6 0593     		str	r3, [sp, #20]
 586:Src/main.c    ****                           |GPIO_PIN_8|GPIO_PIN_9;
 587:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 132              		.loc 1 587 0
 133 00a8 4FF00108 		mov	r8, #1
 134 00ac CDF81880 		str	r8, [sp, #24]
 588:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 135              		.loc 1 588 0
 136 00b0 0794     		str	r4, [sp, #28]
 589:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 137              		.loc 1 589 0
 138 00b2 0894     		str	r4, [sp, #32]
 590:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 139              		.loc 1 590 0
 140 00b4 3846     		mov	r0, r7
 141 00b6 05A9     		add	r1, sp, #20
 142 00b8 FFF7FEFF 		bl	HAL_GPIO_Init
 143              	.LVL4:
 591:Src/main.c    **** 
 592:Src/main.c    ****   /*Configure GPIO pins : PC14 PC10 PC11 PC12 */
 593:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_14|GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_12;
 144              		.loc 1 593 0
 145 00bc 4FF4B843 		mov	r3, #23552
 146 00c0 0593     		str	r3, [sp, #20]
 594:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 147              		.loc 1 594 0
 148 00c2 0326     		movs	r6, #3
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s 			page 14


 149 00c4 0696     		str	r6, [sp, #24]
 595:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 150              		.loc 1 595 0
 151 00c6 0794     		str	r4, [sp, #28]
 596:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 152              		.loc 1 596 0
 153 00c8 3846     		mov	r0, r7
 154 00ca 05A9     		add	r1, sp, #20
 155 00cc FFF7FEFF 		bl	HAL_GPIO_Init
 156              	.LVL5:
 597:Src/main.c    **** 
 598:Src/main.c    ****   /*Configure GPIO pins : PH0 PH1 */
 599:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 157              		.loc 1 599 0
 158 00d0 0596     		str	r6, [sp, #20]
 600:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 159              		.loc 1 600 0
 160 00d2 CDF81880 		str	r8, [sp, #24]
 601:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 161              		.loc 1 601 0
 162 00d6 0794     		str	r4, [sp, #28]
 602:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 163              		.loc 1 602 0
 164 00d8 0894     		str	r4, [sp, #32]
 603:Src/main.c    ****   HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 165              		.loc 1 603 0
 166 00da 4846     		mov	r0, r9
 167 00dc 05A9     		add	r1, sp, #20
 168 00de FFF7FEFF 		bl	HAL_GPIO_Init
 169              	.LVL6:
 604:Src/main.c    **** 
 605:Src/main.c    ****   /*Configure GPIO pins : PC0 PC1 PC2 PC3 */
 606:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3;
 170              		.loc 1 606 0
 171 00e2 0F23     		movs	r3, #15
 172 00e4 0593     		str	r3, [sp, #20]
 607:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 173              		.loc 1 607 0
 174 00e6 0694     		str	r4, [sp, #24]
 608:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 175              		.loc 1 608 0
 176 00e8 0794     		str	r4, [sp, #28]
 609:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 177              		.loc 1 609 0
 178 00ea 3846     		mov	r0, r7
 179 00ec 05A9     		add	r1, sp, #20
 180 00ee FFF7FEFF 		bl	HAL_GPIO_Init
 181              	.LVL7:
 610:Src/main.c    **** 
 611:Src/main.c    ****   /*Configure GPIO pin : PA6 */
 612:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_6;
 182              		.loc 1 612 0
 183 00f2 4023     		movs	r3, #64
 184 00f4 0593     		str	r3, [sp, #20]
 613:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 185              		.loc 1 613 0
 186 00f6 0694     		str	r4, [sp, #24]
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s 			page 15


 614:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 187              		.loc 1 614 0
 188 00f8 0794     		str	r4, [sp, #28]
 615:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 189              		.loc 1 615 0
 190 00fa 2846     		mov	r0, r5
 191 00fc 05A9     		add	r1, sp, #20
 192 00fe FFF7FEFF 		bl	HAL_GPIO_Init
 193              	.LVL8:
 616:Src/main.c    **** 
 617:Src/main.c    ****   /*Configure GPIO pin : PA7 */
 618:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_7;
 194              		.loc 1 618 0
 195 0102 8023     		movs	r3, #128
 196 0104 0593     		str	r3, [sp, #20]
 619:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 197              		.loc 1 619 0
 198 0106 CDF81880 		str	r8, [sp, #24]
 620:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 199              		.loc 1 620 0
 200 010a 0794     		str	r4, [sp, #28]
 621:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 201              		.loc 1 621 0
 202 010c 0894     		str	r4, [sp, #32]
 622:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 203              		.loc 1 622 0
 204 010e 2846     		mov	r0, r5
 205 0110 05A9     		add	r1, sp, #20
 206 0112 FFF7FEFF 		bl	HAL_GPIO_Init
 207              	.LVL9:
 623:Src/main.c    **** 
 624:Src/main.c    ****   /*Configure GPIO pins : PB0 PB1 PB2 PB10 
 625:Src/main.c    ****                            PB3 PB4 PB5 */
 626:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_10 
 208              		.loc 1 626 0
 209 0116 40F23F43 		movw	r3, #1087
 210 011a 0593     		str	r3, [sp, #20]
 627:Src/main.c    ****                           |GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_5;
 628:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 211              		.loc 1 628 0
 212 011c 0696     		str	r6, [sp, #24]
 629:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 213              		.loc 1 629 0
 214 011e 0794     		str	r4, [sp, #28]
 630:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 215              		.loc 1 630 0
 216 0120 A7F58067 		sub	r7, r7, #1024
 217 0124 3846     		mov	r0, r7
 218 0126 05A9     		add	r1, sp, #20
 219 0128 FFF7FEFF 		bl	HAL_GPIO_Init
 220              	.LVL10:
 631:Src/main.c    **** 
 632:Src/main.c    ****   /*Configure GPIO pins : PB12 PB13 PB14 PB15 */
 633:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
 221              		.loc 1 633 0
 222 012c 4FF47043 		mov	r3, #61440
 223 0130 0593     		str	r3, [sp, #20]
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s 			page 16


 634:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 224              		.loc 1 634 0
 225 0132 0694     		str	r4, [sp, #24]
 635:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 226              		.loc 1 635 0
 227 0134 0794     		str	r4, [sp, #28]
 636:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 228              		.loc 1 636 0
 229 0136 3846     		mov	r0, r7
 230 0138 05A9     		add	r1, sp, #20
 231 013a FFF7FEFF 		bl	HAL_GPIO_Init
 232              	.LVL11:
 637:Src/main.c    **** 
 638:Src/main.c    ****   /*Configure GPIO pin : PA12 */
 639:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_12;
 233              		.loc 1 639 0
 234 013e 4FF48053 		mov	r3, #4096
 235 0142 0593     		str	r3, [sp, #20]
 640:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 236              		.loc 1 640 0
 237 0144 194B     		ldr	r3, .L3+12
 238 0146 0693     		str	r3, [sp, #24]
 641:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 239              		.loc 1 641 0
 240 0148 0794     		str	r4, [sp, #28]
 642:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 241              		.loc 1 642 0
 242 014a 2846     		mov	r0, r5
 243 014c 05A9     		add	r1, sp, #20
 244 014e FFF7FEFF 		bl	HAL_GPIO_Init
 245              	.LVL12:
 643:Src/main.c    **** 
 644:Src/main.c    ****   /*Configure GPIO pin : Sensor_Trig_Pin */
 645:Src/main.c    ****   GPIO_InitStruct.Pin = Sensor_Trig_Pin;
 246              		.loc 1 645 0
 247 0152 4FF40053 		mov	r3, #8192
 248 0156 0593     		str	r3, [sp, #20]
 646:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 249              		.loc 1 646 0
 250 0158 1123     		movs	r3, #17
 251 015a 0693     		str	r3, [sp, #24]
 647:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 252              		.loc 1 647 0
 253 015c 0794     		str	r4, [sp, #28]
 648:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 254              		.loc 1 648 0
 255 015e 0894     		str	r4, [sp, #32]
 649:Src/main.c    ****   HAL_GPIO_Init(Sensor_Trig_GPIO_Port, &GPIO_InitStruct);
 256              		.loc 1 649 0
 257 0160 2846     		mov	r0, r5
 258 0162 05A9     		add	r1, sp, #20
 259 0164 FFF7FEFF 		bl	HAL_GPIO_Init
 260              	.LVL13:
 650:Src/main.c    **** 
 651:Src/main.c    ****   /*Configure GPIO pins : PA14 PA15 */
 652:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_14|GPIO_PIN_15;
 261              		.loc 1 652 0
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s 			page 17


 262 0168 4FF44043 		mov	r3, #49152
 263 016c 0593     		str	r3, [sp, #20]
 653:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 264              		.loc 1 653 0
 265 016e 0696     		str	r6, [sp, #24]
 654:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 266              		.loc 1 654 0
 267 0170 0794     		str	r4, [sp, #28]
 655:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 268              		.loc 1 655 0
 269 0172 2846     		mov	r0, r5
 270 0174 05A9     		add	r1, sp, #20
 271 0176 FFF7FEFF 		bl	HAL_GPIO_Init
 272              	.LVL14:
 656:Src/main.c    **** 
 657:Src/main.c    ****   /*Configure GPIO pin : PD2 */
 658:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_2;
 273              		.loc 1 658 0
 274 017a 0423     		movs	r3, #4
 275 017c 0593     		str	r3, [sp, #20]
 659:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 276              		.loc 1 659 0
 277 017e 0696     		str	r6, [sp, #24]
 660:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 278              		.loc 1 660 0
 279 0180 0794     		str	r4, [sp, #28]
 661:Src/main.c    ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 280              		.loc 1 661 0
 281 0182 0B48     		ldr	r0, .L3+16
 282 0184 05A9     		add	r1, sp, #20
 283 0186 FFF7FEFF 		bl	HAL_GPIO_Init
 284              	.LVL15:
 662:Src/main.c    **** 
 663:Src/main.c    ****   /* EXTI interrupt init*/
 664:Src/main.c    ****   HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 285              		.loc 1 664 0
 286 018a 2820     		movs	r0, #40
 287 018c 2146     		mov	r1, r4
 288 018e 2246     		mov	r2, r4
 289 0190 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 290              	.LVL16:
 665:Src/main.c    ****   HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 291              		.loc 1 665 0
 292 0194 2820     		movs	r0, #40
 293 0196 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 294              	.LVL17:
 666:Src/main.c    **** 
 667:Src/main.c    **** }
 295              		.loc 1 667 0
 296 019a 0BB0     		add	sp, sp, #44
 297              	.LCFI2:
 298              		.cfi_def_cfa_offset 28
 299              		@ sp needed
 300 019c BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 301              	.L4:
 302              		.align	2
 303              	.L3:
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s 			page 18


 304 01a0 00380240 		.word	1073887232
 305 01a4 00080240 		.word	1073874944
 306 01a8 00000240 		.word	1073872896
 307 01ac 00003110 		.word	271646720
 308 01b0 000C0240 		.word	1073875968
 309 01b4 001C0240 		.word	1073880064
 310              		.cfi_endproc
 311              	.LFE135:
 313              		.section	.text.MX_I2C1_Init,"ax",%progbits
 314              		.align	2
 315              		.thumb
 316              		.thumb_func
 318              	MX_I2C1_Init:
 319              	.LFB128:
 269:Src/main.c    **** 
 320              		.loc 1 269 0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 0
 323              		@ frame_needed = 0, uses_anonymous_args = 0
 324 0000 08B5     		push	{r3, lr}
 325              	.LCFI3:
 326              		.cfi_def_cfa_offset 8
 327              		.cfi_offset 3, -8
 328              		.cfi_offset 14, -4
 271:Src/main.c    ****   hi2c1.Init.ClockSpeed = 100000;
 329              		.loc 1 271 0
 330 0002 0948     		ldr	r0, .L7
 331 0004 094B     		ldr	r3, .L7+4
 332 0006 0360     		str	r3, [r0]
 272:Src/main.c    ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 333              		.loc 1 272 0
 334 0008 094B     		ldr	r3, .L7+8
 335 000a 4360     		str	r3, [r0, #4]
 273:Src/main.c    ****   hi2c1.Init.OwnAddress1 = 0;
 336              		.loc 1 273 0
 337 000c 0023     		movs	r3, #0
 338 000e 8360     		str	r3, [r0, #8]
 274:Src/main.c    ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 339              		.loc 1 274 0
 340 0010 C360     		str	r3, [r0, #12]
 275:Src/main.c    ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 341              		.loc 1 275 0
 342 0012 4FF48042 		mov	r2, #16384
 343 0016 0261     		str	r2, [r0, #16]
 276:Src/main.c    ****   hi2c1.Init.OwnAddress2 = 0;
 344              		.loc 1 276 0
 345 0018 4361     		str	r3, [r0, #20]
 277:Src/main.c    ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 346              		.loc 1 277 0
 347 001a 8361     		str	r3, [r0, #24]
 278:Src/main.c    ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 348              		.loc 1 278 0
 349 001c C361     		str	r3, [r0, #28]
 279:Src/main.c    ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 350              		.loc 1 279 0
 351 001e 0362     		str	r3, [r0, #32]
 280:Src/main.c    ****   {
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s 			page 19


 352              		.loc 1 280 0
 353 0020 FFF7FEFF 		bl	HAL_I2C_Init
 354              	.LVL18:
 355 0024 08BD     		pop	{r3, pc}
 356              	.L8:
 357 0026 00BF     		.align	2
 358              	.L7:
 359 0028 00000000 		.word	hi2c1
 360 002c 00540040 		.word	1073763328
 361 0030 A0860100 		.word	100000
 362              		.cfi_endproc
 363              	.LFE128:
 365              		.section	.text.MX_TIM3_Init,"ax",%progbits
 366              		.align	2
 367              		.thumb
 368              		.thumb_func
 370              	MX_TIM3_Init:
 371              	.LFB131:
 434:Src/main.c    **** 
 372              		.loc 1 434 0
 373              		.cfi_startproc
 374              		@ args = 0, pretend = 0, frame = 24
 375              		@ frame_needed = 0, uses_anonymous_args = 0
 376 0000 30B5     		push	{r4, r5, lr}
 377              	.LCFI4:
 378              		.cfi_def_cfa_offset 12
 379              		.cfi_offset 4, -12
 380              		.cfi_offset 5, -8
 381              		.cfi_offset 14, -4
 382 0002 87B0     		sub	sp, sp, #28
 383              	.LCFI5:
 384              		.cfi_def_cfa_offset 40
 439:Src/main.c    ****   htim3.Init.Prescaler = 0;
 385              		.loc 1 439 0
 386 0004 0D4C     		ldr	r4, .L11
 387 0006 0E4B     		ldr	r3, .L11+4
 388 0008 2360     		str	r3, [r4]
 440:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 389              		.loc 1 440 0
 390 000a 0025     		movs	r5, #0
 391 000c 6560     		str	r5, [r4, #4]
 441:Src/main.c    ****   htim3.Init.Period = 0;
 392              		.loc 1 441 0
 393 000e A560     		str	r5, [r4, #8]
 442:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 394              		.loc 1 442 0
 395 0010 E560     		str	r5, [r4, #12]
 443:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 396              		.loc 1 443 0
 397 0012 2561     		str	r5, [r4, #16]
 444:Src/main.c    ****   {
 398              		.loc 1 444 0
 399 0014 2046     		mov	r0, r4
 400 0016 FFF7FEFF 		bl	HAL_TIM_Base_Init
 401              	.LVL19:
 449:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 402              		.loc 1 449 0
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s 			page 20


 403 001a 06A9     		add	r1, sp, #24
 404 001c 4FF48053 		mov	r3, #4096
 405 0020 41F8103D 		str	r3, [r1, #-16]!
 450:Src/main.c    ****   {
 406              		.loc 1 450 0
 407 0024 2046     		mov	r0, r4
 408 0026 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 409              	.LVL20:
 455:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 410              		.loc 1 455 0
 411 002a 0095     		str	r5, [sp]
 456:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 412              		.loc 1 456 0
 413 002c 0195     		str	r5, [sp, #4]
 457:Src/main.c    ****   {
 414              		.loc 1 457 0
 415 002e 2046     		mov	r0, r4
 416 0030 6946     		mov	r1, sp
 417 0032 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 418              	.LVL21:
 462:Src/main.c    **** 
 419              		.loc 1 462 0
 420 0036 07B0     		add	sp, sp, #28
 421              	.LCFI6:
 422              		.cfi_def_cfa_offset 12
 423              		@ sp needed
 424 0038 30BD     		pop	{r4, r5, pc}
 425              	.L12:
 426 003a 00BF     		.align	2
 427              	.L11:
 428 003c 00000000 		.word	htim3
 429 0040 00040040 		.word	1073742848
 430              		.cfi_endproc
 431              	.LFE131:
 433              		.section	.text.MX_TIM1_Init,"ax",%progbits
 434              		.align	2
 435              		.thumb
 436              		.thumb_func
 438              	MX_TIM1_Init:
 439              	.LFB129:
 289:Src/main.c    **** 
 440              		.loc 1 289 0
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 80
 443              		@ frame_needed = 0, uses_anonymous_args = 0
 444 0000 30B5     		push	{r4, r5, lr}
 445              	.LCFI7:
 446              		.cfi_def_cfa_offset 12
 447              		.cfi_offset 4, -12
 448              		.cfi_offset 5, -8
 449              		.cfi_offset 14, -4
 450 0002 95B0     		sub	sp, sp, #84
 451              	.LCFI8:
 452              		.cfi_def_cfa_offset 96
 296:Src/main.c    ****   htim1.Init.Prescaler = 0;
 453              		.loc 1 296 0
 454 0004 254D     		ldr	r5, .L15
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s 			page 21


 455 0006 264B     		ldr	r3, .L15+4
 456 0008 2B60     		str	r3, [r5]
 297:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 457              		.loc 1 297 0
 458 000a 0024     		movs	r4, #0
 459 000c 6C60     		str	r4, [r5, #4]
 298:Src/main.c    ****   htim1.Init.Period = 0;
 460              		.loc 1 298 0
 461 000e AC60     		str	r4, [r5, #8]
 299:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 462              		.loc 1 299 0
 463 0010 EC60     		str	r4, [r5, #12]
 300:Src/main.c    ****   htim1.Init.RepetitionCounter = 0;
 464              		.loc 1 300 0
 465 0012 2C61     		str	r4, [r5, #16]
 301:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 466              		.loc 1 301 0
 467 0014 6C61     		str	r4, [r5, #20]
 302:Src/main.c    ****   {
 468              		.loc 1 302 0
 469 0016 2846     		mov	r0, r5
 470 0018 FFF7FEFF 		bl	HAL_TIM_Base_Init
 471              	.LVL22:
 307:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 472              		.loc 1 307 0
 473 001c 14A9     		add	r1, sp, #80
 474 001e 4FF48053 		mov	r3, #4096
 475 0022 41F8103D 		str	r3, [r1, #-16]!
 308:Src/main.c    ****   {
 476              		.loc 1 308 0
 477 0026 2846     		mov	r0, r5
 478 0028 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 479              	.LVL23:
 313:Src/main.c    ****   {
 480              		.loc 1 313 0
 481 002c 2846     		mov	r0, r5
 482 002e FFF7FEFF 		bl	HAL_TIM_PWM_Init
 483              	.LVL24:
 318:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 484              		.loc 1 318 0
 485 0032 0E94     		str	r4, [sp, #56]
 319:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 486              		.loc 1 319 0
 487 0034 0F94     		str	r4, [sp, #60]
 320:Src/main.c    ****   {
 488              		.loc 1 320 0
 489 0036 2846     		mov	r0, r5
 490 0038 0EA9     		add	r1, sp, #56
 491 003a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 492              	.LVL25:
 325:Src/main.c    ****   sConfigOC.Pulse = 0;
 493              		.loc 1 325 0
 494 003e 6023     		movs	r3, #96
 495 0040 0793     		str	r3, [sp, #28]
 326:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 496              		.loc 1 326 0
 497 0042 0894     		str	r4, [sp, #32]
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s 			page 22


 327:Src/main.c    ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 498              		.loc 1 327 0
 499 0044 0994     		str	r4, [sp, #36]
 328:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 500              		.loc 1 328 0
 501 0046 0A94     		str	r4, [sp, #40]
 329:Src/main.c    ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 502              		.loc 1 329 0
 503 0048 0B94     		str	r4, [sp, #44]
 330:Src/main.c    ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 504              		.loc 1 330 0
 505 004a 0C94     		str	r4, [sp, #48]
 331:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 506              		.loc 1 331 0
 507 004c 0D94     		str	r4, [sp, #52]
 332:Src/main.c    ****   {
 508              		.loc 1 332 0
 509 004e 2846     		mov	r0, r5
 510 0050 07A9     		add	r1, sp, #28
 511 0052 2246     		mov	r2, r4
 512 0054 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 513              	.LVL26:
 337:Src/main.c    ****   {
 514              		.loc 1 337 0
 515 0058 2846     		mov	r0, r5
 516 005a 07A9     		add	r1, sp, #28
 517 005c 0422     		movs	r2, #4
 518 005e FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 519              	.LVL27:
 342:Src/main.c    ****   {
 520              		.loc 1 342 0
 521 0062 2846     		mov	r0, r5
 522 0064 07A9     		add	r1, sp, #28
 523 0066 0822     		movs	r2, #8
 524 0068 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 525              	.LVL28:
 347:Src/main.c    ****   {
 526              		.loc 1 347 0
 527 006c 2846     		mov	r0, r5
 528 006e 07A9     		add	r1, sp, #28
 529 0070 0C22     		movs	r2, #12
 530 0072 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 531              	.LVL29:
 352:Src/main.c    ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 532              		.loc 1 352 0
 533 0076 0094     		str	r4, [sp]
 353:Src/main.c    ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 534              		.loc 1 353 0
 535 0078 0194     		str	r4, [sp, #4]
 354:Src/main.c    ****   sBreakDeadTimeConfig.DeadTime = 0;
 536              		.loc 1 354 0
 537 007a 0294     		str	r4, [sp, #8]
 355:Src/main.c    ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 538              		.loc 1 355 0
 539 007c 0394     		str	r4, [sp, #12]
 356:Src/main.c    ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 540              		.loc 1 356 0
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s 			page 23


 541 007e 0494     		str	r4, [sp, #16]
 357:Src/main.c    ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 542              		.loc 1 357 0
 543 0080 4FF40053 		mov	r3, #8192
 544 0084 0593     		str	r3, [sp, #20]
 358:Src/main.c    ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 545              		.loc 1 358 0
 546 0086 0694     		str	r4, [sp, #24]
 359:Src/main.c    ****   {
 547              		.loc 1 359 0
 548 0088 2846     		mov	r0, r5
 549 008a 6946     		mov	r1, sp
 550 008c FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 551              	.LVL30:
 364:Src/main.c    **** 
 552              		.loc 1 364 0
 553 0090 2846     		mov	r0, r5
 554 0092 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 555              	.LVL31:
 366:Src/main.c    **** 
 556              		.loc 1 366 0
 557 0096 15B0     		add	sp, sp, #84
 558              	.LCFI9:
 559              		.cfi_def_cfa_offset 12
 560              		@ sp needed
 561 0098 30BD     		pop	{r4, r5, pc}
 562              	.L16:
 563 009a 00BF     		.align	2
 564              	.L15:
 565 009c 00000000 		.word	htim1
 566 00a0 00000140 		.word	1073807360
 567              		.cfi_endproc
 568              	.LFE129:
 570              		.section	.text.MX_TIM10_Init,"ax",%progbits
 571              		.align	2
 572              		.thumb
 573              		.thumb_func
 575              	MX_TIM10_Init:
 576              	.LFB132:
 466:Src/main.c    **** 
 577              		.loc 1 466 0
 578              		.cfi_startproc
 579              		@ args = 0, pretend = 0, frame = 32
 580              		@ frame_needed = 0, uses_anonymous_args = 0
 581 0000 30B5     		push	{r4, r5, lr}
 582              	.LCFI10:
 583              		.cfi_def_cfa_offset 12
 584              		.cfi_offset 4, -12
 585              		.cfi_offset 5, -8
 586              		.cfi_offset 14, -4
 587 0002 89B0     		sub	sp, sp, #36
 588              	.LCFI11:
 589              		.cfi_def_cfa_offset 48
 470:Src/main.c    ****   htim10.Init.Prescaler = 0;
 590              		.loc 1 470 0
 591 0004 0E4C     		ldr	r4, .L19
 592 0006 0F4B     		ldr	r3, .L19+4
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s 			page 24


 593 0008 2360     		str	r3, [r4]
 471:Src/main.c    ****   htim10.Init.CounterMode = TIM_COUNTERMODE_UP;
 594              		.loc 1 471 0
 595 000a 0025     		movs	r5, #0
 596 000c 6560     		str	r5, [r4, #4]
 472:Src/main.c    ****   htim10.Init.Period = 0;
 597              		.loc 1 472 0
 598 000e A560     		str	r5, [r4, #8]
 473:Src/main.c    ****   htim10.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 599              		.loc 1 473 0
 600 0010 E560     		str	r5, [r4, #12]
 474:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim10) != HAL_OK)
 601              		.loc 1 474 0
 602 0012 2561     		str	r5, [r4, #16]
 475:Src/main.c    ****   {
 603              		.loc 1 475 0
 604 0014 2046     		mov	r0, r4
 605 0016 FFF7FEFF 		bl	HAL_TIM_Base_Init
 606              	.LVL32:
 480:Src/main.c    ****   {
 607              		.loc 1 480 0
 608 001a 2046     		mov	r0, r4
 609 001c FFF7FEFF 		bl	HAL_TIM_PWM_Init
 610              	.LVL33:
 485:Src/main.c    ****   sConfigOC.Pulse = 0;
 611              		.loc 1 485 0
 612 0020 6023     		movs	r3, #96
 613 0022 0193     		str	r3, [sp, #4]
 486:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 614              		.loc 1 486 0
 615 0024 0295     		str	r5, [sp, #8]
 487:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 616              		.loc 1 487 0
 617 0026 0395     		str	r5, [sp, #12]
 488:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim10, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 618              		.loc 1 488 0
 619 0028 0595     		str	r5, [sp, #20]
 489:Src/main.c    ****   {
 620              		.loc 1 489 0
 621 002a 2046     		mov	r0, r4
 622 002c 01A9     		add	r1, sp, #4
 623 002e 2A46     		mov	r2, r5
 624 0030 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 625              	.LVL34:
 494:Src/main.c    **** 
 626              		.loc 1 494 0
 627 0034 2046     		mov	r0, r4
 628 0036 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 629              	.LVL35:
 496:Src/main.c    **** 
 630              		.loc 1 496 0
 631 003a 09B0     		add	sp, sp, #36
 632              	.LCFI12:
 633              		.cfi_def_cfa_offset 12
 634              		@ sp needed
 635 003c 30BD     		pop	{r4, r5, pc}
 636              	.L20:
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s 			page 25


 637 003e 00BF     		.align	2
 638              	.L19:
 639 0040 00000000 		.word	htim10
 640 0044 00440140 		.word	1073824768
 641              		.cfi_endproc
 642              	.LFE132:
 644              		.section	.text.MX_TIM11_Init,"ax",%progbits
 645              		.align	2
 646              		.thumb
 647              		.thumb_func
 649              	MX_TIM11_Init:
 650              	.LFB133:
 500:Src/main.c    **** 
 651              		.loc 1 500 0
 652              		.cfi_startproc
 653              		@ args = 0, pretend = 0, frame = 32
 654              		@ frame_needed = 0, uses_anonymous_args = 0
 655 0000 30B5     		push	{r4, r5, lr}
 656              	.LCFI13:
 657              		.cfi_def_cfa_offset 12
 658              		.cfi_offset 4, -12
 659              		.cfi_offset 5, -8
 660              		.cfi_offset 14, -4
 661 0002 89B0     		sub	sp, sp, #36
 662              	.LCFI14:
 663              		.cfi_def_cfa_offset 48
 504:Src/main.c    ****   htim11.Init.Prescaler = 0;
 664              		.loc 1 504 0
 665 0004 0E4C     		ldr	r4, .L23
 666 0006 0F4B     		ldr	r3, .L23+4
 667 0008 2360     		str	r3, [r4]
 505:Src/main.c    ****   htim11.Init.CounterMode = TIM_COUNTERMODE_UP;
 668              		.loc 1 505 0
 669 000a 0025     		movs	r5, #0
 670 000c 6560     		str	r5, [r4, #4]
 506:Src/main.c    ****   htim11.Init.Period = 0;
 671              		.loc 1 506 0
 672 000e A560     		str	r5, [r4, #8]
 507:Src/main.c    ****   htim11.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 673              		.loc 1 507 0
 674 0010 E560     		str	r5, [r4, #12]
 508:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim11) != HAL_OK)
 675              		.loc 1 508 0
 676 0012 2561     		str	r5, [r4, #16]
 509:Src/main.c    ****   {
 677              		.loc 1 509 0
 678 0014 2046     		mov	r0, r4
 679 0016 FFF7FEFF 		bl	HAL_TIM_Base_Init
 680              	.LVL36:
 514:Src/main.c    ****   {
 681              		.loc 1 514 0
 682 001a 2046     		mov	r0, r4
 683 001c FFF7FEFF 		bl	HAL_TIM_PWM_Init
 684              	.LVL37:
 519:Src/main.c    ****   sConfigOC.Pulse = 0;
 685              		.loc 1 519 0
 686 0020 6023     		movs	r3, #96
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s 			page 26


 687 0022 0193     		str	r3, [sp, #4]
 520:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 688              		.loc 1 520 0
 689 0024 0295     		str	r5, [sp, #8]
 521:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 690              		.loc 1 521 0
 691 0026 0395     		str	r5, [sp, #12]
 522:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim11, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 692              		.loc 1 522 0
 693 0028 0595     		str	r5, [sp, #20]
 523:Src/main.c    ****   {
 694              		.loc 1 523 0
 695 002a 2046     		mov	r0, r4
 696 002c 01A9     		add	r1, sp, #4
 697 002e 2A46     		mov	r2, r5
 698 0030 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 699              	.LVL38:
 528:Src/main.c    **** 
 700              		.loc 1 528 0
 701 0034 2046     		mov	r0, r4
 702 0036 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 703              	.LVL39:
 530:Src/main.c    **** 
 704              		.loc 1 530 0
 705 003a 09B0     		add	sp, sp, #36
 706              	.LCFI15:
 707              		.cfi_def_cfa_offset 12
 708              		@ sp needed
 709 003c 30BD     		pop	{r4, r5, pc}
 710              	.L24:
 711 003e 00BF     		.align	2
 712              	.L23:
 713 0040 00000000 		.word	htim11
 714 0044 00480140 		.word	1073825792
 715              		.cfi_endproc
 716              	.LFE133:
 718              		.section	.text.MX_TIM2_Init,"ax",%progbits
 719              		.align	2
 720              		.thumb
 721              		.thumb_func
 723              	MX_TIM2_Init:
 724              	.LFB130:
 370:Src/main.c    **** 
 725              		.loc 1 370 0
 726              		.cfi_startproc
 727              		@ args = 0, pretend = 0, frame = 56
 728              		@ frame_needed = 0, uses_anonymous_args = 0
 729 0000 30B5     		push	{r4, r5, lr}
 730              	.LCFI16:
 731              		.cfi_def_cfa_offset 12
 732              		.cfi_offset 4, -12
 733              		.cfi_offset 5, -8
 734              		.cfi_offset 14, -4
 735 0002 8FB0     		sub	sp, sp, #60
 736              	.LCFI17:
 737              		.cfi_def_cfa_offset 72
 376:Src/main.c    ****   htim2.Init.Prescaler = 2;
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s 			page 27


 738              		.loc 1 376 0
 739 0004 1D4C     		ldr	r4, .L27
 740 0006 4FF08043 		mov	r3, #1073741824
 741 000a 2360     		str	r3, [r4]
 377:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 742              		.loc 1 377 0
 743 000c 0223     		movs	r3, #2
 744 000e 6360     		str	r3, [r4, #4]
 378:Src/main.c    ****   htim2.Init.Period = 100000;
 745              		.loc 1 378 0
 746 0010 0025     		movs	r5, #0
 747 0012 A560     		str	r5, [r4, #8]
 379:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 748              		.loc 1 379 0
 749 0014 1A4B     		ldr	r3, .L27+4
 750 0016 E360     		str	r3, [r4, #12]
 380:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 751              		.loc 1 380 0
 752 0018 2561     		str	r5, [r4, #16]
 381:Src/main.c    ****   {
 753              		.loc 1 381 0
 754 001a 2046     		mov	r0, r4
 755 001c FFF7FEFF 		bl	HAL_TIM_Base_Init
 756              	.LVL40:
 386:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 757              		.loc 1 386 0
 758 0020 0EA9     		add	r1, sp, #56
 759 0022 4FF48053 		mov	r3, #4096
 760 0026 41F8103D 		str	r3, [r1, #-16]!
 387:Src/main.c    ****   {
 761              		.loc 1 387 0
 762 002a 2046     		mov	r0, r4
 763 002c FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 764              	.LVL41:
 392:Src/main.c    ****   {
 765              		.loc 1 392 0
 766 0030 2046     		mov	r0, r4
 767 0032 FFF7FEFF 		bl	HAL_TIM_OC_Init
 768              	.LVL42:
 397:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 769              		.loc 1 397 0
 770 0036 0895     		str	r5, [sp, #32]
 398:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 771              		.loc 1 398 0
 772 0038 0995     		str	r5, [sp, #36]
 399:Src/main.c    ****   {
 773              		.loc 1 399 0
 774 003a 2046     		mov	r0, r4
 775 003c 08A9     		add	r1, sp, #32
 776 003e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 777              	.LVL43:
 404:Src/main.c    ****   sConfigOC.Pulse = 0;
 778              		.loc 1 404 0
 779 0042 0195     		str	r5, [sp, #4]
 405:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 780              		.loc 1 405 0
 781 0044 0295     		str	r5, [sp, #8]
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s 			page 28


 406:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 782              		.loc 1 406 0
 783 0046 0395     		str	r5, [sp, #12]
 407:Src/main.c    ****   if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 784              		.loc 1 407 0
 785 0048 0595     		str	r5, [sp, #20]
 408:Src/main.c    ****   {
 786              		.loc 1 408 0
 787 004a 2046     		mov	r0, r4
 788 004c 01A9     		add	r1, sp, #4
 789 004e 2A46     		mov	r2, r5
 790 0050 FFF7FEFF 		bl	HAL_TIM_OC_ConfigChannel
 791              	.LVL44:
 413:Src/main.c    ****   {
 792              		.loc 1 413 0
 793 0054 2046     		mov	r0, r4
 794 0056 01A9     		add	r1, sp, #4
 795 0058 0422     		movs	r2, #4
 796 005a FFF7FEFF 		bl	HAL_TIM_OC_ConfigChannel
 797              	.LVL45:
 418:Src/main.c    ****   {
 798              		.loc 1 418 0
 799 005e 2046     		mov	r0, r4
 800 0060 01A9     		add	r1, sp, #4
 801 0062 0822     		movs	r2, #8
 802 0064 FFF7FEFF 		bl	HAL_TIM_OC_ConfigChannel
 803              	.LVL46:
 423:Src/main.c    ****   {
 804              		.loc 1 423 0
 805 0068 2046     		mov	r0, r4
 806 006a 01A9     		add	r1, sp, #4
 807 006c 0C22     		movs	r2, #12
 808 006e FFF7FEFF 		bl	HAL_TIM_OC_ConfigChannel
 809              	.LVL47:
 428:Src/main.c    **** 
 810              		.loc 1 428 0
 811 0072 2046     		mov	r0, r4
 812 0074 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 813              	.LVL48:
 430:Src/main.c    **** 
 814              		.loc 1 430 0
 815 0078 0FB0     		add	sp, sp, #60
 816              	.LCFI18:
 817              		.cfi_def_cfa_offset 12
 818              		@ sp needed
 819 007a 30BD     		pop	{r4, r5, pc}
 820              	.L28:
 821              		.align	2
 822              	.L27:
 823 007c 00000000 		.word	htim2
 824 0080 A0860100 		.word	100000
 825              		.cfi_endproc
 826              	.LFE130:
 828              		.section	.text.MX_USART6_UART_Init,"ax",%progbits
 829              		.align	2
 830              		.thumb
 831              		.thumb_func
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s 			page 29


 833              	MX_USART6_UART_Init:
 834              	.LFB134:
 534:Src/main.c    **** 
 835              		.loc 1 534 0
 836              		.cfi_startproc
 837              		@ args = 0, pretend = 0, frame = 0
 838              		@ frame_needed = 0, uses_anonymous_args = 0
 839 0000 08B5     		push	{r3, lr}
 840              	.LCFI19:
 841              		.cfi_def_cfa_offset 8
 842              		.cfi_offset 3, -8
 843              		.cfi_offset 14, -4
 536:Src/main.c    ****   huart6.Init.BaudRate = 115200;
 844              		.loc 1 536 0
 845 0002 0848     		ldr	r0, .L31
 846 0004 084B     		ldr	r3, .L31+4
 847 0006 0360     		str	r3, [r0]
 537:Src/main.c    ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
 848              		.loc 1 537 0
 849 0008 4FF4E133 		mov	r3, #115200
 850 000c 4360     		str	r3, [r0, #4]
 538:Src/main.c    ****   huart6.Init.StopBits = UART_STOPBITS_1;
 851              		.loc 1 538 0
 852 000e 0023     		movs	r3, #0
 853 0010 8360     		str	r3, [r0, #8]
 539:Src/main.c    ****   huart6.Init.Parity = UART_PARITY_NONE;
 854              		.loc 1 539 0
 855 0012 C360     		str	r3, [r0, #12]
 540:Src/main.c    ****   huart6.Init.Mode = UART_MODE_TX_RX;
 856              		.loc 1 540 0
 857 0014 0361     		str	r3, [r0, #16]
 541:Src/main.c    ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 858              		.loc 1 541 0
 859 0016 0C22     		movs	r2, #12
 860 0018 4261     		str	r2, [r0, #20]
 542:Src/main.c    ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 861              		.loc 1 542 0
 862 001a 8361     		str	r3, [r0, #24]
 543:Src/main.c    ****   if (HAL_UART_Init(&huart6) != HAL_OK)
 863              		.loc 1 543 0
 864 001c C361     		str	r3, [r0, #28]
 544:Src/main.c    ****   {
 865              		.loc 1 544 0
 866 001e FFF7FEFF 		bl	HAL_UART_Init
 867              	.LVL49:
 868 0022 08BD     		pop	{r3, pc}
 869              	.L32:
 870              		.align	2
 871              	.L31:
 872 0024 00000000 		.word	huart6
 873 0028 00140140 		.word	1073812480
 874              		.cfi_endproc
 875              	.LFE134:
 877              		.section	.text.MX_ADC1_Init,"ax",%progbits
 878              		.align	2
 879              		.thumb
 880              		.thumb_func
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s 			page 30


 882              	MX_ADC1_Init:
 883              	.LFB127:
 232:Src/main.c    **** 
 884              		.loc 1 232 0
 885              		.cfi_startproc
 886              		@ args = 0, pretend = 0, frame = 16
 887              		@ frame_needed = 0, uses_anonymous_args = 0
 888 0000 70B5     		push	{r4, r5, r6, lr}
 889              	.LCFI20:
 890              		.cfi_def_cfa_offset 16
 891              		.cfi_offset 4, -16
 892              		.cfi_offset 5, -12
 893              		.cfi_offset 6, -8
 894              		.cfi_offset 14, -4
 895 0002 84B0     		sub	sp, sp, #16
 896              	.LCFI21:
 897              		.cfi_def_cfa_offset 32
 238:Src/main.c    ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 898              		.loc 1 238 0
 899 0004 0F4C     		ldr	r4, .L35
 900 0006 104B     		ldr	r3, .L35+4
 901 0008 2360     		str	r3, [r4]
 239:Src/main.c    ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 902              		.loc 1 239 0
 903 000a 4FF48033 		mov	r3, #65536
 904 000e 6360     		str	r3, [r4, #4]
 240:Src/main.c    ****   hadc1.Init.ScanConvMode = DISABLE;
 905              		.loc 1 240 0
 906 0010 0025     		movs	r5, #0
 907 0012 A560     		str	r5, [r4, #8]
 241:Src/main.c    ****   hadc1.Init.ContinuousConvMode = ENABLE;
 908              		.loc 1 241 0
 909 0014 2561     		str	r5, [r4, #16]
 242:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 910              		.loc 1 242 0
 911 0016 0126     		movs	r6, #1
 912 0018 A661     		str	r6, [r4, #24]
 243:Src/main.c    ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 913              		.loc 1 243 0
 914 001a 2562     		str	r5, [r4, #32]
 244:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 915              		.loc 1 244 0
 916 001c E562     		str	r5, [r4, #44]
 245:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 917              		.loc 1 245 0
 918 001e 0B4B     		ldr	r3, .L35+8
 919 0020 A362     		str	r3, [r4, #40]
 246:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 920              		.loc 1 246 0
 921 0022 E560     		str	r5, [r4, #12]
 247:Src/main.c    ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 922              		.loc 1 247 0
 923 0024 E661     		str	r6, [r4, #28]
 248:Src/main.c    ****   hadc1.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 924              		.loc 1 248 0
 925 0026 2563     		str	r5, [r4, #48]
 249:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s 			page 31


 926              		.loc 1 249 0
 927 0028 6561     		str	r5, [r4, #20]
 250:Src/main.c    ****   {
 928              		.loc 1 250 0
 929 002a 2046     		mov	r0, r4
 930 002c FFF7FEFF 		bl	HAL_ADC_Init
 931              	.LVL50:
 257:Src/main.c    ****   sConfig.Rank = 1;
 932              		.loc 1 257 0
 933 0030 0423     		movs	r3, #4
 934 0032 0093     		str	r3, [sp]
 258:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 935              		.loc 1 258 0
 936 0034 0196     		str	r6, [sp, #4]
 259:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 937              		.loc 1 259 0
 938 0036 0295     		str	r5, [sp, #8]
 260:Src/main.c    ****   {
 939              		.loc 1 260 0
 940 0038 2046     		mov	r0, r4
 941 003a 6946     		mov	r1, sp
 942 003c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 943              	.LVL51:
 265:Src/main.c    **** 
 944              		.loc 1 265 0
 945 0040 04B0     		add	sp, sp, #16
 946              	.LCFI22:
 947              		.cfi_def_cfa_offset 16
 948              		@ sp needed
 949 0042 70BD     		pop	{r4, r5, r6, pc}
 950              	.L36:
 951              		.align	2
 952              	.L35:
 953 0044 00000000 		.word	hadc1
 954 0048 00200140 		.word	1073815552
 955 004c 0100000F 		.word	251658241
 956              		.cfi_endproc
 957              	.LFE127:
 959              		.section	.text.getUs,"ax",%progbits
 960              		.align	2
 961              		.global	getUs
 962              		.thumb
 963              		.thumb_func
 965              	getUs:
 966              	.LFB123:
  86:Src/main.c    ****   uint32_t usTicks = HAL_RCC_GetSysClockFreq() / 1000000;
 967              		.loc 1 86 0
 968              		.cfi_startproc
 969              		@ args = 0, pretend = 0, frame = 0
 970              		@ frame_needed = 0, uses_anonymous_args = 0
 971 0000 70B5     		push	{r4, r5, r6, lr}
 972              	.LCFI23:
 973              		.cfi_def_cfa_offset 16
 974              		.cfi_offset 4, -16
 975              		.cfi_offset 5, -12
 976              		.cfi_offset 6, -8
 977              		.cfi_offset 14, -4
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s 			page 32


  87:Src/main.c    ****   register uint32_t ms, cycle_cnt;
 978              		.loc 1 87 0
 979 0002 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 980              	.LVL52:
 981 0006 0B4E     		ldr	r6, .L40
 982 0008 A6FB0036 		umull	r3, r6, r6, r0
 983 000c B60C     		lsrs	r6, r6, #18
 984              	.LVL53:
 985              	.L38:
  91:Src/main.c    ****     cycle_cnt = SysTick->VAL;
 986              		.loc 1 91 0 discriminator 1
 987 000e FFF7FEFF 		bl	HAL_GetTick
 988              	.LVL54:
 989 0012 0446     		mov	r4, r0
 990              	.LVL55:
  92:Src/main.c    ****   } while (ms != HAL_GetTick());
 991              		.loc 1 92 0 discriminator 1
 992 0014 084B     		ldr	r3, .L40+4
 993 0016 9D68     		ldr	r5, [r3, #8]
 994              	.LVL56:
  93:Src/main.c    ****   return (ms * 1000) + (usTicks * 1000 - cycle_cnt) / usTicks;
 995              		.loc 1 93 0 discriminator 1
 996 0018 FFF7FEFF 		bl	HAL_GetTick
 997              	.LVL57:
 998 001c A042     		cmp	r0, r4
 999 001e F6D1     		bne	.L38
  94:Src/main.c    **** }
 1000              		.loc 1 94 0
 1001 0020 4FF47A70 		mov	r0, #1000
 1002 0024 00FB06F3 		mul	r3, r0, r6
 1003 0028 5D1B     		subs	r5, r3, r5
 1004              	.LVL58:
 1005 002a B5FBF6F6 		udiv	r6, r5, r6
 1006              	.LVL59:
  95:Src/main.c    **** 
 1007              		.loc 1 95 0
 1008 002e 00FB0460 		mla	r0, r0, r4, r6
 1009 0032 70BD     		pop	{r4, r5, r6, pc}
 1010              	.LVL60:
 1011              	.L41:
 1012              		.align	2
 1013              	.L40:
 1014 0034 83DE1B43 		.word	1125899907
 1015 0038 10E000E0 		.word	-536813552
 1016              		.cfi_endproc
 1017              	.LFE123:
 1019              		.section	.text.delayUs,"ax",%progbits
 1020              		.align	2
 1021              		.global	delayUs
 1022              		.thumb
 1023              		.thumb_func
 1025              	delayUs:
 1026              	.LFB124:
  98:Src/main.c    ****   uint32_t start = getUs();
 1027              		.loc 1 98 0
 1028              		.cfi_startproc
 1029              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s 			page 33


 1030              		@ frame_needed = 0, uses_anonymous_args = 0
 1031              	.LVL61:
 1032 0000 38B5     		push	{r3, r4, r5, lr}
 1033              	.LCFI24:
 1034              		.cfi_def_cfa_offset 16
 1035              		.cfi_offset 3, -16
 1036              		.cfi_offset 4, -12
 1037              		.cfi_offset 5, -8
 1038              		.cfi_offset 14, -4
 1039 0002 0546     		mov	r5, r0
  99:Src/main.c    ****   while (getUs() - start < (uint32_t)micros)
 1040              		.loc 1 99 0
 1041 0004 FFF7FEFF 		bl	getUs
 1042              	.LVL62:
 1043 0008 0446     		mov	r4, r0
 1044              	.LVL63:
 100:Src/main.c    ****   {
 1045              		.loc 1 100 0
 1046 000a 00E0     		b	.L43
 1047              	.LVL64:
 1048              	.L44:
 102:Src/main.c    ****   }
 1049              		.loc 1 102 0
 1050              	@ 102 "Src/main.c" 1
 1051 000c 00BF     		nop
 1052              	@ 0 "" 2
 1053              		.thumb
 1054              	.L43:
 100:Src/main.c    ****   {
 1055              		.loc 1 100 0
 1056 000e FFF7FEFF 		bl	getUs
 1057              	.LVL65:
 1058 0012 001B     		subs	r0, r0, r4
 1059 0014 A842     		cmp	r0, r5
 1060 0016 F9D3     		bcc	.L44
 104:Src/main.c    **** /* USER CODE END 0 */
 1061              		.loc 1 104 0
 1062 0018 38BD     		pop	{r3, r4, r5, pc}
 1063              		.cfi_endproc
 1064              	.LFE124:
 1066 001a 00BF     		.section	.text.SystemClock_Config,"ax",%progbits
 1067              		.align	2
 1068              		.global	SystemClock_Config
 1069              		.thumb
 1070              		.thumb_func
 1072              	SystemClock_Config:
 1073              	.LFB126:
 177:Src/main.c    **** 
 1074              		.loc 1 177 0
 1075              		.cfi_startproc
 1076              		@ args = 0, pretend = 0, frame = 80
 1077              		@ frame_needed = 0, uses_anonymous_args = 0
 1078 0000 70B5     		push	{r4, r5, r6, lr}
 1079              	.LCFI25:
 1080              		.cfi_def_cfa_offset 16
 1081              		.cfi_offset 4, -16
 1082              		.cfi_offset 5, -12
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s 			page 34


 1083              		.cfi_offset 6, -8
 1084              		.cfi_offset 14, -4
 1085 0002 94B0     		sub	sp, sp, #80
 1086              	.LCFI26:
 1087              		.cfi_def_cfa_offset 96
 1088              	.LBB7:
 184:Src/main.c    **** 
 1089              		.loc 1 184 0
 1090 0004 0024     		movs	r4, #0
 1091 0006 0194     		str	r4, [sp, #4]
 1092 0008 244B     		ldr	r3, .L48
 1093 000a 1A6C     		ldr	r2, [r3, #64]
 1094 000c 42F08052 		orr	r2, r2, #268435456
 1095 0010 1A64     		str	r2, [r3, #64]
 1096 0012 1B6C     		ldr	r3, [r3, #64]
 1097 0014 03F08053 		and	r3, r3, #268435456
 1098 0018 0193     		str	r3, [sp, #4]
 1099 001a 019B     		ldr	r3, [sp, #4]
 1100              	.LBE7:
 1101              	.LBB8:
 186:Src/main.c    **** 
 1102              		.loc 1 186 0
 1103 001c 0294     		str	r4, [sp, #8]
 1104 001e 204A     		ldr	r2, .L48+4
 1105 0020 1368     		ldr	r3, [r2]
 1106 0022 23F44043 		bic	r3, r3, #49152
 1107 0026 43F40043 		orr	r3, r3, #32768
 1108 002a 1360     		str	r3, [r2]
 1109 002c 1368     		ldr	r3, [r2]
 1110 002e 03F44043 		and	r3, r3, #49152
 1111 0032 0293     		str	r3, [sp, #8]
 1112 0034 029B     		ldr	r3, [sp, #8]
 1113              	.LBE8:
 190:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1114              		.loc 1 190 0
 1115 0036 0225     		movs	r5, #2
 1116 0038 0895     		str	r5, [sp, #32]
 191:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 1117              		.loc 1 191 0
 1118 003a 0123     		movs	r3, #1
 1119 003c 0B93     		str	r3, [sp, #44]
 192:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1120              		.loc 1 192 0
 1121 003e 1023     		movs	r3, #16
 1122 0040 0C93     		str	r3, [sp, #48]
 193:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1123              		.loc 1 193 0
 1124 0042 0E95     		str	r5, [sp, #56]
 194:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1125              		.loc 1 194 0
 1126 0044 0F94     		str	r4, [sp, #60]
 195:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 72;
 1127              		.loc 1 195 0
 1128 0046 0823     		movs	r3, #8
 1129 0048 1093     		str	r3, [sp, #64]
 196:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1130              		.loc 1 196 0
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s 			page 35


 1131 004a 4823     		movs	r3, #72
 1132 004c 1193     		str	r3, [sp, #68]
 197:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1133              		.loc 1 197 0
 1134 004e 1295     		str	r5, [sp, #72]
 198:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1135              		.loc 1 198 0
 1136 0050 0426     		movs	r6, #4
 1137 0052 1396     		str	r6, [sp, #76]
 199:Src/main.c    ****   {
 1138              		.loc 1 199 0
 1139 0054 08A8     		add	r0, sp, #32
 1140 0056 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1141              	.LVL66:
 206:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1142              		.loc 1 206 0
 1143 005a 0F23     		movs	r3, #15
 1144 005c 0393     		str	r3, [sp, #12]
 208:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1145              		.loc 1 208 0
 1146 005e 0495     		str	r5, [sp, #16]
 209:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1147              		.loc 1 209 0
 1148 0060 0594     		str	r4, [sp, #20]
 210:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV4;
 1149              		.loc 1 210 0
 1150 0062 4FF48053 		mov	r3, #4096
 1151 0066 0693     		str	r3, [sp, #24]
 211:Src/main.c    **** 
 1152              		.loc 1 211 0
 1153 0068 4FF4A053 		mov	r3, #5120
 1154 006c 0793     		str	r3, [sp, #28]
 213:Src/main.c    ****   {
 1155              		.loc 1 213 0
 1156 006e 03A8     		add	r0, sp, #12
 1157 0070 2946     		mov	r1, r5
 1158 0072 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1159              	.LVL67:
 220:Src/main.c    **** 
 1160              		.loc 1 220 0
 1161 0076 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1162              	.LVL68:
 1163 007a 0A4B     		ldr	r3, .L48+8
 1164 007c A3FB0030 		umull	r3, r0, r3, r0
 1165 0080 8009     		lsrs	r0, r0, #6
 1166 0082 FFF7FEFF 		bl	HAL_SYSTICK_Config
 1167              	.LVL69:
 224:Src/main.c    **** 
 1168              		.loc 1 224 0
 1169 0086 3046     		mov	r0, r6
 1170 0088 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 1171              	.LVL70:
 227:Src/main.c    **** }
 1172              		.loc 1 227 0
 1173 008c 4FF0FF30 		mov	r0, #-1
 1174 0090 2146     		mov	r1, r4
 1175 0092 2246     		mov	r2, r4
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s 			page 36


 1176 0094 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 1177              	.LVL71:
 228:Src/main.c    **** 
 1178              		.loc 1 228 0
 1179 0098 14B0     		add	sp, sp, #80
 1180              	.LCFI27:
 1181              		.cfi_def_cfa_offset 16
 1182              		@ sp needed
 1183 009a 70BD     		pop	{r4, r5, r6, pc}
 1184              	.L49:
 1185              		.align	2
 1186              	.L48:
 1187 009c 00380240 		.word	1073887232
 1188 00a0 00700040 		.word	1073770496
 1189 00a4 D34D6210 		.word	274877907
 1190              		.cfi_endproc
 1191              	.LFE126:
 1193              		.section	.text.main,"ax",%progbits
 1194              		.align	2
 1195              		.global	main
 1196              		.thumb
 1197              		.thumb_func
 1199              	main:
 1200              	.LFB125:
 113:Src/main.c    ****   /* USER CODE BEGIN 1 */
 1201              		.loc 1 113 0
 1202              		.cfi_startproc
 1203              		@ args = 0, pretend = 0, frame = 0
 1204              		@ frame_needed = 0, uses_anonymous_args = 0
 1205 0000 38B5     		push	{r3, r4, r5, lr}
 1206              	.LCFI28:
 1207              		.cfi_def_cfa_offset 16
 1208              		.cfi_offset 3, -16
 1209              		.cfi_offset 4, -12
 1210              		.cfi_offset 5, -8
 1211              		.cfi_offset 14, -4
 120:Src/main.c    **** 
 1212              		.loc 1 120 0
 1213 0002 FFF7FEFF 		bl	HAL_Init
 1214              	.LVL72:
 126:Src/main.c    **** 
 1215              		.loc 1 126 0
 1216 0006 FFF7FEFF 		bl	SystemClock_Config
 1217              	.LVL73:
 132:Src/main.c    ****   MX_I2C1_Init();
 1218              		.loc 1 132 0
 1219 000a FFF7FEFF 		bl	MX_GPIO_Init
 1220              	.LVL74:
 133:Src/main.c    ****   MX_TIM1_Init();
 1221              		.loc 1 133 0
 1222 000e FFF7FEFF 		bl	MX_I2C1_Init
 1223              	.LVL75:
 134:Src/main.c    ****   MX_TIM2_Init();
 1224              		.loc 1 134 0
 1225 0012 FFF7FEFF 		bl	MX_TIM1_Init
 1226              	.LVL76:
 135:Src/main.c    ****   MX_TIM3_Init();
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s 			page 37


 1227              		.loc 1 135 0
 1228 0016 FFF7FEFF 		bl	MX_TIM2_Init
 1229              	.LVL77:
 136:Src/main.c    ****   MX_TIM10_Init();
 1230              		.loc 1 136 0
 1231 001a FFF7FEFF 		bl	MX_TIM3_Init
 1232              	.LVL78:
 137:Src/main.c    ****   MX_TIM11_Init();
 1233              		.loc 1 137 0
 1234 001e FFF7FEFF 		bl	MX_TIM10_Init
 1235              	.LVL79:
 138:Src/main.c    ****   MX_USART6_UART_Init();
 1236              		.loc 1 138 0
 1237 0022 FFF7FEFF 		bl	MX_TIM11_Init
 1238              	.LVL80:
 139:Src/main.c    ****   MX_ADC1_Init();
 1239              		.loc 1 139 0
 1240 0026 FFF7FEFF 		bl	MX_USART6_UART_Init
 1241              	.LVL81:
 140:Src/main.c    ****   /* USER CODE BEGIN 2 */
 1242              		.loc 1 140 0
 1243 002a FFF7FEFF 		bl	MX_ADC1_Init
 1244              	.LVL82:
 142:Src/main.c    ****   HAL_Delay(1000);
 1245              		.loc 1 142 0
 1246 002e FFF7FEFF 		bl	ssd1306_Init
 1247              	.LVL83:
 143:Src/main.c    ****   ssd1306_Fill(Black);
 1248              		.loc 1 143 0
 1249 0032 4FF47A70 		mov	r0, #1000
 1250 0036 FFF7FEFF 		bl	HAL_Delay
 1251              	.LVL84:
 144:Src/main.c    ****   ssd1306_WriteString("Hola Boyo", Font_11x18, White);
 1252              		.loc 1 144 0
 1253 003a 0020     		movs	r0, #0
 1254 003c FFF7FEFF 		bl	ssd1306_Fill
 1255              	.LVL85:
 145:Src/main.c    ****   ssd1306_UpdateScreen();
 1256              		.loc 1 145 0
 1257 0040 1B4B     		ldr	r3, .L53
 1258 0042 1C48     		ldr	r0, .L53+4
 1259 0044 93E80600 		ldmia	r3, {r1, r2}
 1260 0048 0123     		movs	r3, #1
 1261 004a FFF7FEFF 		bl	ssd1306_WriteString
 1262              	.LVL86:
 146:Src/main.c    ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_13, GPIO_PIN_RESET);
 1263              		.loc 1 146 0
 1264 004e FFF7FEFF 		bl	ssd1306_UpdateScreen
 1265              	.LVL87:
 147:Src/main.c    ****   /* USER CODE END 2 */
 1266              		.loc 1 147 0
 1267 0052 1948     		ldr	r0, .L53+8
 1268 0054 4FF40051 		mov	r1, #8192
 1269 0058 0022     		movs	r2, #0
 1270 005a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1271              	.LVL88:
 152:Src/main.c    **** 
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s 			page 38


 1272              		.loc 1 152 0
 1273 005e 0D20     		movs	r0, #13
 1274 0060 FFF7FEFF 		bl	malloc
 1275              	.LVL89:
 1276 0064 0546     		mov	r5, r0
 1277              	.LVL90:
 1278              	.L51:
 156:Src/main.c    ****     delayUs(15); //delay 15ms
 1279              		.loc 1 156 0 discriminator 1
 1280 0066 144C     		ldr	r4, .L53+8
 1281 0068 2046     		mov	r0, r4
 1282 006a 4FF40051 		mov	r1, #8192
 1283 006e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1284              	.LVL91:
 157:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_13);
 1285              		.loc 1 157 0 discriminator 1
 1286 0072 0F20     		movs	r0, #15
 1287 0074 FFF7FEFF 		bl	delayUs
 1288              	.LVL92:
 158:Src/main.c    ****     HAL_Delay(60);
 1289              		.loc 1 158 0 discriminator 1
 1290 0078 2046     		mov	r0, r4
 1291 007a 4FF40051 		mov	r1, #8192
 1292 007e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1293              	.LVL93:
 159:Src/main.c    ****     ssd1306_SetCursor(0, 0);
 1294              		.loc 1 159 0 discriminator 1
 1295 0082 3C20     		movs	r0, #60
 1296 0084 FFF7FEFF 		bl	HAL_Delay
 1297              	.LVL94:
 160:Src/main.c    ****     sprintf(adc, "val: %d    ", (int)sonarVal);
 1298              		.loc 1 160 0 discriminator 1
 1299 0088 0020     		movs	r0, #0
 1300 008a 0146     		mov	r1, r0
 1301 008c FFF7FEFF 		bl	ssd1306_SetCursor
 1302              	.LVL95:
 161:Src/main.c    ****     ssd1306_WriteString(adc, Font_11x18, White);
 1303              		.loc 1 161 0 discriminator 1
 1304 0090 0A4B     		ldr	r3, .L53+12
 1305 0092 1A68     		ldr	r2, [r3]
 1306 0094 2846     		mov	r0, r5
 1307 0096 0A49     		ldr	r1, .L53+16
 1308 0098 FFF7FEFF 		bl	sprintf
 1309              	.LVL96:
 162:Src/main.c    ****     ssd1306_UpdateScreen();
 1310              		.loc 1 162 0 discriminator 1
 1311 009c 044B     		ldr	r3, .L53
 1312 009e 2846     		mov	r0, r5
 1313 00a0 93E80600 		ldmia	r3, {r1, r2}
 1314 00a4 0123     		movs	r3, #1
 1315 00a6 FFF7FEFF 		bl	ssd1306_WriteString
 1316              	.LVL97:
 163:Src/main.c    ****   }
 1317              		.loc 1 163 0 discriminator 1
 1318 00aa FFF7FEFF 		bl	ssd1306_UpdateScreen
 1319              	.LVL98:
 164:Src/main.c    ****   /* USER CODE END WHILE */
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s 			page 39


 1320              		.loc 1 164 0 discriminator 1
 1321 00ae DAE7     		b	.L51
 1322              	.L54:
 1323              		.align	2
 1324              	.L53:
 1325 00b0 00000000 		.word	Font_11x18
 1326 00b4 00000000 		.word	.LC0
 1327 00b8 00000240 		.word	1073872896
 1328 00bc 00000000 		.word	sonarVal
 1329 00c0 0C000000 		.word	.LC1
 1330              		.cfi_endproc
 1331              	.LFE125:
 1333              		.section	.text._Error_Handler,"ax",%progbits
 1334              		.align	2
 1335              		.global	_Error_Handler
 1336              		.thumb
 1337              		.thumb_func
 1339              	_Error_Handler:
 1340              	.LFB136:
 668:Src/main.c    **** 
 669:Src/main.c    **** /* USER CODE BEGIN 4 */
 670:Src/main.c    **** /* USER CODE END 4 */
 671:Src/main.c    **** 
 672:Src/main.c    **** /**
 673:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 674:Src/main.c    ****   * @param  file: The file name as string.
 675:Src/main.c    ****   * @param  line: The line in file as a number.
 676:Src/main.c    ****   * @retval None
 677:Src/main.c    ****   */
 678:Src/main.c    **** void _Error_Handler(char *file, int line)
 679:Src/main.c    **** {
 1341              		.loc 1 679 0
 1342              		.cfi_startproc
 1343              		@ args = 0, pretend = 0, frame = 0
 1344              		@ frame_needed = 0, uses_anonymous_args = 0
 1345              		@ link register save eliminated.
 1346              	.LVL99:
 1347 0000 7047     		bx	lr
 1348              		.cfi_endproc
 1349              	.LFE136:
 1351              		.comm	huart6,64,4
 1352              		.comm	htim11,60,4
 1353              		.comm	htim10,60,4
 1354              		.comm	htim3,60,4
 1355              		.comm	htim2,60,4
 1356              		.comm	htim1,60,4
 1357              		.comm	hi2c1,84,4
 1358              		.comm	hadc1,72,4
 1359 0002 00BF     		.section	.rodata.str1.4,"aMS",%progbits,1
 1360              		.align	2
 1361              	.LC0:
 1362 0000 486F6C61 		.ascii	"Hola Boyo\000"
 1362      20426F79 
 1362      6F00
 1363 000a 0000     		.space	2
 1364              	.LC1:
 1365 000c 76616C3A 		.ascii	"val: %d    \000"
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s 			page 40


 1365      20256420 
 1365      20202000 
 1366              		.text
 1367              	.Letext0:
 1368              		.file 2 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 1369              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/machine/_default_types
 1370              		.file 4 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/sys/_stdint.h"
 1371              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 1372              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1373              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1374              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1375              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1376              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1377              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1378              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 1379              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 1380              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1381              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 1382              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1383              		.file 17 "Inc/fonts.h"
 1384              		.file 18 "Inc/ssd1306.h"
 1385              		.file 19 "Inc/stm32f4xx_it.h"
 1386              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 1387              		.file 21 "<built-in>"
 1388              		.file 22 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1389              		.file 23 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/stdio.h"
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s 			page 41


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s:21     .text.MX_GPIO_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s:304    .text.MX_GPIO_Init:00000000000001a0 $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s:314    .text.MX_I2C1_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s:318    .text.MX_I2C1_Init:0000000000000000 MX_I2C1_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s:359    .text.MX_I2C1_Init:0000000000000028 $d
                            *COM*:0000000000000054 hi2c1
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s:366    .text.MX_TIM3_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s:370    .text.MX_TIM3_Init:0000000000000000 MX_TIM3_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s:428    .text.MX_TIM3_Init:000000000000003c $d
                            *COM*:000000000000003c htim3
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s:434    .text.MX_TIM1_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s:438    .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s:565    .text.MX_TIM1_Init:000000000000009c $d
                            *COM*:000000000000003c htim1
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s:571    .text.MX_TIM10_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s:575    .text.MX_TIM10_Init:0000000000000000 MX_TIM10_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s:639    .text.MX_TIM10_Init:0000000000000040 $d
                            *COM*:000000000000003c htim10
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s:645    .text.MX_TIM11_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s:649    .text.MX_TIM11_Init:0000000000000000 MX_TIM11_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s:713    .text.MX_TIM11_Init:0000000000000040 $d
                            *COM*:000000000000003c htim11
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s:719    .text.MX_TIM2_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s:723    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s:823    .text.MX_TIM2_Init:000000000000007c $d
                            *COM*:000000000000003c htim2
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s:829    .text.MX_USART6_UART_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s:833    .text.MX_USART6_UART_Init:0000000000000000 MX_USART6_UART_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s:872    .text.MX_USART6_UART_Init:0000000000000024 $d
                            *COM*:0000000000000040 huart6
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s:878    .text.MX_ADC1_Init:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s:882    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s:953    .text.MX_ADC1_Init:0000000000000044 $d
                            *COM*:0000000000000048 hadc1
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s:960    .text.getUs:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s:965    .text.getUs:0000000000000000 getUs
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s:1014   .text.getUs:0000000000000034 $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s:1020   .text.delayUs:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s:1025   .text.delayUs:0000000000000000 delayUs
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s:1067   .text.SystemClock_Config:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s:1072   .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s:1187   .text.SystemClock_Config:000000000000009c $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s:1194   .text.main:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s:1199   .text.main:0000000000000000 main
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s:1325   .text.main:00000000000000b0 $d
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s:1334   .text._Error_Handler:0000000000000000 $t
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s:1339   .text._Error_Handler:0000000000000000 _Error_Handler
/var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s:1360   .rodata.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
ARM GAS  /var/folders/ck/4xtm3skj1ssb0w4rn7_4q_gw0000gn/T//ccbdFFvG.s 			page 42


HAL_NVIC_EnableIRQ
HAL_I2C_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_Init
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_TIM_OC_Init
HAL_TIM_OC_ConfigChannel
HAL_UART_Init
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_RCC_GetSysClockFreq
HAL_GetTick
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_Init
ssd1306_Init
HAL_Delay
ssd1306_Fill
ssd1306_WriteString
ssd1306_UpdateScreen
malloc
HAL_GPIO_TogglePin
ssd1306_SetCursor
sprintf
Font_11x18
sonarVal
